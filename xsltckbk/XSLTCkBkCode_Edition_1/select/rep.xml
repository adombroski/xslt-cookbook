<?xml version="1.0" encoding="utf-8"?>
<elt:TEMPLATE version="1.0" xmlns:cgen="http://www.siac.com/namespaces/repository/C++gen" xmlns:elt="http://www.siac.com/namespaces/repository/elementTemplate" xmlns:rep="http://www.siac.com/namespaces/repository" xmlns="http://www.siac.com/namespaces/repository">
<Constants xmlns:loc="http://www.siac.com/makeFlatRepository.xsl" xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance">
<Enumerator name="ADDED_DLL" value="2"/>
<Enumerator name="ADDED_NDLL" value="1"/>
<Enumerator name="ALL_DATA" value="2"/>
<Enumerator name="aq_autoquote" value="2"/>
<Enumerator name="auto_exec_off" value="0"/>
<Enumerator name="auto_exec_on" value="1"/>
<Enumerator name="auto_exec" value="14"/>
<Enumerator name="auto_quote_clear" value="4"/>
<Enumerator name="auto_quote_none" value="0"/>
<Enumerator name="auto_quote_s1" value="1"/>
<Enumerator name="auto_quote_s2" value="2"/>
<Enumerator name="auto_quote_s3" value="3"/>
<Enumerator name="autoquote" value="12"/>
<Enumerator name="block_bit" value="1"/>
<Enumerator name="BLOCK_EXECUTE" value="0"/>
<Enumerator name="BLOCK_FILE_AND_ELECT" value="2"/>
<Enumerator name="BLOCK_VALIDATE_ONLY" value="1"/>
<Enumerator name="blockS_bit" value="2"/>
<Enumerator name="BR_ABOVE" value="1"/>
<Enumerator name="BR_BADGE_BOT" value="0"/>
<Enumerator name="BR_BADGE_SKIPLINE" value="1"/>
<Enumerator name="BR_BADGE_SLD" value="2"/>
<Enumerator name="BR_BELOW" value="2"/>
<Enumerator name="BR_PAGE_SIZE" value="0"/>
<Enumerator name="BR_SIZE" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="c_MAXSEQ" value="1"/>
<Enumerator name="c_MINSEQ" value="0"/>
<Enumerator name="closed" value="0"/>
<Enumerator name="DEPTH_BID" value="1" cgen:file="/mnt/pos.shrb/include/events/QuoteDepth.h">
<Annotation>
<Comment>depth on the bid side only</Comment>
</Annotation>
</Enumerator>
<Enumerator name="DEPTH_BOTH" value="3" cgen:file="/mnt/pos.shrb/include/events/QuoteDepth.h">
<Annotation>
<Comment>depth on both bid and offer side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="DEPTH_NONE" value="0" cgen:file="/mnt/pos.shrb/include/events/QuoteDepth.h">
<Annotation>
<Comment>no depth in either side of the quote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="DEPTH_OFFER" value="2" cgen:file="/mnt/pos.shrb/include/events/QuoteDepth.h">
<Annotation>
<Comment>depth on the offer side only</Comment>
</Annotation>
</Enumerator>
<Enumerator name="DET_GV" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="DLL_AB" value="0"/>
<Enumerator name="dll_aborted" value="3"/>
<Enumerator name="DLL_DONE" value="3"/>
<Enumerator name="DLL_HALF" value="4"/>
<Enumerator name="DLL_NONE" value="5"/>
<Enumerator name="dll_on" value="1"/>
<Enumerator name="dlled" value="2"/>
<Enumerator name="dll" value="1"/>
<Enumerator name="EMPTY_DEPTH_INDICATION" value="0"/>
<Enumerator name="eqa_assisted_quote" value="1"/>
<Enumerator name="eqa_on" value="0"/>
<Enumerator name="eqa_prio1" value="2"/>
<Enumerator name="eqa_prio2" value="3"/>
<Enumerator name="eqa_stage1" value="4"/>
<Enumerator name="eqa_stage2" value="5"/>
<Enumerator name="eqa" value="8"/>
<Enumerator name="flash_card" value="11"/>
<Enumerator name="freeze" value="5"/>
<Enumerator name="frozen_blink" value="2"/>
<Enumerator name="frozen_rpt_blink" value="3"/>
<Enumerator name="frozen" value="1"/>
<Enumerator name="FULL_UPDATE" value="0"/>
<Enumerator name="its_bit" value="13"/>
<Enumerator name="ITS_EXPIRATION_1MIN" value="49" cgen:expression="'1'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_EXPIRATION_2MIN" value="50" cgen:expression="'2'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_EXPIRATION_30SEC" value="48" cgen:expression="'0'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="its_multi_usr" value="4" cgen:expression="0x004" cgen:file="/mnt/pos.shrb/include/events/REJECT1.h"/>
<Enumerator name="its_one_step_bit" value="19"/>
<Enumerator name="last_sale_bit" value="8"/>
<Enumerator name="lastsale" value="3"/>
<Enumerator name="late_to_close" value="16"/>
<Enumerator name="ltc_off" value="1"/>
<Enumerator name="ltc_on" value="0"/>
<Enumerator name="MAX_MKT_TRADES" value="0"/>
<Enumerator name="MAX_SR_GV" value="6"/>
<Enumerator name="MD_DEPTH_IND" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<Annotation>
<Comment>indicates Depth Indication Report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MDS_DEPTH_IND_ASK" value="65" cgen:expression="'A'" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="MDS_DEPTH_IND_BID" value="66" cgen:expression="'B'" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="MDS_DEPTH_IND_BOTH" value="72" cgen:expression="'H'" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="MDS_DEPTH_IND_NONE" value="78" cgen:expression="'N'" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="MDS_DEPTH_IND_NULL" value="32" cgen:expression="' '" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="mmp_best_away_quote" value="4"/>
<Enumerator name="mmp_buy_better_away_mkt" value="5"/>
<Enumerator name="mmp_buy_clearbit" value="7"/>
<Enumerator name="mmp_its_eligible" value="9"/>
<Enumerator name="mmp_news_alert1" value="0"/>
<Enumerator name="mmp_news_alert2" value="1"/>
<Enumerator name="mmp_news_alert3" value="2"/>
<Enumerator name="mmp_news_clearbit" value="3"/>
<Enumerator name="mmp_news_hot1" value="3"/>
<Enumerator name="mmp_news_hot2" value="4"/>
<Enumerator name="mmp_news_hot3" value="5"/>
<Enumerator name="mmp_news" value="2"/>
<Enumerator name="mmp_off" value="1"/>
<Enumerator name="mmp_on" value="0"/>
<Enumerator name="mmp_sell_better_away_mkt" value="6"/>
<Enumerator name="mmp_sell_clearbit" value="8"/>
<Enumerator name="mmp" value="9"/>
<Enumerator name="moc_imbalance_bit" value="18"/>
<Enumerator name="moo_imbalance_bit" value="17"/>
<Enumerator name="MQ_NEW_QUOTE_OLD_XPRESS" value="50" cgen:expression="'2'" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="MQ_NOT_XPRESS_QUOTE" value="32" cgen:expression="' '" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="MQ_OLD_QUOTE_CXL_XPRESS" value="51" cgen:expression="'3'" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="MQ_OLD_QUOTE_NEW_XPRESS" value="49" cgen:expression="'1'" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="MQ_OLD_QUOTE_OLD_XPRESS" value="52" cgen:expression="'4'" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="ms_permanent" value="0"/>
<Enumerator name="ms_temporary" value="1"/>
<Enumerator name="multi_usr_lock" value="1" cgen:expression="0x001" cgen:file="/mnt/pos.shrb/include/events/REJECT1.h"/>
<Enumerator name="no_reason" value="0" cgen:expression="0x0" cgen:file="/mnt/pos.shrb/include/events/REJECT1.h"/>
<Enumerator name="nolock_bit" value="0"/>
<Enumerator name="not_dlld_yet" value="3" cgen:expression="0x003" cgen:file="/mnt/pos.shrb/include/events/REJECT1.h"/>
<Enumerator name="not_dlled" value="0"/>
<Enumerator name="NOT_EMPTY_DEPTH_INDICATION" value="1"/>
<Enumerator name="notfrozen" value="0"/>
<Enumerator name="oars_adm_bit" value="7"/>
<Enumerator name="one_rlot_buy" value="0"/>
<Enumerator name="one_rlot_sell" value="1"/>
<Enumerator name="only_drop_del" value="2" cgen:expression="0x002" cgen:file="/mnt/pos.shrb/include/events/REJECT1.h"/>
<Enumerator name="open_cap" value="10"/>
<Enumerator name="open" value="2"/>
<Enumerator name="PM_CUSTOM" value="2"/>
<Enumerator name="POSITION_DATA" value="0"/>
<Enumerator name="PT_STOP_EXISTS" value="45"/>
<Enumerator name="QM_AQ_XPRESS" value="4096" cgen:expression="0x1000" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>XPress AutoQuote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QR_BEST_BOOK_AFTER_REDUCE" value="0"/>
<Enumerator name="quote_hi" value="7"/>
<Enumerator name="quote_hilite_off" value="0"/>
<Enumerator name="quote_hilite_on" value="1"/>
<Enumerator name="quote_setup_bit" value="10"/>
<Enumerator name="quote" value="4"/>
<Enumerator name="real_names_bit" value="20"/>
<Enumerator name="REQ_TO_DEL_MSG" value="0"/>
<Enumerator name="REQ_TO_DEL_TASK_MSGS" value="1"/>
<Enumerator name="rnp_off" value="0"/>
<Enumerator name="rnp_on" value="1"/>
<Enumerator name="rnp" value="13"/>
<Enumerator name="rpt_stat_bit" value="12"/>
<Enumerator name="rpt_stat_setup_bit" value="11"/>
<Enumerator name="rptS_bit" value="3"/>
<Enumerator name="rptsts" value="6"/>
<Enumerator name="selectS_bit" value="4"/>
<Enumerator name="SEQ_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="sidecar_bit" value="16"/>
<Enumerator name="SR_MODE_EXE" value="1"/>
<Enumerator name="SR_MODE_WARNING" value="0"/>
<Enumerator name="SR_REJ_BETTER_STOPPED" value="1"/>
<Enumerator name="SR_REJ_QTY_AON" value="0"/>
<Enumerator name="SR_REJ_QTY_CAP" value="2"/>
<Enumerator name="SR_REJ_RNP_BID" value="3"/>
<Enumerator name="SR_REJ_RNP_OFFER" value="4"/>
<Enumerator name="SR_REJ_XPRESS_CANCEL_LOCKOUT_BID" value="7"/>
<Enumerator name="SR_REJ_XPRESS_CANCEL_LOCKOUT_OFFER" value="8"/>
<Enumerator name="SR_REJ_XPRESS_PENDING_BID" value="5"/>
<Enumerator name="SR_REJ_XPRESS_PENDING_OFFER" value="6"/>
<Enumerator name="SRF_FILE_AND_ELECT" value="1"/>
<Enumerator name="SRF_LSALE_UPDATE" value="0"/>
<Enumerator name="SRF_NON_BLOCKING" value="4"/>
<Enumerator name="SRF_QUOTE_UPDATE" value="2"/>
<Enumerator name="SRF_TRADE_UPDATE" value="5"/>
<Enumerator name="SRF_USE_DEFAULT_BOOK" value="0"/>
<Enumerator name="SRF_VALIDATE_ONLY" value="3"/>
<Enumerator name="srS_bit" value="15"/>
<Enumerator name="stk_setup_bit" value="9"/>
<Enumerator name="stp_mkt_rqst_bit" value="5"/>
<Enumerator name="summary_rpt_lock" value="5" cgen:expression="0x005" cgen:file="/mnt/pos.shrb/include/events/REJECT1.h"/>
<Enumerator name="tick_fileS_bit" value="6"/>
<Enumerator name="TRADE_DATA" value="1"/>
<Enumerator name="unfreeze_rpt_blink" value="4"/>
<Enumerator name="univS_bit" value="14"/>
<Enumerator name="xpress_buy" value="0"/>
<Enumerator name="xpress_quote" value="15"/>
<Enumerator name="xpress_sell" value="1"/>
<Enumerator imported="yes" name="BDF_EQA_ON" value="1" cgen:expression="0x00000001" cgen:file="/mnt/pos.shrb/include/misc/book_qup.h">
<Annotation>
<Comment>
     eqa -on (auto-quote feature is on) 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DENOM_CODE_UNDEF" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_2TH" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_4TH" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_8TH" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_16TH" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_32TH" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_64TH" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_128TH" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_256TH" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_0TH" value="9" cgen:expression="9" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_1TH" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_10TH" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_100TH" value="12" cgen:expression="12" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_1000TH" value="13" cgen:expression="13" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_10000TH" value="14" cgen:expression="14" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_100000TH" value="15" cgen:expression="15" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_CODE_1000000TH" value="16" cgen:expression="16" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_UNDEF" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_2TH" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_4TH" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_8TH" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_16TH" value="16" cgen:expression="16" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_32TH" value="32" cgen:expression="32" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_64TH" value="64" cgen:expression="64" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_128TH" value="128" cgen:expression="128" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_256TH" value="256" cgen:expression="256" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_0TH" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_1TH" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_10TH" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_100TH" value="100" cgen:expression="100" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_1000TH" value="1000" cgen:expression="1000" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_10000TH" value="10000" cgen:expression="10000" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_100000TH" value="100000" cgen:expression="100000" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator name="DENOM_1000000TH" value="1000000" cgen:expression="1000000" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Enumerator imported="yes" name="N_ITSFIRMS_N" value="16" cgen:file="/mnt/pos.shrb/include/misc/its_struct.h"/>
<Enumerator imported="yes" name="N_ITSFIRMS_A" value="13" cgen:file="/mnt/pos.shrb/include/misc/its_struct.h"/>
<Enumerator imported="yes" name="N_EXCP_FIRMS" value="8" cgen:file="/mnt/pos.shrb/include/misc/its_struct.h"/>
<Enumerator imported="yes" name="N_NC_EXCP_FIRMS" value="7" cgen:file="/mnt/pos.shrb/include/misc/its_struct.h"/>
<Enumerator imported="yes" name="MAX_QTY_SIZE" value="5" cgen:file="/mnt/pos.shrb/include/misc/its_struct.h"/>
<Enumerator imported="yes" name="MAX_QTY_NL_PRIN" value="2499" cgen:file="/mnt/pos.shrb/include/misc/its_struct.h"/>
<Enumerator imported="yes" name="GU_LINE_MIN_SIZE" value="31" cgen:file="/mnt/pos.shrb/include/misc/its_struct.h"/>
<Enumerator imported="yes" name="GU_LINE_MAX_SIZE" value="35" cgen:file="/mnt/pos.shrb/include/misc/its_struct.h"/>
<Enumerator name="D_BUY" value="49" cgen:expression="'1'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     order is a BUY order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_SELL" value="50" cgen:expression="'2'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h"/>
<Enumerator name="D_SSHRT" value="51" cgen:expression="'3'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h"/>
<Enumerator name="D_EXEMPT" value="52" cgen:expression="'4'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     sell short exempt 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_BUY_MINUS" value="53" cgen:expression="'5'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     buy minus order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_SELL_PLUS" value="54" cgen:expression="'6'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     sell plus order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_MKT" value="48" cgen:expression="'0'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     market order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_LMT" value="49" cgen:expression="'1'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     regular limit order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_STP" value="50" cgen:expression="'2'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     stop order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_STP_LMT" value="51" cgen:expression="'3'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     stop limit order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_MKT_CLO" value="52" cgen:expression="'4'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     market close(?) order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_MKT_OB" value="53" cgen:expression="'5'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     market or better 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_MIT" value="54" cgen:expression="'6'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h"/>
<Enumerator name="D_CAB" value="55" cgen:expression="'7'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h"/>
<Enumerator name="D_MKT_WOW" value="56" cgen:expression="'8'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h"/>
<Enumerator name="D_LMT_OB" value="57" cgen:expression="'9'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h"/>
<Enumerator name="D_LMT_WOW" value="65" cgen:expression="'A'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h"/>
<Enumerator name="D_LOC" value="68" cgen:expression="'D'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     Limit on close 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_MKT_DAY" value="49" cgen:expression="'1'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h"/>
<Enumerator name="D_MKT_GTC" value="50" cgen:expression="'2'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     day or good til cancelled 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_OPG" value="51" cgen:expression="'3'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     opening - mkt or lmt 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_LMT_GTC" value="52" cgen:expression="'4'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     limit GTC 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_OC" value="53" cgen:expression="'5'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     immediate or cancel 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_FOK" value="54" cgen:expression="'6'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     fill or kill 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_LMT_DAY" value="55" cgen:expression="'7'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     day limit order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_XPR" value="57" cgen:expression="'9'" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     Institutional Express order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_AON" value="32768" cgen:expression="0x8000" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     AON modifier 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_TTS" value="16384" cgen:expression="0x4000" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     Try to Stop 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_DNI" value="8192" cgen:expression="0x2000" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     Do not Increase 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_DNR" value="4096" cgen:expression="0x1000" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     DO not reduce 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_CAP" value="512" cgen:expression="0x200" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     CAP order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_TICK" value="2048" cgen:expression="0x800" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     set if have overnight Tick order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_PFILED" value="1024" cgen:expression="0x400" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     Permanently filed = 1, temp = 0 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_ELECTED" value="256" cgen:expression="0x100" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     elected for Stp and Stp-lmt 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_EFF_SEQ_ON" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     set if SDOT accepts Eff. Seq. 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_NX" value="64" cgen:expression="0x0040" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     NYSe+ Direct Auto executing order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="D_NXX" value="32" cgen:expression="0x0020" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
     NX order that failed validation in SDOT 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="N_BRKPOINTS" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="BRK_64THS" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>breakpoints 64/32</Comment>
</Annotation>
</Enumerator>
<Enumerator name="BRK_32NDS" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>breakpoints 32/16</Comment>
</Annotation>
</Enumerator>
<Enumerator name="BRK_16THS" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>breakpoints 16/8</Comment>
</Annotation>
</Enumerator>
<Enumerator name="DFLT_BP_64" value="16" cgen:expression="(PRICE)16" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>default 16ths bp = 1/4</Comment>
</Annotation>
</Enumerator>
<Enumerator name="DFLT_BP_32" value="32" cgen:expression="(PRICE)32" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>default 32nds bp = 1/2</Comment>
</Annotation>
</Enumerator>
<Enumerator name="DFLT_BP_16" value="64" cgen:expression="(PRICE)64" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>default 64ths bp = 1</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TICKS_PER_DOLLAR" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="PUS_PER_DOLLAR" value="64" cgen:expression="(PRICE)64" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>price-units per dollar</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PRICE_TICK" value="8" cgen:expression="((unsigned int)PUS_PER_DOLLAR/8)" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>(price-units per tick)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MIN_PRICE" value="1" cgen:expression="SIXTYFOURTH_64" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>1/64 in sixtyfourths</Comment>
</Annotation>
</Enumerator>
<Enumerator name="LMT_BLANK" value="-1" cgen:expression="(short)(-1)" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="MDS_BLANK" value="5000" cgen:expression="(short)5000" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="BUY_IDX" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>buy index</Comment>
</Annotation>
</Enumerator>
<Enumerator name="B" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>for short</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SELL_IDX" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>sell index</Comment>
</Annotation>
</Enumerator>
<Enumerator name="S" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>for short</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OT_STP" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>stop order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OT_STP_LMT" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>stop limit order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OT_AON" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>all or none order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OT_LMT" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>normal limit order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OT_MKT" value="16" cgen:expression="0x0010" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>market order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OT_TICK_S" value="8192" cgen:expression="0x2000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>Tick Sensitive Order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OT_LOC" value="32768" cgen:expression="0x8000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>Limit On Close order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OT_CAP" value="16384" cgen:expression="0x4000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>CAP</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OT_AUTOEX" value="65536" cgen:expression="0x10000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>Auto execution</Comment>
</Annotation>
</Enumerator>
<Enumerator name="STP" value="1" cgen:expression="OT_STP" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="STP_LMT" value="2" cgen:expression="OT_STP_LMT" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="AON" value="4" cgen:expression="OT_AON" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="LMT" value="8" cgen:expression="OT_LMT" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="MKT" value="16" cgen:expression="OT_MKT" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="BUY" value="32" cgen:expression="0x0020" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>bitmask for order type, * and for side in various other structs * value must fit in a CHMASK (byte)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SELL" value="64" cgen:expression="0x0040" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>bitmask for order type, * and for side in various other structs * value must fit in a CHMASK (byte)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SELL_SHORT" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="SS_EXEMPT" value="256" cgen:expression="0x0100" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="OVR_NITE" value="1024" cgen:expression="0x0400" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>order on over night file</Comment>
</Annotation>
</Enumerator>
<Enumerator name="LMT_OPG" value="4096" cgen:expression="0x1000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>LMT on opening. CXL after opening</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TICK_S" value="8192" cgen:expression="OT_TICK_S" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>Deprecated</Comment>
</Annotation>
</Enumerator>
<Enumerator name="LOC" value="32768" cgen:expression="OT_LOC" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>Deprecated</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OC" value="2048" cgen:expression="0x0800" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>Self-canceling order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NON_MACH_FIRM" value="512" cgen:expression="0x0200" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>ZZZ in branch code. no commission</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SELLS" value="448" cgen:expression="(SELL|SELL_SHORT|SS_EXEMPT)" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="ANY_TYPE" value="258175" cgen:expression="(BUY|SELL|OT_LMT|OT_AON|OT_STP|OT_STP_LMT|OT_LOC|OT_MKT|LMT_OPG|OT_TICK_S|OT_CAP|OT_AUTOEX|OT_TICKS_STP)" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="DAY" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>Day - These orders are only good for the day they were entered. Afterhours processing in the Host will remove these orders from the SDOT database at the end of the day</Comment>
</Annotation>
</Enumerator>
<Enumerator name="GTC" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>GTC - These orders are Good Till Cancelled, that means they will NOT be removed from the SDOT database until they have been cancelled</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OPG" value="256" cgen:expression="0x100" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>OPG - these orders are only good at the opening. They will be automatically cancelled immediately following the opening unless they have been executed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="O_DUP" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>possible duplication of order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REP_CXL" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>cancel with replace: (2 orders: simple cancel &amp; new order)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OB" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>or better order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="DNR" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>do not reduce order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="DNI" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>do not increase order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TTS" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>try to stop</Comment>
</Annotation>
</Enumerator>
<Enumerator name="STP_AON" value="512" cgen:expression="0x200" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>for stop aon orders</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PRI_INSERT" value="1024" cgen:expression="0x400" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>priority insert</Comment>
</Annotation>
</Enumerator>
<Enumerator name="P_FILED" value="2048" cgen:expression="0x800" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>tick order is permanently filed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="T_FILED" value="4096" cgen:expression="0x1000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>tick order is temporarily filed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OC_NX" value="65536" cgen:expression="0x10000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>Automatic execution order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OC_NXX" value="131072" cgen:expression="0x20000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>NX order that failed validation</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OC_XPR" value="262144" cgen:expression="0x40000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>IXP order. New TIF</Comment>
</Annotation>
</Enumerator>
<Enumerator name="DLL_TICK_ORDER" value="8192" cgen:expression="0x2000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>Tick order from DLL</Comment>
</Annotation>
</Enumerator>
<Enumerator name="RPTSTS_MSG" value="16384" cgen:expression="0x4000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>report status msg exist for this order -------------------------------------------------------------------</Comment>
</Annotation>
</Enumerator>
<Enumerator name="ELECTED" value="8192" cgen:expression="0x2000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>stp/stp lmt order is elected.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NOT_REDUCED" value="16384" cgen:expression="0x4000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>price not reduced after dividend reduction (from DLL_ORDER_RECORD2::do_divs_pri)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EFF_SEQ_ON" value="32768" cgen:expression="0x8000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>SDOT handles effective sequence</Comment>
</Annotation>
</Enumerator>
<Enumerator name="BUY_SIDE" value="32" cgen:expression="BUY" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="SELL_SIDE" value="64" cgen:expression="SELL" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="BUY_SIDE_IDX" value="0" cgen:expression="BUY_IDX" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="SELL_SIDE_IDX" value="1" cgen:expression="SELL_IDX" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="MAX_MSG_INFO_SIZE" value="240" cgen:expression="240" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
     must be &gt;= sizeof(ORDER_INFO) 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_CLASSES" value="1301" cgen:expression="1301" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="NO_ACTTYPE" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DBK_EXEC" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="ITS_EXEC" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="OLA_EXEC" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="MANUAL_TRADE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="SAX_TRADE" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="NO_CORRECTION" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="SAX_CORRECTION" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs"/>
<Enumerator imported="yes" name="SETTLEMENT_NONE" value="0" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Enumerator imported="yes" name="CASH" value="1" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Enumerator imported="yes" name="NEXT_DAY" value="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Enumerator imported="yes" name="SELLERS_OPTION" value="3" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Enumerator imported="yes" name="SCROLL_UP" value="0" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Enumerator imported="yes" name="SCROLL_DOWN" value="1" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Enumerator imported="yes" name="SCROLL_TOP" value="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Enumerator imported="yes" name="SCROLL_BOTTOM" value="3" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Enumerator imported="yes" name="SCROLL_REFRESH" value="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Enumerator name="PM_MORE_ABOVE" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PM_MORE_BELOW" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="SDOT_EFF_SEQ_ON" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Annotation>
<Comment>
     Flag for pt_ext_crd to
     indicate if SDOT handles
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="N_PAGE_ORDERS" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="NUM_ENTITY" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="NUM_PWD" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="NUM_SPARES" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="SYMBOL_SIZE" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="CI_COUNT" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="SSF_DISP_RQST" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>require a disp final resp</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SSF_DOING_CLOSING" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>doing closing</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SSF_BLK_TOTS_VALID" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>block screen totals are valid</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SSR_MAX" value="2099" cgen:expression="2099" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Threshold for single order official notification</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SSR_QTY_THRESH" value="5100" cgen:expression="5100" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Threshold for ssr qty accumulation</Comment>
</Annotation>
</Enumerator>
<Enumerator name="STP_QTY_THRESH" value="5000" cgen:expression="5000" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Threshold for stp qty accumulation</Comment>
</Annotation>
</Enumerator>
<Enumerator name="STP_VAL_THRESH" value="200000" cgen:expression="200000" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Threshold for value of aggr.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="STP_QTY_GOV_THRESH" value="20000" cgen:expression="20000" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Governor Threshold for aggr. number of orders</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_QUOTE_SIZE" value="99999" cgen:expression="99999" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="MAX_ITS_EXE_GV" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="MAX_ITS_NAME_CHG_GV" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="N_ITS_GV" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="N_MEM_INFO_TYPES" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="NO_ITS_MSG_SLOTS" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="NO_ITS_LISTS" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="NO_ITS_PAGES" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="MAX_ERRTXT_SIZE" value="128" cgen:expression="128" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="L_INT" value="4" cgen:expression="sizeof(int)" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="L_SHORT" value="2" cgen:expression="sizeof(short)" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="L_PRICE" value="4" cgen:expression="sizeof(PRICE)" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="L_QTY" value="2" cgen:expression="sizeof(QTY)" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="L_MILLITIME" value="4" cgen:expression="sizeof(MILLITIME)" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="L_DLL_VERSION" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>size of version field in DLL_LEADER2</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_DLL_REC_LEN" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>size of record length field in DLL_LEADER2</Comment>
</Annotation>
</Enumerator>
<Enumerator name="N_CONTRA" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>ctr_names,qty,badge occur 5 times in DLL activity rec</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_DT_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>date array size in DLL_HEAD</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_TM_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>ditto for time</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_STK_SIZE" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of stock symbol</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_TA_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of LMT II TA #</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_BR_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of branch</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_SEQ_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of sequence</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_MAX_TA" value="25" cgen:expression="25" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>maximum TA #'s for report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_COMMENT_CODE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of prin act comment code</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_COMMENT" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of prin act comment</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_FILLER_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of filler</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_SK_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of sort key</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_SK_SIZE2" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of sort key2</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_MAX_GV" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>max contras for LMT report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_PRICE_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of price in DLL records</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_POSITION_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of PRIN position in DLL rec</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PRICE_TXT_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
     Length of a price 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="QTY_TXT_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
     Length of a quantity 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="FIRM_TXT_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
     Length of firm in give up
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="COND_TXT_SIZE" value="13" cgen:expression="13" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
     Length of conditions 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="BADGE_TXT_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
     Length of badge id 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="TIME_TXT_SIZE" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
     Length of a time 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="TICK_TXT_SIZE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
     Length of tick field 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="YYYYMMDD_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
     Length of a date
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="HHMMSSSS_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
     Length of time with hundreths of a sec
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_ADD" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Quotable order added</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_UNFILED" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Order was unfiled</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_CANCELED" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Order was canceled</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_EXECUTED" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Order was executed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_MAN_QUOTE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>A manual quote was entered which satifies orders</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_EQA_QUOTE" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>EQA automatically quotes , orders satisfied.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_ORDER_IN_LOCKS_MKT" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>An order comes in and changes stk to locked or inv</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_TRADE_HALT" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>There is a trading halt</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_CLOSING" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>The stk is closed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_BETTER_ORDER" value="9" cgen:expression="9" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>A order with a better price came in</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_TIMER_IN_EQA_OFF" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>EQA timer expired but EQA turned off</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_TIMER_IN_MKT_LOCKED" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>EQA timer expired but not quotable due to mkt lock condition</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_EQA_ON_DRIVER_RESET" value="12" cgen:expression="12" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>EQA was off and now is on so we reset the</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_TS_RNP" value="21" cgen:expression="21" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Real names are pending driver and all orders cease being timed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_NX_ORDER_ELIGIBLE" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="QA_NX_NO_QUOTE" value="18" cgen:expression="18" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>The NX order was received prior to the first quote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_NX_TRADING_HALT" value="16" cgen:expression="16" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>There is a trading halt in effect</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_NX_MARKET_CLOSING" value="20" cgen:expression="20" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>The time is one minute prior to Market Close or later</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_NX_NON_FIRM_QUOTE" value="13" cgen:expression="13" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Non-firm quote condition</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_NX_NOT_MARKETABLE" value="17" cgen:expression="17" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>The order was not marketable, based on the limit price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_NX_QUOTE_AWAY_FROM_LAST_SALE" value="19" cgen:expression="19" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="QA_NX_QUOTE_ONE_ROUND_LOT" value="14" cgen:expression="14" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Relevant side of quote is equal to 1 round lot</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QA_NX_BETTER_ITS_QUOTE" value="15" cgen:expression="15" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>Better ITS Quote for more than one round lot</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NO_REASON" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="TIMED_OUT" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>Order timed out</Comment>
</Annotation>
</Enumerator>
<Enumerator name="AWAY_FROM_MARKET" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>Order no longer marketable</Comment>
</Annotation>
</Enumerator>
<Enumerator name="ADM_ROW" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h"/>
<Enumerator name="ADM_ROW_SZ" value="40" cgen:expression="40" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h"/>
<Enumerator name="MAX_ADM_SZ" value="160" cgen:expression="(ADM_ROW*ADM_ROW_SZ)" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h">
<Annotation>
<Comment>
     admin text msg size= 4rows * 40 chars/raw 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ADM_FLAG_NONE" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h"/>
<Enumerator name="ADM_FLAG_POPENRES" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h">
<Annotation>
<Comment>Pre-opening response inidicator</Comment>
</Annotation>
</Enumerator>
<Enumerator name="ADM_FLAG_POPEN2LK" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h">
<Annotation>
<Comment>Pre-opening second look inidicator</Comment>
</Annotation>
</Enumerator>
<Enumerator name="ADM_FLAG_ARROW" value="3" cgen:expression="0x3" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h">
<Annotation>
<Comment>Arrow symbol indicator</Comment>
</Annotation>
</Enumerator>
<Enumerator name="ADM_FLAG_POPENNDONE" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h">
<Annotation>
<Comment>Pre-opening nothing-done inidicator</Comment>
</Annotation>
</Enumerator>
<Enumerator name="GVSTP" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Annotation>
<Comment>request for STP giveups</Comment>
</Annotation>
</Enumerator>
<Enumerator name="HILITE" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Annotation>
<Comment>request for highlighting</Comment>
</Annotation>
</Enumerator>
<Enumerator name="BLKSPC" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Annotation>
<Comment>request for block spec. rpt</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OPGSUBSET" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Annotation>
<Comment>rqst to count OPG subset</Comment>
</Annotation>
</Enumerator>
<Enumerator name="INCLUSIVE" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Annotation>
<Comment>do an at-or-better count</Comment>
</Annotation>
</Enumerator>
<Enumerator name="APPROUTE_EOD_MSG_MAX_SIZE" value="256" cgen:expression="256" cgen:file="/mnt/pos.shrb/include/events/APPROUTE_EOD_END_DATA.h"/>
<Enumerator imported="yes" name="STKS_FAIL" value="0" cgen:file="/mnt/pos.shrb/include/events/APPROUTE_EOD_END_DATA.h">
<Annotation>
<Comment>At least one stk fails to complete eod filing</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="STKS_COMPLETE" value="1" cgen:file="/mnt/pos.shrb/include/events/APPROUTE_EOD_END_DATA.h">
<Annotation>
<Comment>All stks complete eod filing</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="max_q_defs" value="undefined" cgen:expression="((MAX_MSG_LENGTH-(sizeof(USER_HDR)+sizeof(int)))/sizeof(Q_DEF))" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h"/>
<Enumerator imported="yes" name="max_type_defs" value="undefined" cgen:expression="((MAX_MSG_LENGTH-(sizeof(USER_HDR)+sizeof(int)))/sizeof(T_DEF))" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h"/>
<Enumerator name="MAX_AWAY_MKTS" value="28" cgen:expression="28" cgen:file="/mnt/pos.shrb/include/events/AWAY_QUOTE_UPDATE.h"/>
<Enumerator name="BKDUMP_DB" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/BKDUMP_REQ.h">
<Annotation>
<Comment>
     Dump the entire database 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="BKDUMP_SMART_SEQ" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/BKDUMP_REQ.h">
<Annotation>
<Comment>
     Dump the entire database in Eff Seq Order per side 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="BKDUMP_ALL_STATE" value="2" cgen:file="/mnt/pos.shrb/include/events/BKDUMP_REQ.h">
<Annotation>
<Comment>
     Dump the entire state of the process 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="BKDUMP_PMP" value="3" cgen:file="/mnt/pos.shrb/include/events/BKDUMP_REQ.h">
<Annotation>
<Comment>
     Dump the pmp database 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="BKDUMP_FILE_LEN" value="50" cgen:expression="50" cgen:file="/mnt/pos.shrb/include/events/BKDUMP_REQ.h"/>
<Enumerator name="BKDUMP_NO_OVERWRITE" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/BKDUMP_REQ.h">
<Annotation>
<Comment>
     if the file exists, STK process will modify, 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="FR_OARS" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/BLK_FREEZE.h">
<Annotation>
<Comment>
     reeze/unfreeze OARS
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="FR_MOC" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/BLK_FREEZE.h">
<Annotation>
<Comment>
     freeze/unfreeze MOC 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="BL_OARS_VALID" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/BLOCK_RPT.h">
<Annotation>
<Comment>info in bl_oars is valid info</Comment>
</Annotation>
</Enumerator>
<Enumerator name="BL_MOC_VALID" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/BLOCK_RPT.h">
<Annotation>
<Comment>info in bl_oars is valid info</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SUMRPT_MAX_ITEMS" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/CAP_SUMRPT_SCROLL_DATA.h"/>
<Enumerator name="SR_MORE_BELOW" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/CAP_SUMRPT_SCROLL_DATA.h"/>
<Enumerator name="SR_MORE_ABOVE" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/CAP_SUMRPT_SCROLL_DATA.h"/>
<Enumerator imported="yes" name="CS_CL" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/CC_STK.h">
<Annotation>
<Comment>
     called for redemption 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="CS_PR" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/CC_STK.h">
<Annotation>
<Comment>
     preferred 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="CS_WS" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/CC_STK.h">
<Annotation>
<Comment>
     warrents 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="CS_RT" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/events/CC_STK.h">
<Annotation>
<Comment>
     rights 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_KEY" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MENU_SIZE" value="37" cgen:expression="37" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     35 + 2 chars for border 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_WAIT" value="80" cgen:expression="80" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     time to wait (in 1/10sec.) for a synch. event 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MW_EXPAND" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
      Want to expand the msg.      
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MW_DELETE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
      Delete this msg.        
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MW_SIGNAL" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
      Send given msg to application 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MW_SIG_AND_DEL" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
      Send msg to appl. and Delete msg from mw 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MW_SIGNAL_FINAL" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
      MW is out, the other applic has control 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MW_UNKNOWN" value="65535" cgen:expression="0xffff" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Internal to Display.  Used to indicate  
     that key is of an unknown type...and not 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MW_TIMER_1" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_TIMER_2" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="IDX_CL_LMT_1MIN_IC" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Incoming LMT Commits with 1-minute expiration 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_LMT_2MIN_IC" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Incoming LMT Commits w/ 2-minute expiration  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_LMT_30SEC_IC" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="IDX_CL_LMT_IC_REJ" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Rej inc LMT Cmts 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_MKT_1MIN_IC" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Incoming MKT Commits w/ 30 sec half-life 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_MKT_2MIN_IC" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Incoming MKT Commits w/ 60 sec half-life  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_MKT_30SEC_IC" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="IDX_CL_MKT_IC_REJ" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Rej inc MKT Cmts 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_CR" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Commit Responses from Host and Admins 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_DETAIL" value="9" cgen:expression="9" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Detail only (same as comm resp  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_CR_NL_1" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Name Chg and timer for priority change 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_CR_NL_2" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Name Chg and No timer 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_NULL" value="12" cgen:expression="12" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     No menu/Soft Key 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_REMOVE_30" value="13" cgen:expression="13" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Remove key only (in mw) - 30 sec timeout 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_REMOVE_120" value="14" cgen:expression="14" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Remove key only (in mw) - 2 min timeout 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_DETAIL_REMOVE" value="15" cgen:expression="15" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Detail &amp; Remove key only (in mw) min timeout 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IDX_CL_CR_MW" value="16" cgen:expression="16" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     Commit Resp for Msg Wdw (incl Remove) 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="LAST_ITS_IDX" value="16" cgen:expression="IDX_CL_CR_MW" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="SSR_CLASS_INDX" value="17" cgen:expression="LAST_ITS_IDX+1" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     index of SSR class in array of classes data  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="TICK_MSG_CLASS_INDX" value="18" cgen:expression="LAST_ITS_IDX+2" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     index of TICK class  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RPT_STATUS_CLASS_INDX" value="19" cgen:expression="LAST_ITS_IDX+3" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     index of REPORT STATUS class  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="REM_RPT_STAT_CLASS_INDX" value="20" cgen:expression="LAST_ITS_IDX+4" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     index of REMOVE REPORT STATUS class  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DLL_MSG_CLASS_INDX" value="21" cgen:expression="LAST_ITS_IDX+5" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     index of DLL BP_PRICE FAIL class  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MSGS_IN_Q_CLASS_INDX" value="22" cgen:expression="LAST_ITS_IDX+6" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     index of MSG_IN_Q class 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="REPORT_SIDECAR_INDX" value="23" cgen:expression="LAST_ITS_IDX+7" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     idx of REPORT_SIDECAR class 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="REMOVE_SIDECAR_INDX" value="24" cgen:expression="LAST_ITS_IDX+8" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Annotation>
<Comment>
     idx of REMOVE_SIDECAR class 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_PREDEFINED_CLASSES" value="30" cgen:expression="30" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_SSR_PRI" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_THRESH_PRI" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_TICK_MSG_PRI" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_RPT_STATUS_PRI" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_DLL_MSG_PRI" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_MSG_IN_Q_PRI" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_MSG_SIDECAR_PRI" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_EQA_PRIO1_WARN" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_EQA_RN_WARN" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator name="MW_EQA_PRIO1_VIOLATE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h"/>
<Enumerator imported="yes" name="none" value="0" cgen:expression="0x0000" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Enumerator imported="yes" name="stk_tape" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Enumerator imported="yes" name="stk_open" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Enumerator name="stk_close" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Enumerator imported="yes" name="stk_quote" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Enumerator imported="yes" name="quote_assist" value="16" cgen:expression="0x00010" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Enumerator name="activateOE" value="32" cgen:expression="0x00020" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Enumerator imported="yes" name="itsPreOpening" value="64" cgen:expression="0x00040" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Enumerator imported="yes" name="groupNda" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Enumerator name="CP_SUBJECT_SIZE" value="43" cgen:expression="43" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h"/>
<Enumerator name="TEXT_CP_HAS_TEXT" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h">
<Annotation>
<Comment>
     tm_long exists.   
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_CP_HAS_PREV_MSG" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h">
<Annotation>
<Comment>
     previous msg exists.  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_CP_HAS_NEXT_MSG" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h">
<Annotation>
<Comment>
     another msg exists.  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="CP_NOT_FOUND" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h">
<Annotation>
<Comment>
     msg not found! 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_CP_IS_EMPTY" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h">
<Annotation>
<Comment>
     1 = Msg is empty. Placeholder.
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_IS_LAST_MSG" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h">
<Annotation>
<Comment>
     only the first msg will unlock
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="TEXT_IS_COMM_PG" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h">
<Annotation>
<Comment>
     text is for commitment page 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_IS_SINGLE_STK_PG" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h">
<Annotation>
<Comment>
     text is for single stk page 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_MF_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/CTR_NAMES.h">
<Annotation>
<Comment>
     firm,branch &amp; sequence sizes 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DL_FROZEN" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/DLL_LEADER2.h"/>
<Enumerator name="DL_REPORTED" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/DLL_LEADER2.h"/>
<Enumerator name="DL_DIVIDEND" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/DLL_LEADER2.h">
<Annotation>
<Comment>
     dividend reduction or stock split occured 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DL_XPRESS" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/DLL_LEADER2.h">
<Annotation>
<Comment>
     1 - XPress orders enabled, 0 - XPress orders disabled 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DL_ELECT_ON_QUOTE" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/DLL_LEADER2.h">
<Annotation>
<Comment>
     1 - Elect tick sens. orders on manual quote, 0 - Do not elect 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RPRT" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     execution report   
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="CCXL" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     confirm cancel  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="STPSTK" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     stop stock  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="TLTC" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     too late to cancel 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PRCC" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     price correction  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="FMT_TST" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     test transaction 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ND" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     nothing done  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="BI" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     book it  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="STPOPG" value="9" cgen:expression="9" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     stop at opening 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DEL" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     delete  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="BIP" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     Booked at post  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DROP" value="12" cgen:expression="12" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     drop order from book  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="CXL" value="13" cgen:expression="13" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     cancel from book  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SDEL" value="14" cgen:expression="14" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     synchronization delete 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_NC" value="15" cgen:expression="15" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     its name change admin 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="TCXL" value="16" cgen:expression="16" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     self-cancelling time out 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ACXL" value="17" cgen:expression="17" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     self-cancelling non-marketable 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="REALNM" value="18" cgen:expression="18" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     real names report
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PROK" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h"/>
<Enumerator name="XCH" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h"/>
<Enumerator name="COM" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h"/>
<Enumerator name="T_LMT" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h"/>
<Enumerator name="HI_PROK" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     price ok  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="HI_XCH" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     x-clearing house 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="HI_COM" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     commission  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="HI_T_LMT" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     lmt order (ie non- DAY MKT)  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="HI_PREVEX" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     prev exec (means lvs valid)  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="HI_1ST" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     hist rec is 1st in a series all with same 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="HI_CONT" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
     hist rec is continueation of a series all 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="BDY_UNDEFINED" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/DSP_REG.h"/>
<Enumerator name="BDY_ACTIVE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/DSP_REG.h"/>
<Enumerator name="BDY_INACTIVE_TRY" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/DSP_REG.h"/>
<Enumerator name="BDY_INACTIVE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/DSP_REG.h"/>
<Enumerator name="BDY_FORCED_INACTIVE" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/DSP_REG.h"/>
<Enumerator name="ECHO_BACK_MAX_DATA_SIZE" value="2048" cgen:expression="2048" cgen:file="/mnt/pos.shrb/include/events/ECHO_BACK_MSG_DATA.h"/>
<Enumerator name="ESI_TEXT_SIZE" value="27" cgen:expression="27" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_INFO.h"/>
<Enumerator imported="yes" name="ESUW_ON_CHANGE" value="0" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Annotation>
<Comment>
     use these parameters
     for uploads of
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="ESUW_ON_DROP" value="1" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Annotation>
<Comment>
     use these parameters
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="ESUW_ON_EOD" value="2" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Annotation>
<Comment>
     use these parameters
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="ESUW_NOW" value="3" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Annotation>
<Comment>
     use these paramters
     now.  Causes an
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ESUF_UPLOAD_ON" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Annotation>
<Comment>
     turn uploading for the
     event specified in
     esup_when on.  If this
     flag is not set,
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ESUF_GTC_ONLY" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Annotation>
<Comment>
     good-until-canceled
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ESUF_DELTA_ONLY" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Annotation>
<Comment>
     orders whose
     eff. seqs. have
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ESUF_ELECTED_STP_ONLY" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Annotation>
<Comment>
     when STP is set in esup_order_types, this flag indicates that only
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ESUF_ELECTED_STP_LMT_ONLY" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Annotation>
<Comment>
     when STP_LMT is set in esup_order_types, this flag indicates that only
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ESUF_FILED_TICK_S_ONLY" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Annotation>
<Comment>
     when TICK_S is set in esup_order_types, this flag indictes that only
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_GRP_RPT" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>group report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_IND_RPT" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>individual report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_DROP" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>from display book only</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_DEL" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>delete from DB &amp; host</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_CXL" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>back to member firm too</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_BRK_OK" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>OK to break mkt ords</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_BLK_RPT" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>Block rpt (of stps)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_OPENING" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>opening block report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_DROP_OK" value="256" cgen:expression="0x100" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>OK to drop</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXE_STP_RPT" value="512" cgen:expression="0x200" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>stop report (initiated in MKT)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EX_COM" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>commission</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EX_NCOM" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>no commission</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EX_XCH" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>X clearing house</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EX_OK" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>stroke ok</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXE_OPG" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>opening flag for PROK checks</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXF_STOP_BMKT_FLASH" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h"/>
<Enumerator name="EXF_STOP_SMKT_FLASH" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h"/>
<Enumerator name="EXF_AMEX" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>AMEX version of EXE_RPT</Comment>
</Annotation>
</Enumerator>
<Enumerator name="FDTI_TEXT_SIZE" value="22" cgen:expression="22" cgen:file="/mnt/pos.shrb/include/events/FILE_DATE_TIME_INFO.h"/>
<Enumerator name="UPDATE_LAST_SALE" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/FILE_ELECT_FLAGS.h"/>
<Enumerator name="FILE_ELECT" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/FILE_ELECT_FLAGS.h"/>
<Enumerator name="FILE_TICKS_ONLY" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/FILE_ELECT_FLAGS.h"/>
<Enumerator name="UNFILE" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/events/FILE_ELECT_FLAGS.h"/>
<Enumerator name="FR_PAGE_SCR" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/FIND_RSP.h"/>
<Enumerator name="FR_FBS_SCR" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/FIND_RSP.h"/>
<Enumerator name="FR_MR_ABOVE" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/FIND_RSP.h"/>
<Enumerator name="FR_MR_BELOW" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/FIND_RSP.h"/>
<Enumerator name="AON_IDX" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h"/>
<Enumerator name="STP_IDX" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h"/>
<Enumerator name="DOT_IDX" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h"/>
<Enumerator name="LMT_IDX" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h"/>
<Enumerator name="LOC_IDX" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h"/>
<Enumerator name="TICK_IDX" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h"/>
<Enumerator name="PRIN_IDX" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h">
<Annotation>
<Comment>
     must be last, MUST correspond with disp/report.c's
     print.c 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="LMT_IDX_B" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h"/>
<Enumerator name="LOC_IDX_B" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h"/>
<Enumerator name="GC_STOP_BMKT_FLASH" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/GRP_CXL.h">
<Annotation>
<Comment>
     stop flashing of mkts
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="GC_STOP_SMKT_FLASH" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/GRP_CXL.h"/>
<Enumerator name="GC_CLR_ODD_LOT" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/GRP_CXL.h">
<Annotation>
<Comment>
     clear odd lot portion of order
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="GC_CAP_CXL_REPLACED" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/GRP_CXL.h">
<Annotation>
<Comment>
     a cancel/replace on a CAP order 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_BUY" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h"/>
<Enumerator name="ITS_SELL" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h"/>
<Enumerator name="ITS_SSHRT" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h"/>
<Enumerator name="ITS_SSEX" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h"/>
<Enumerator name="ITS_LMT" value="256" cgen:expression="0x0100" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h"/>
<Enumerator name="ITS_MKT" value="512" cgen:expression="0x0200" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h"/>
<Enumerator name="ITS_CXL" value="1024" cgen:expression="0x0400" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h"/>
<Enumerator name="IC_BLOCK" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h"/>
<Enumerator name="IC_DUP" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h"/>
<Enumerator name="IC_EXPIR" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h">
<Annotation>
<Comment>Expired</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IC_TA_PEND" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h">
<Annotation>
<Comment>AWO rel: waiting for TANUM</Comment>
</Annotation>
</Enumerator>
<Enumerator name="CR_BOOK_AVAILABLE" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h"/>
<Enumerator imported="yes" name="IO_NONE" value="0" cgen:expression="0x0" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>no IN_OARS msg received yet</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IO_STATUS" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>periodic status msg</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IO_FRZ_STATUS" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>status at OARS freeze</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IO_UNFRZ_STATUS" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>status at OARS unfreeze</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IO_AFTER_FREEZE" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>status after OARS freeze</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IO_FINAL_STATUS" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>final status -- OARS done</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IO_REOPEN" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>announces reopening of OARS</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IO_ODD_LOT" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>there is odd_lot accumulation in moc</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IO_TIME" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>found time hh:mm</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IO_CLOSE" value="256" cgen:expression="0x100" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>found CLOSE in the text</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IO_SIDECAR_REPORTABLE" value="10" cgen:expression="IO_FRZ_STATUS | IO_AFTER_FREEZE" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h"/>
<Enumerator imported="yes" name="IO_SIDECAR_NONREPORTABLE" value="16" cgen:expression="IO_FINAL_STATUS" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h"/>
<Enumerator name="ITS_AD_DESTINATION_SIZE" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/ITS_ADMIN_DATA.h"/>
<Enumerator name="ITS_AD_TEXT_LENGTH_SIZE" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/ITS_ADMIN_DATA.h"/>
<Enumerator name="ITS_AD_TEXT_SIZE" value="159" cgen:expression="159" cgen:file="/mnt/pos.shrb/include/events/ITS_ADMIN_DATA.h"/>
<Enumerator imported="yes" name="ITS_CD_1MIN_EXPIRATION" value="49" cgen:expression="'1'" cgen:file="/mnt/pos.shrb/include/events/ITS_COMMITMENT_DATA.h"/>
<Enumerator name="ITS_CD_MAX_GIVEUPS" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/ITS_COMMITMENT_DATA.h"/>
<Enumerator name="ITS_ED_MAX_GIVEUPS" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/ITS_EXECUTION_DATA.h"/>
<Enumerator imported="yes" name="IER_COMMITMENT_NOT_OPEN" value="0" cgen:file="/mnt/pos.shrb/include/events/ITS_EXE_REJ_DATA.h">
<Annotation>
<Comment>
     The commitment expired or was cancelled 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IER_FILE_AND_ELECT" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/ITS_EXE_REQ_DATA.h">
<Annotation>
<Comment>
     Flag is set in m_flags if 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IER_BLOCKING" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/ITS_EXE_REQ_DATA.h">
<Annotation>
<Comment>
     Blocking (1-Step) Execution 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IER_MAX_GIVE_UPS" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/ITS_EXE_REQ_DATA.h"/>
<Enumerator imported="yes" name="RE_CXL" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/ITS_FMT_RSP.h"/>
<Enumerator imported="yes" name="RE_NCHANGE" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/ITS_FMT_RSP.h"/>
<Enumerator imported="yes" name="RE_NLATER" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/ITS_FMT_RSP.h"/>
<Enumerator imported="yes" name="RE_PRIN" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/ITS_FMT_RSP.h"/>
<Enumerator name="ITS_NCD_MAX_GIVEUPS" value="32" cgen:expression="32" cgen:file="/mnt/pos.shrb/include/events/ITS_NAME_CHANGE_DATA.h"/>
<Enumerator name="INR_MAX_GIVE_UPS" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/ITS_NC_REQ_DATA.h">
<Annotation>
<Comment>
     Maximum # of give-ups in m_gv 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="N_POA_GV" value="4" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
     max gv's on a its pre-open card 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POAF_NLATER" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      names later 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POAF_PRIN" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      prin 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POA_IND" value="1" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      indication 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POA_CXL" value="2" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      cancel 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POA_2LK" value="3" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      second look 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POA_ADM" value="4" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      admin 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POA_BOT" value="5" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      opening rpt (bot) 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POA_SLD" value="6" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      opening rpt (sld) 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POA_SS" value="7" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      opening rpt (ss) 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POA_SX" value="8" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      opening rpt (sx) 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="POA_ND" value="9" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<Annotation>
<Comment>
      nothing done 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IVENR_COMMITMENT_NOT_OPEN" value="0" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_NL_REJ_DATA.h">
<Annotation>
<Comment>
     The commitment expired or was canceled 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IVER_COMMITMENT_NOT_OPEN" value="0" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_REJ_DATA.h">
<Annotation>
<Comment>
     The commitment expired or was canceled 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IVER_BETTER_STOPPED" value="1" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_REJ_DATA.h">
<Annotation>
<Comment>
     Orders are stopped at a better price 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IVER_ELECTED_STPS_OPEN" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_RSP_DATA.h">
<Annotation>
<Comment>
     Elected STPs are left open 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="IVNR_BETTER_STOPPED" value="0" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_NC_REJ_DATA.h">
<Annotation>
<Comment>
     Orders are stopped at a better price 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="IVNR_ELECTED_STPS_OPEN" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_NC_RSP_DATA.h">
<Annotation>
<Comment>
     Elected STPs are left open 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MT_NAMES_CHANGE" value="78" cgen:expression="'N'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Names Change 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MT_COMMITMENT" value="67" cgen:expression="'C'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Commitment 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MT_EXECUTION_RESPONSE" value="82" cgen:expression="'R'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Execution Response 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MT_COMMITMENT_CANCEL" value="88" cgen:expression="'X'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Commitment Cancel 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MT_ONE_SIDED_RESPONSE" value="79" cgen:expression="'O'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     One-sided Response 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MT_ADMIN" value="65" cgen:expression="'A'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Administrative 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MS_NAMES_CHANGE" value="82" cgen:expression="'R'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Names Change 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MS_COMMITMENT_ENTRY" value="69" cgen:expression="'E'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Commitment Entry 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MS_NAMES_LATER_RESPONDING" value="82" cgen:expression="'R'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Names Later Responding 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MS_NAMES_LATER_COMMITTING" value="67" cgen:expression="'C'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Names Later Committing 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MS_ADMIN_PO_INDICATION" value="73" cgen:expression="'I'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Pre-opening Indication 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MS_ADMIN_PO_RESPONSE" value="82" cgen:expression="'R'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Pre-opening Response 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MS_ADMIN_PO_2ND_LOOK" value="83" cgen:expression="'S'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Pre-opening Second Look 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MS_ADMIN_PO_CANCEL" value="67" cgen:expression="'C'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Pre-opening Cancellation 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MS_ADMIN_GENERAL" value="71" cgen:expression="'G'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     General Admin 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MS_NONE" value="32" cgen:expression="' '" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_AMEX" value="65" cgen:expression="'A'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_BSE" value="66" cgen:expression="'B'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_CSE" value="67" cgen:expression="'C'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_CHX" value="77" cgen:expression="'M'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_NYSE" value="78" cgen:expression="'N'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_ICC" value="73" cgen:expression="'I'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_PCX" value="80" cgen:expression="'P'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_PHLX" value="88" cgen:expression="'X'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_NASD" value="84" cgen:expression="'T'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_ITS" value="83" cgen:expression="'S'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     ITS or System 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_MCID_CBOE" value="87" cgen:expression="'W'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_MCID_BROADCAST" value="42" cgen:expression="'*'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Broadcast (Admin messages only) 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_PD_NA" value="48" cgen:expression="'0'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Used when price is MKT 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_PD_8" value="51" cgen:expression="'3'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Fractional Prices 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_PD_16" value="52" cgen:expression="'4'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_32" value="53" cgen:expression="'5'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_64" value="54" cgen:expression="'6'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_128" value="55" cgen:expression="'7'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_256" value="56" cgen:expression="'8'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_10" value="65" cgen:expression="'A'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Decimal Prices 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_PD_100" value="66" cgen:expression="'B'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_1000" value="67" cgen:expression="'C'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_10000" value="68" cgen:expression="'D'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_100000" value="69" cgen:expression="'E'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_1000000" value="70" cgen:expression="'F'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_10000000" value="71" cgen:expression="'G'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_100000000" value="72" cgen:expression="'H'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_PD_1" value="73" cgen:expression="'I'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Whole Prices 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_ACTION_BUY" value="66" cgen:expression="'B'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_ACTION_SELL" value="83" cgen:expression="'S'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_ACTION_SELL_SHORT" value="84" cgen:expression="'T'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_ACTION_SELL_SHORT_EXEMPT" value="88" cgen:expression="'X'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_AC_AGENT" value="65" cgen:expression="'A'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_AC_PRIN" value="80" cgen:expression="'P'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_AC_FIRM" value="88" cgen:expression="'X'" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_AC_UNDETERMINED" value="32" cgen:expression="' '" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     Currently, we only use this 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_ID_SIZE" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     a Commitment or Admin ID 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_SIZE_SIZE" value="9" cgen:expression="9" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     a size in shares 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_PRICE_SIZE" value="12" cgen:expression="12" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     a price 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_GIVEUP_NAME_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     a give-up name 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_STK_SIZE" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     a security name 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_NUM_GIVEUPS_SIZE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     the number of give-ups 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_BROKER_ID_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
     a broker badge id  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ITS_TH_LENGTH_SIZE" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator name="ITS_TH_RESERVED_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h"/>
<Enumerator imported="yes" name="LS_STK" value="0" cgen:file="/mnt/pos.shrb/include/events/LASTSALE.h"/>
<Enumerator imported="yes" name="LS_MDD" value="1" cgen:file="/mnt/pos.shrb/include/events/LASTSALE.h"/>
<Enumerator name="DR_VERSION_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DR_MAX_CONTRA_CNT" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     max # of contra give-ups 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_COMMENT_CODE_SIZE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     # of comment codes 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_TRANS_ID_SIZE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     size of transaction id 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_COMMENT_SIZE" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     size of free-form comment 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_MAX_TA_CNT" value="25" cgen:expression="25" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     max # of DBK_REPORT_TAs 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_TIME_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     large enough to hold MILLITIME 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_NX_AUTO_EXECUTION" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     NYSe Direct auto execution 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_NX_REAL_NAMES_SATISFIED" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     Real names required 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_END_BLKRPT" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     End of Block Report.  Set
     on the last report of a trade
     that has a supplemental trade
     no.  The term "Block Report"
     has nothing to do with the
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_UNBUNDLE" value="256" cgen:expression="0x100" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     Unbundle sells in this msg.
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_XCH" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     X Clearing House 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_NO_RANGE_CHECK" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     Price Range Check N/A 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_RPT" value="16384" cgen:expression="0x4000" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     This bit indicates that the
     message is an execution
     report.  Must be set in
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DR_DBK_BUY" value="32" cgen:expression="BUY" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     Limit Report for buy orders 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MD_QUOTE" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<Annotation>
<Comment>values of md_flag</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MD_TRADE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="MD_STATUS" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h"/>
<Enumerator name="MOI_BUY_IMBALANCE" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/MKT_ORDER_IMBAL_MSG.h"/>
<Enumerator name="MOI_SELL_IMBALANCE" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/MKT_ORDER_IMBAL_MSG.h"/>
<Enumerator name="MOI_NO_IMBALANCE" value="3" cgen:expression="0x03" cgen:file="/mnt/pos.shrb/include/events/MKT_ORDER_IMBAL_MSG.h"/>
<Enumerator name="MOI_MOO" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/MKT_ORDER_IMBAL_MSG.h"/>
<Enumerator name="MOI_MOC" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/MKT_ORDER_IMBAL_MSG.h"/>
<Enumerator imported="yes" name="MO_EXE" value="1" cgen:file="/mnt/pos.shrb/include/events/MOD_COMMITMENT.h"/>
<Enumerator imported="yes" name="MO_EXE_NL" value="2" cgen:file="/mnt/pos.shrb/include/events/MOD_COMMITMENT.h"/>
<Enumerator imported="yes" name="MO_CXL" value="3" cgen:file="/mnt/pos.shrb/include/events/MOD_COMMITMENT.h"/>
<Enumerator imported="yes" name="MO_NA" value="4" cgen:file="/mnt/pos.shrb/include/events/MOD_COMMITMENT.h"/>
<Enumerator imported="yes" name="MO_NAME_CHG" value="5" cgen:file="/mnt/pos.shrb/include/events/MOD_COMMITMENT.h"/>
<Enumerator imported="yes" name="MO_NO_USER_ACTION" value="6" cgen:file="/mnt/pos.shrb/include/events/MOD_COMMITMENT.h"/>
<Enumerator imported="yes" name="MO_REJECT" value="7" cgen:file="/mnt/pos.shrb/include/events/MOD_COMMITMENT.h"/>
<Enumerator imported="yes" name="MO_EXP" value="8" cgen:file="/mnt/pos.shrb/include/events/MOD_COMMITMENT.h"/>
<Enumerator name="N_HISTS" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/OD_MSG.h">
<Annotation>
<Comment>
     number of histories
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="F_OD_SUMM" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/OD_MSG.h">
<Annotation>
<Comment>
      msg contains 1 OD_SUMM only.
      result of scroll up or scroll
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="F_OD_HIST" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/OD_MSG.h">
<Annotation>
<Comment>
      msg contains some OD_HIST's only
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="F_OD_MBELOW" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/OD_MSG.h">
<Annotation>
<Comment>
      more below 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="F_OD_MABOVE" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/OD_MSG.h">
<Annotation>
<Comment>
      move above 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PI_HAS_PG" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h"/>
<Enumerator name="PI_CONTINUE" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h"/>
<Enumerator name="PI_NO_STOCK" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h"/>
<Enumerator name="MIN_PRI_PEEK_CNT" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h"/>
<Enumerator name="MAX_PRI_PEEK_CNT" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h"/>
<Enumerator name="TOTAL_PEEK_CNT" value="16" cgen:expression="(2*MAX_PRI_PEEK_CNT)" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h"/>
<Enumerator name="MAX_LENGTH" value="2048" cgen:expression="MAX_MSG_LENGTH" cgen:file="/mnt/pos.shrb/include/events/PLAIN_TEXT.h"/>
<Enumerator name="PM_IS_LAST_SALE" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/events/PM_ACTIVITY_UPDATE_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator imported="yes" name="PM_DISPLAY" value="0" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_CLIENT_REGISTER_DATA.h">
<Annotation>
<Comment>
     The Standard XCleint 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_FIRM_PROXY" value="1" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_CLIENT_REGISTER_DATA.h">
<Annotation>
<Comment>
     Specialist Firm Proxy 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_PRINTER" value="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_CLIENT_REGISTER_DATA.h">
<Annotation>
<Comment>
     A process that prints reports 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_OTHER" value="3" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_CLIENT_REGISTER_DATA.h">
<Annotation>
<Comment>
     A generic process, possibly for testing 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_IS_CONTINUED" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/PM_CONTRA_TA_LIST.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PM_MAX_CONTRA_TA" value="50" cgen:expression="50" cgen:file="/mnt/pos.shrb/include/events/PM_CONTRA_TA_LIST.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     !TODO: May need to tweak this # 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="DLL_PRIN_TO_CROWD" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_ITS_REPORT" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_PRIN_TO_OPEN" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_ITS_NAME_CHG" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_PRIN_TO_BLOCK" value="16" cgen:expression="0x0010" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_PRIN_EXEC" value="32" cgen:expression="0x0020" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_MANUAL_TRADE" value="64" cgen:expression="0x0040" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_OLA_UPDATE" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_REPORT_SOURCE_MASK" value="1792" cgen:expression="0x0700" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_REPORT_SOURCE_SAX" value="256" cgen:expression="0x0100" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_REPORT_SOURCE_BOOK" value="512" cgen:expression="0x0200" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_REPORT_SOURCE_BOOTH" value="768" cgen:expression="0x0300" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="DLL_REPORT_SOURCE_SDOT" value="1024" cgen:expression="0x0400" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PM_POSITION_UPLOAD_COMPLETE" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/PM_EOD_END_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     Position upload complete 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_MRO_COMPLETE" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/PM_EOD_END_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     Position upload complete 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_FAST" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/PM_FIND_REQ_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     Ignores criteria and sort
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_FIND" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/PM_FIND_REQ_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     Uses criteria and sort
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_BY_TIME" value="0" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_FIND_REQ_DATA.h"/>
<Enumerator imported="yes" name="PM_ASCENDING" value="0" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_FIND_REQ_DATA.h"/>
<Enumerator imported="yes" name="PM_DESCENDING" value="1" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_FIND_REQ_DATA.h"/>
<Enumerator imported="yes" name="PM_ALREADY_LOCKED" value="0" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_MSG_REJECT_DATA.h">
<Annotation>
<Comment>
     Attempt to get a lock but some other client has it 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_NOT_LOCKED" value="1" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_MSG_REJECT_DATA.h">
<Annotation>
<Comment>
     Attempt to access resource requiring a lock but
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_NO_SUCH_MSG" value="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_MSG_REJECT_DATA.h">
<Annotation>
<Comment>
     Client sent message PMP does not handle 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_BAD_HANDLE" value="3" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_MSG_REJECT_DATA.h">
<Annotation>
<Comment>
     Client referenced a screen with a bad handle or 
     sent a message that is for a specific type of
     screen yet the handle references another type
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_MULTI_USER_REJECT" value="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_MSG_REJECT_DATA.h">
<Annotation>
<Comment>
     Client attempted to access a screen which is
     mutually exclusive with some screen open
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_BAD_STOCK" value="5" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_MSG_REJECT_DATA.h">
<Annotation>
<Comment>
     Client sent a stock id taht pmp did not
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="VERSION_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PM_POSITION_UPLOAD_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="RECORD_LENGTH_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PM_POSITION_UPLOAD_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="MAX_STK_RECORD" value="20" cgen:expression="20" cgen:file="/mnt/pos.shrb/include/events/PM_POSITION_UPLOAD_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator imported="yes" name="PM_PRINT_OK" value="0" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PRINT_TRADE_LIST_UPDATE_DATA.h">
<Annotation>
<Comment>
     Printing Trade List OK 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_PRINT_EMPTY" value="1" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PRINT_TRADE_LIST_UPDATE_DATA.h">
<Annotation>
<Comment>
     List to be printed is empty 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_PRINT_UNAVAILABLE" value="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PRINT_TRADE_LIST_UPDATE_DATA.h">
<Annotation>
<Comment>
     Print process unavailable 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_PRINT_IN_PROGRESS" value="3" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PRINT_TRADE_LIST_UPDATE_DATA.h">
<Annotation>
<Comment>
     Printing for current stock in progress 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_PRINT_ERROR" value="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PRINT_TRADE_LIST_UPDATE_DATA.h">
<Annotation>
<Comment>
     Error in establishing a printing request 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_LOCKED" value="0" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_NACK_DATA.h">
<Annotation>
<Comment>
     Record locked by another user 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_CANCELED" value="1" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_NACK_DATA.h">
<Annotation>
<Comment>
     Record already canceled by another user 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="PM_STALE" value="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_NACK_DATA.h">
<Annotation>
<Comment>
     cached data at xclient is stale         
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="EDIT_TYPE" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Type changed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EDIT_SIDE" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Side changed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EDIT_PRICE" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Price changed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EDIT_TICK" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Tick changed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EDIT_TIME" value="16" cgen:expression="0x0010" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Write in time changed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EDIT_COMM1" value="32" cgen:expression="0x0020" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Comment 1 changed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EDIT_COMM2" value="64" cgen:expression="0x0040" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Comment 2 changed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EDIT_FREE_FORM" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Free form comment changed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EDIT_CONTRAS" value="256" cgen:expression="0x0100" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Contras changed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EDIT_CORRECTION" value="512" cgen:expression="0x0200" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>correction changed</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_SAX_POS_DUPE" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     POSSIBLE DUPLICATE FLAG
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_SAX_BUST" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
      Bust of a trade (by ta) 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_SAX_EXEC" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
      Execution via sax   
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_PRICE_CORRECTION" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
      Price correction via sax 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_CONTRA_CORRECTION" value="16" cgen:expression="0x0010" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
      Contra change via sax  
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_PRIN_MODIFICATION" value="32" cgen:expression="0x0020" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
      Prin is a contra   
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_AWO_MODIFICATION" value="64" cgen:expression="0x0040" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
      Prin is an implicit contra
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_ITS_MODIFICATION" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
      Its cativity with prin  
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_DBK_LINKNO" value="256" cgen:expression="0x0100" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
      The linkno was generated  
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PM_SDOT_LINKNO" value="512" cgen:expression="0x0200" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
      The linkno was generated  
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_SAX_GV" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="ERC_SIZE" value="9" cgen:expression="9" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PSDR_ERROR_CODE_SIZE" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/PM_SDOT_DBK_REJECT_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PSDR_ERROR_MESSAGE_SIZE" value="40" cgen:expression="40" cgen:file="/mnt/pos.shrb/include/events/PM_SDOT_DBK_REJECT_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PM_TRADE_LIST_MAX_SIZE" value="30" cgen:expression="30" cgen:file="/mnt/pos.shrb/include/events/PM_TRADE_LIST_UPDATE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
     Max number of records in response 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_HI" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>entire line highlight</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_LN_UPDATE" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>line update, as opposed to part of summary screen</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_STOP_NE" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>there are stop limits with differing lmt &amp; stop prices</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_TICK_EXISTS" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>filed ticks exist at this price (and none better)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_TICK_BETTER" value="16" cgen:expression="0x0010" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>filed ticks exist at this or better pri; (may include market) skip 0x20 and 0x40 for BUY and SELL</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_HI_2" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>overrides PT_HI on side of PRICE_TOT</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_TICK_HI" value="256" cgen:expression="0x0100" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>tick qty highlight</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_LMT_HI" value="512" cgen:expression="0x0200" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>lmt qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_AON_HI" value="1024" cgen:expression="0x0400" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>aon qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_OPG_HI" value="2048" cgen:expression="0x0800" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>opg qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_LOC_HI" value="4096" cgen:expression="0x1000" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>loc qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_STP_HI" value="8192" cgen:expression="0x2000" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>stp qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_SL_HI" value="16384" cgen:expression="0x4000" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>sl qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_NEW_PRICE_HI" value="32768" cgen:expression="0x8000" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>new page created in summary</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_SP_HI_2" value="256" cgen:expression="0x0100" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h"/>
<Enumerator name="WT_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PRIN_ACT.h"/>
<Enumerator name="CC_SIZE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/PRIN_ACT.h"/>
<Enumerator name="FC_SIZE" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/PRIN_ACT.h"/>
<Enumerator name="DBL_SIZE" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/PRIN_ACT.h"/>
<Enumerator name="OE_VERSION_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="OE_EXEC_TIME_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="OE_CSH_ND_SLR_SIZE" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="QTY_SIZE" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="EXPANDED_QTY_SIZE" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="CROWD_SIZE" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="OE_PRICE_INT_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="OE_PRICE_FRAC_SIZE" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="AWO_PRICE_INT_SIZE" value="9" cgen:expression="9" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="AWO_PRICE_FRAC_SIZE" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="OE_INPUT_TIME_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h"/>
<Enumerator name="PROMPT_DATA_NONE" value="0" cgen:expression="0x0" cgen:file="/mnt/pos.shrb/include/events/PROMPT_DATA.h">
<Annotation>
<Comment>
     No prompts necessary 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PROMPT_DATA_TICK" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/PROMPT_DATA.h">
<Annotation>
<Comment>
     New or Unfiled Ticks or 
     conds 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PROMPT_DATA_STP_LMT" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/PROMPT_DATA.h">
<Annotation>
<Comment>
     STP LMT orders are eligible 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PROMPT_DATA_BUY_STP" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/PROMPT_DATA.h">
<Annotation>
<Comment>
     BUY STP orders are eligible 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PROMPT_DATA_SELL_STP" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/PROMPT_DATA.h">
<Annotation>
<Comment>
     SELL STP orders are eligible 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PROMPT_DATA_BUY_MKT" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/PROMPT_DATA.h">
<Annotation>
<Comment>
     BUY MKT orders are in lvs 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PROMPT_DATA_SELL_MKT" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/PROMPT_DATA.h">
<Annotation>
<Comment>
     SELL MKT orders are in lvs  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="PR_MAX_REQ_DATA_MAX_SIZE" value="500" cgen:expression="500" cgen:file="/mnt/pos.shrb/include/events/PR_CMN_PRINT_JOB_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PR_JOB_COMPLETED" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/PR_END_JOB_RESPONSE_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PR_JOB_FAILED" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/PR_END_JOB_RESPONSE_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PR_JOB_SCHEDULED" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/PR_END_JOB_RESPONSE_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PR_PRINT_SERVICES_UNAVAILABLE" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/PR_JOB_NACK_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PR_PRINT_QUOTA_EXCEEDED" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/PR_JOB_NACK_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PR_BAD_PRINTER_SPECIFIED" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/PR_JOB_NACK_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="PR_MAX_PAGE_TEXT_SIZE" value="1000" cgen:expression="1000" cgen:file="/mnt/pos.shrb/include/events/PR_PRINT_PAGE_DATA.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="TIMESTAMP_SIZE" value="32" cgen:expression="32" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h" cgen:namespace="Pos::Msgs"/>
<Enumerator imported="yes" name="BOUGHT_SIZE" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator imported="yes" name="SOLD_SIZE" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator imported="yes" name="ODDBOUGHT_SIZE" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator imported="yes" name="ODDSOLD_SIZE" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator imported="yes" name="PRIOR_SIZE" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator imported="yes" name="LSALE_SIZE" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator imported="yes" name="NET_SIZE" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator imported="yes" name="PNL_SIZE" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator imported="yes" name="NETCHANGE_SIZE" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator imported="yes" name="NETVALUE_SIZE" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator imported="yes" name="OPENNIG_SIZE_TEMP" value="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator name="TRADE_UNIT_SIZE" value="16" cgen:expression="16" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h" cgen:namespace="Pos::Msgs"/>
<Enumerator name="QM_DB" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>depth bid</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_DO" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>depth offer</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_DD" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>depth bid - depth offer</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_FT" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>fast</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_NF" value="16" cgen:expression="0x0010" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>non-firm</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_RPT" value="32" cgen:expression="0x0020" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>quote from rpt</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_ASSIST" value="64" cgen:expression="0x0040" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>Assisted quote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_AQ_DIRECT" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>Direct+ AutoQuote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_AQ_CANCEL" value="2048" cgen:expression="0x0800" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>Direct+ Cancel AutoQuote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_NUM_QA_TS_TAS" value="50" cgen:expression="50" cgen:file="/mnt/pos.shrb/include/events/QUOTE_ASSIST_CEASE_TIMESTAMP_DATA.h"/>
<Enumerator name="ASCII_TIME_LEN" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/QUOTE_TIMER.h">
<Annotation>
<Comment>HH:MM:SS</Comment>
</Annotation>
</Enumerator>
<Enumerator name="ASCII_SEC_LEN" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/QUOTE_TIMER.h">
<Annotation>
<Comment>SS</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EQA_INFO_SIZE" value="8" cgen:expression="2+3+3" cgen:file="/mnt/pos.shrb/include/events/QUOTE_TIMER.h"/>
<Enumerator name="RN_WITH_QUOTE_OVERLAY" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_REQ_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Real Names with Quote Overlay</Comment>
</Annotation>
</Enumerator>
<Enumerator name="RN_INSUFFICIENT_AON" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_VALIDATE_REJ_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Insufficient Stock to Cross to AON</Comment>
</Annotation>
</Enumerator>
<Enumerator name="RN_INSUFFICIENT_CAP" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_VALIDATE_REJ_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Insufficient Stock to Cross to CAP</Comment>
</Annotation>
</Enumerator>
<Enumerator name="RN_VIOLATE_STOP_PRICE" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_VALIDATE_REJ_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>At least one order's stopped price is violated</Comment>
</Annotation>
</Enumerator>
<Enumerator name="RN_PARTIAL_AON" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_VALIDATE_RSP_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Causes Partial Report of AON</Comment>
</Annotation>
</Enumerator>
<Enumerator name="RN_PRIN_WITH_BETTER_AON" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_VALIDATE_RSP_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>PRIN Participation with Better AON</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_OK" value="0" cgen:expression="0x0" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>no error</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_QTY" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>not enough qty avail to report.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_XQTY" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>reject cross qty.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_MKT_BRK" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>would cause a partial rpt on mkt order.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_XMKT_BRK" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>would cause partial rpt on xed mktorder.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_STP_M_PRI" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Report price worse than MKT stopped pri.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_X_TICK_1" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Can't use TICK with this template</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_X_TICK_2" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Can't use TICK to cross w/filed orders</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_X_TICK_3" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Can't cross filed LMT orders w/TICK</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_X_TICK_4" value="256" cgen:expression="0x100" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Can't use LMT &amp; TICK w/filed orders</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_U_COMBINATION" value="512" cgen:expression="0x200" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Invalid Contra Combination</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_ERROR" value="1024" cgen:expression="0x400" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Report Not Sent- ask Floor Mgr</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_DROP" value="2048" cgen:expression="0x800" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>confirm drop</Comment>
</Annotation>
</Enumerator>
<Enumerator name="RC_VERSION_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h"/>
<Enumerator name="RC_MAX_CONTRA_CNT" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Annotation>
<Comment>
     max # of contra give-ups 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RC_CONTRA_CNT_SIZE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Annotation>
<Comment>
     size of contra count 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RC_COMMENT_CODE_SIZE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Annotation>
<Comment>
     # of comment codes 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RC_COMMENT_SIZE" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Annotation>
<Comment>
     size of free-form comment 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RC_MAX_TA_CNT" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Annotation>
<Comment>
     max # of DBK_REPORT_CORRECTION_TAs 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RC_TIME_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Annotation>
<Comment>
     large enough to hold MILLITIME 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RC_PRICE_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h"/>
<Enumerator name="RC_CONTRA_QTY_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h"/>
<Enumerator name="RC_NX_REAL_NAMES_ASSIGNMENT" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Annotation>
<Comment>
     Real names assignment 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RC_COMPLETE" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Annotation>
<Comment>
     TRUE = 1 = Complete, FALSE = 0 = More to come 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RC_MAX_GV" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="EXPANDED_L_SEQ_SIZE" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      for awos exp templ a
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_CXL" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      message is a CXL 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_TLTC" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      too late to cancel 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_STPSTK" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      stop stock 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_STPOPG" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      stopped at opening 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_PRCOR" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      price correction 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_NDONE" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      nothing done message 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_DEL" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      delete order message 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_END_BLKRPT" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      2 or more orders in group rpt 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_UNBUNDLE" value="256" cgen:expression="0x100" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      unbundle sells in this
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_PROK" value="512" cgen:expression="0x200" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      price is correct 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_TTC_MOD" value="1024" cgen:expression="0x400" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      Tick/Time/Comment Modification
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_BUST" value="2048" cgen:expression="0x800" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      Bust (Delete of Manual Trade)
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_EFF_SEQ_ADM" value="4096" cgen:expression="0x1000" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      upload of Effective
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_TICK_ADM" value="8192" cgen:expression="0x2000" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      End of day filing 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_ITS_NC_ADM" value="16384" cgen:expression="0x4000" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      ITS name change admin 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_DROP_ADM" value="32768" cgen:expression="0x8000" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      drop admin 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_DRPT" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      direct report to tape 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_PRDEF" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      default to limit price 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_XCH" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      X clearing house 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_NDONE_TEXT" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      nothing done with text 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_NO_RANGE_CHK" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      $2 Limit Range Check N/A 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_COMMISSION" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      Commission 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_USE_SDOT_LINKNO" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      Use SDOT generated linkno 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_NML" value="2048" cgen:expression="0x800" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      Names Later (no giveups) 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_BILLING_ADMIN" value="8192" cgen:expression="0x2000" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      Billing Value updates 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_RPT" value="16384" cgen:expression="0x4000" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      this is a report 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_OLD_FMT" value="32768" cgen:expression="0x8000" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      Not used in DBK 4.0 and later 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="LRD_MAX_TA" value="25" cgen:expression="25" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
     maximum TA #'s for report  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="LRD_COMMENT_CODE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
     length of prin act
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="LRD_COMMENT" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
     length of prin act comment 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="NDT_INVALID" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>non-zero value check in CR_RPT_STATUS</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NDT_STOCK_NOT_OPEN" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>ND-stock not open (SDOT only)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NDT_STOCK_NOT_CLOSED" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>ND-stock not closed (SDOT only)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NDT_ND" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>ND-simple nothing done</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NDT_AHEAD_PLUS_MATCHES" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>ND-9999999 ahead plus matches</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NDT_OUTSIDE_QUOTE" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>ND-outside quote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NDT_POSSIBLE_MATCHES" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>ND-possible matches in crowd</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NDT_NO_STANDING" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>ND-no standing in quote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="NDT_GUARANTEE_OF_EXEC" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>guarantee of exec at 999 99/99</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EOD_P_FILED" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
     Literal definition for
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="EARD_MAX_TA" value="15" cgen:expression="15" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
     maximum TA #'s for report 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ES_ELECTED_STP" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="ES_FILED_TICK" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="ES_PERM_FILED" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      bit not set if temp filed 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ES_PERM_TICK" value="12" cgen:expression="ES_FILED_TICK | ES_PERM_FILED" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      == 12 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ES_TEMP_TICK" value="4" cgen:expression="ES_FILED_TICK | !ES_PERM_FILED" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
      ==  4 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="ESARD_MAX_TA" value="12" cgen:expression="12" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
     maximum TA #'s for report 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RI_INTERNAL_ERROR" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_INFO.h"/>
<Enumerator name="RI_ORDER_DROPPED" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_INFO.h"/>
<Enumerator name="RI_ORDER_CLOSED" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_INFO.h"/>
<Enumerator name="RI_BETTER_LIMITS" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_INFO.h"/>
<Enumerator name="RI_MSG_NOT_FOUND" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_INFO.h"/>
<Enumerator name="RI_ORDER_NOT_FILED" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_INFO.h"/>
<Enumerator name="RS_AUTO_MODE" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_SETUP.h"/>
<Enumerator name="MAX_RPTSTS_SHRS_AHEAD" value="99999" cgen:expression="99999L" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_SETUP.h">
<Annotation>
<Comment>
     in round lots! 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="RNP" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/RPT_EXEC_SYNC_REJ_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>Real Names Pending</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="RPR_RNP_BID" value="1" cgen:expression="0x0001" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/RPT_QUOTE_REJ_DATA.h">
<Annotation>
<Comment>
     Check Bid price.   Real Name Pending 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="RPR_RNP_OFFER" value="2" cgen:expression="0x0002" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/RPT_QUOTE_REJ_DATA.h">
<Annotation>
<Comment>
     Check Offer price. Real Name Pending 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SC_SUMM" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/SCROLL.h">
<Annotation>
<Comment>
      summary screen  
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SC_PAGE" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/SCROLL.h">
<Annotation>
<Comment>
      Any Page screen  
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SC_BADGE_PAGE" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/SCROLL.h">
<Annotation>
<Comment>
      Badge Retrieval Page 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SC_SMART_FIND" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/events/SCROLL.h">
<Annotation>
<Comment>
      Smart Find 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SC_SUMMARY_RPT" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/SCROLL.h">
<Annotation>
<Comment>
      Summary Report 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SC_UP" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/SCROLL.h">
<Annotation>
<Comment>
      scroll direction up  
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SC_DOWN" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/SCROLL.h">
<Annotation>
<Comment>
      scroll direction down  
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SC_RESET" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/SCROLL.h">
<Annotation>
<Comment>
      re-center summary 
     </Comment>
</Annotation>
</Enumerator>
<Enumerator name="OC_INTERVAL_LEN" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/SELF_CANCEL_TIMER_IN_DATA.h"/>
<Enumerator imported="yes" name="SC_SIDECAR_ALREADY_REPORTED" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/SIDECAR_RPT_MSG.h">
<Annotation>
<Comment>
     a report has already been 
     received for this Sidecar  
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SD_MSG_NOT_FOUND" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/SIGNAL_DATA.h"/>
<Enumerator name="SFR_PAGES_ABOVE" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h">
<Annotation>
<Comment>scroll-up indication</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SFR_PAGES_BELOW" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h">
<Annotation>
<Comment>scroll-down indication</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SFR_NO_QUOTE" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h">
<Annotation>
<Comment>if there are zero suborders: SFR_NO_QUOTE set: "no quote" condition. SFR_NO_QUOTE cleared: "no orders" condition</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SFR_MAX_SUBORDERS_ON_PAGE" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h"/>
<Enumerator name="CLASS_FIRM" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/SP_GOV_REGISTER_DATA.h" cgen:namespace="Pos:Msgs"/>
<Enumerator name="CLASS_FR" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/SP_GOV_REGISTER_DATA.h" cgen:namespace="Pos:Msgs"/>
<Enumerator name="OPENING_SIZE" value="16" cgen:expression="16" cgen:file="/mnt/pos.shrb/include/events/SP_PROXY_CONFIG_DATA.h" cgen:namespace="Pos:Msgs"/>
<Enumerator name="SR_RSP_OK" value="0" cgen:expression="0x0" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_RSP_DATA.h">
<Annotation>
<Comment>
     No warning 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SR_RSP_ELECT_STPS_OPN" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_RSP_DATA.h">
<Annotation>
<Comment>
     Leaves previously elected STPS 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SR_RSP_PART_RPT_AON" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_RSP_DATA.h">
<Annotation>
<Comment>
     Causes partial execution of 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SR_RSP_PRIN_WITH_BETTER_AON" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_RSP_DATA.h">
<Annotation>
<Comment>
     PRIN trading with better AONs 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SR_RSP_NON_BLOCK_NACK" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_RSP_DATA.h">
<Annotation>
<Comment>
     used to nack non-blocking 
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SI_SWITCH_STK" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/STK_INACTIVE_INFO.h"/>
<Enumerator name="PRODUCT_TYPE_SIZE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h"/>
<Enumerator name="HIGH_PRICE_FLAG" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<Annotation>
<Comment>
     Used to indicate that the stock
     trades at high prices.  May be 
     set in STK_INFO::si_price_type,
    </Comment>
</Annotation>
</Enumerator>
<Enumerator name="SM_STOP_BMKT_FLASH" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/STOP_MKTS.h">
<Annotation>
<Comment>stop flashing of mkts</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SM_STOP_SMKT_FLASH" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/STOP_MKTS.h"/>
<Enumerator name="STK_CLASS" value="1" cgen:expression="::STK_CLASS" cgen:file="/mnt/pos.shrb/include/events/SUBSCRIPTION.h"/>
<Enumerator imported="yes" name="PMP_CLASS" value="2" cgen:file="/mnt/pos.shrb/include/events/SUBSCRIPTION.h"/>
<Enumerator name="MIN_SUB_CLASS" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/SUBSCRIPTION.h"/>
<Enumerator imported="yes" name="MAX_SUB_CLASS" value="2" cgen:file="/mnt/pos.shrb/include/events/SUBSCRIPTION.h"/>
<Enumerator name="MKT_CNT" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h"/>
<Enumerator name="MS_BMKT_FLASH" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>flash buy mkt - new order accepted!</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MS_SMKT_FLASH" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>flash sell mkt - see above why</Comment>
</Annotation>
</Enumerator>
<Enumerator name="N_SUMM_PRICES" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment># prices on summary screen</Comment>
</Annotation>
</Enumerator>
<Enumerator name="N_SUMM_SCREEN" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h"/>
<Enumerator name="MAX_PRI" value="999999999" cgen:expression="999999999" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h"/>
<Enumerator name="MAX_PRI_CNT" value="16" cgen:expression="(2*N_SUMM_PRICES)" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment># PRICE_TOTS in summ screen</Comment>
</Annotation>
</Enumerator>
<Enumerator name="LD_AB_MORE" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>more prices above</Comment>
</Annotation>
</Enumerator>
<Enumerator name="LD_BL_MORE" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>more prices below values of su_bits in SUM_SCREEN (shows contents of msg)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_MKT_BSIDE" value="16" cgen:expression="0x0010" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>MKT_BSIDE struct follows</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_MKT_SSIDE" value="32" cgen:expression="0x0020" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>MKT_SSIDE struct follows</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_MKT_UPDATE" value="64" cgen:expression="0x0040" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>MKT_UPDATE struct follows</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_LMT" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>PRICE_TOTS structs follow (for standard limit screen) (cannot have together with SU_LMT_UPDATE)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_LMT_UPDATE" value="256" cgen:expression="0x0100" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>1 or 2 PRICE_TOTS structs follow (update for a single limit line</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_TICK_UPDATE" value="512" cgen:expression="0x0200" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h"/>
<Enumerator name="SU_STK_LITE" value="1024" cgen:expression="0x0400" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>hilite stock name (previously WS_STK_LITE)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_STK_BOPPER" value="4096" cgen:expression="0x1000" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>bopper on (w/ STK_LITE)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="U_MKT_LN" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h"/>
<Enumerator name="U_BMKT" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h"/>
<Enumerator name="U_SMKT" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h"/>
<Enumerator name="U_LMT_LN" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h"/>
<Enumerator name="U_LMT" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h"/>
<Enumerator name="TD_TICK_BSIDE" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>opened ticks exist on buy side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TD_TICK_SSIDE" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>opened ticks exist on sell side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TD_TICK_BCLR" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>no ticks on buy side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TD_TICK_SCLR" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>no ticks on sell side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_TICK_BCLR" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>0x0010</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_TICK_SCLR" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>no ticks on sell side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_TICK_BSIDE" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>0x0040</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_TICK_SSIDE" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>opened ticks exist on sell side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_TICK_UPDATE" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>update tick data</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_LEN" value="512" cgen:expression="512" cgen:file="/mnt/pos.shrb/include/events/TEXT.h"/>
<Enumerator name="TEXT_MSG_HAS_TEXT" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>tm_long exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_HAS_PREV_MSG" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>previous msg exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_HAS_NEXT_MSG" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>another msg exists</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MSG_NOT_FOUND" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>msg not found!</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_IS_EMPTY" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>1 = Msg is empty. Placeholder.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_HAS_INFO" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>tm_info exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_RPTSTS" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>this is report status msg</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_MSG_TEXT_SIZE" value="170" cgen:expression="170" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h"/>
<Enumerator name="MSG_SUBJECT_SIZE" value="34" cgen:expression="34" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>Use 34 rather than 35 (from frs) to allow room for the up/down arrow 35 chars plus terminal '\0'</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_MSG_SUBJECT_SIZE" value="35" cgen:expression="(MSG_SUBJECT_SIZE + 1)" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h"/>
<Enumerator name="MAX_MENU_FIELD_SIZE" value="36" cgen:expression="(MAX_MSG_SUBJECT_SIZE + 1)" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h"/>
<Enumerator name="NUM_MSG_TEXT_LINES" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h"/>
<Enumerator name="MSG_TEXT_LINE_LENGTH" value="39" cgen:expression="39" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>Same size as AXL template. ts_flags Set by originator.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_HAS_TEXT" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>tm_long exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_HAS_PREV_MSG" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>previous msg exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_HAS_NEXT_MSG" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>another msg exists. Set by Display.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_IS_EMPTY" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = Msg is empty. Placeholder. Set by originator.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_HAS_INFO" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>tm_info exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_RPTSTS" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>this is report status msg ts_subject_attribs:</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_NONE" value="0" cgen:expression="0x00" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>Default case.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_REVERSE" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = Reverse video.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_BLINK" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = Blink.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_UNDERLINE" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = Underline.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_ON_CMD" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = change attrib ? on cmd.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_YELLOW" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = yellow (default is white)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_RED" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = red (default is white)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIBS" value="31" cgen:expression="(TEXT_ATTRIB_REVERSE | TEXT_ATTRIB_BLINK |TEXT_ATTRIB_UNDERLINE | TEXT_ATTRIB_ON_CMD | TEXT_ATTRIB_YELLOW)" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h"/>
<Enumerator name="TEXT_ATTRIB_COLORS" value="240" cgen:expression="0xF0" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>4 MSB bits define color(s).</Comment>
</Annotation>
</Enumerator>
<Enumerator name="ALL_SS_MASK" value="4294967295" cgen:expression="0xffffffffL" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SS.h"/>
<Enumerator imported="yes" name="SLV_OK" value="0" cgen:file="/mnt/pos.shrb/include/events/VALIDATE_SLMT_RSP_DATA.h"/>
<Enumerator imported="yes" name="SLV_ORDER_AT_DIFF_PRICE" value="1" cgen:file="/mnt/pos.shrb/include/events/VALIDATE_SLMT_RSP_DATA.h">
<Annotation>
<Comment>A single order stopped at another price</Comment>
</Annotation>
</Enumerator>
<Enumerator imported="yes" name="SLV_ORDERS_AT_DIFF_PRICE" value="2" cgen:file="/mnt/pos.shrb/include/events/VALIDATE_SLMT_RSP_DATA.h">
<Annotation>
<Comment>Multiple orders stopped at another price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_AWO_ON" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/WS_INFO.h"/>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.book_qup.h.1" cgen:file="/mnt/pos.shrb/include/misc/book_qup.h">
<Annotation>
<Comment>
    bd_book_features:
   </Comment>
</Annotation>
<EnumeratorRef name="BDF_EQA_ON"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.config.h.1" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<Annotation>
<Comment>
    foreign ordinaries translation table codes
    as per FRS Version 2.0, Feb 29, 1996
   </Comment>
</Annotation>
<EnumeratorRef name="DENOM_CODE_UNDEF"/>
<EnumeratorRef name="DENOM_CODE_2TH"/>
<EnumeratorRef name="DENOM_CODE_4TH"/>
<EnumeratorRef name="DENOM_CODE_8TH"/>
<EnumeratorRef name="DENOM_CODE_16TH"/>
<EnumeratorRef name="DENOM_CODE_32TH"/>
<EnumeratorRef name="DENOM_CODE_64TH"/>
<EnumeratorRef name="DENOM_CODE_128TH"/>
<EnumeratorRef name="DENOM_CODE_256TH"/>
<EnumeratorRef name="DENOM_CODE_0TH"/>
<EnumeratorRef name="DENOM_CODE_1TH"/>
<EnumeratorRef name="DENOM_CODE_10TH"/>
<EnumeratorRef name="DENOM_CODE_100TH"/>
<EnumeratorRef name="DENOM_CODE_1000TH"/>
<EnumeratorRef name="DENOM_CODE_10000TH"/>
<EnumeratorRef name="DENOM_CODE_100000TH"/>
<EnumeratorRef name="DENOM_CODE_1000000TH"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.config.h.2" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<Annotation>
<Comment>
    foreign ordinaries denominator values
    as per FRS Version 2.0, Feb 29, 1996
   </Comment>
</Annotation>
<EnumeratorRef name="DENOM_UNDEF"/>
<EnumeratorRef name="DENOM_2TH"/>
<EnumeratorRef name="DENOM_4TH"/>
<EnumeratorRef name="DENOM_8TH"/>
<EnumeratorRef name="DENOM_16TH"/>
<EnumeratorRef name="DENOM_32TH"/>
<EnumeratorRef name="DENOM_64TH"/>
<EnumeratorRef name="DENOM_128TH"/>
<EnumeratorRef name="DENOM_256TH"/>
<EnumeratorRef name="DENOM_0TH"/>
<EnumeratorRef name="DENOM_1TH"/>
<EnumeratorRef name="DENOM_10TH"/>
<EnumeratorRef name="DENOM_100TH"/>
<EnumeratorRef name="DENOM_1000TH"/>
<EnumeratorRef name="DENOM_10000TH"/>
<EnumeratorRef name="DENOM_100000TH"/>
<EnumeratorRef name="DENOM_1000000TH"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.its_struct.h.1" cgen:file="/mnt/pos.shrb/include/misc/its_struct.h">
<EnumeratorRef name="N_ITSFIRMS_N"/>
<EnumeratorRef name="N_ITSFIRMS_A"/>
<EnumeratorRef name="N_EXCP_FIRMS"/>
<EnumeratorRef name="N_NC_EXCP_FIRMS"/>
<EnumeratorRef name="MAX_QTY_SIZE"/>
<EnumeratorRef name="MAX_QTY_NL_PRIN"/>
<EnumeratorRef name="GU_LINE_MIN_SIZE"/>
<EnumeratorRef name="GU_LINE_MAX_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.lmt.h.1" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
    Definitions for ORDER SIDE field in DLL_ORDER below
    These fields are mutually exclusive : only 1 is valid at a time 
   </Comment>
</Annotation>
<EnumeratorRef name="D_BUY"/>
<EnumeratorRef name="D_SELL"/>
<EnumeratorRef name="D_SSHRT"/>
<EnumeratorRef name="D_EXEMPT"/>
<EnumeratorRef name="D_BUY_MINUS"/>
<EnumeratorRef name="D_SELL_PLUS"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.lmt.h.2" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
    Definitions for ORDER TYPE field in DLL_ORDER below
    These fields are mutually exclusive : only 1 is valid at a time 
   </Comment>
</Annotation>
<EnumeratorRef name="D_MKT"/>
<EnumeratorRef name="D_LMT"/>
<EnumeratorRef name="D_STP"/>
<EnumeratorRef name="D_STP_LMT"/>
<EnumeratorRef name="D_MKT_CLO"/>
<EnumeratorRef name="D_MKT_OB"/>
<EnumeratorRef name="D_MIT"/>
<EnumeratorRef name="D_CAB"/>
<EnumeratorRef name="D_MKT_WOW"/>
<EnumeratorRef name="D_LMT_OB"/>
<EnumeratorRef name="D_LMT_WOW"/>
<EnumeratorRef name="D_LOC"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.lmt.h.3" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
    Definitions for TIME_IN_FORCE field  in DLL_ORDER below
    These fields are mutually exclusive : only 1 is valid at a time 
   </Comment>
</Annotation>
<EnumeratorRef name="D_MKT_DAY"/>
<EnumeratorRef name="D_MKT_GTC"/>
<EnumeratorRef name="D_OPG"/>
<EnumeratorRef name="D_LMT_GTC"/>
<EnumeratorRef name="D_OC"/>
<EnumeratorRef name="D_FOK"/>
<EnumeratorRef name="D_LMT_DAY"/>
<EnumeratorRef name="D_XPR"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.lmt.h.4" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Annotation>
<Comment>
    Bit definitions for flags field field  in DLL_ORDER below
    see do_flags. 
    D_AON, D_TTS, D_DNI, D_DNR, D_CAP are mutually exclusive.
   </Comment>
</Annotation>
<EnumeratorRef name="D_AON"/>
<EnumeratorRef name="D_TTS"/>
<EnumeratorRef name="D_DNI"/>
<EnumeratorRef name="D_DNR"/>
<EnumeratorRef name="D_CAP"/>
<EnumeratorRef name="D_TICK"/>
<EnumeratorRef name="D_PFILED"/>
<EnumeratorRef name="D_ELECTED"/>
<EnumeratorRef name="D_EFF_SEQ_ON"/>
<EnumeratorRef name="D_NX"/>
<EnumeratorRef name="D_NXX"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.param.h.1" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<EnumeratorRef name="N_BRKPOINTS"/>
<EnumeratorRef name="BRK_64THS"/>
<EnumeratorRef name="BRK_32NDS"/>
<EnumeratorRef name="BRK_16THS"/>
<EnumeratorRef name="DFLT_BP_64"/>
<EnumeratorRef name="DFLT_BP_32"/>
<EnumeratorRef name="DFLT_BP_16"/>
<EnumeratorRef name="TICKS_PER_DOLLAR"/>
<EnumeratorRef name="PUS_PER_DOLLAR"/>
<EnumeratorRef name="PRICE_TICK"/>
<EnumeratorRef name="MIN_PRICE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.param.h.2" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
    badge id values  
   </Comment>
</Annotation>
<EnumeratorRef name="LMT_BLANK"/>
<EnumeratorRef name="MDS_BLANK"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.param.h.3" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<EnumeratorRef name="BUY_IDX"/>
<EnumeratorRef name="B"/>
<EnumeratorRef name="SELL_IDX"/>
<EnumeratorRef name="S"/>
<Group>
<Annotation>
<Comment>
     order type (om_ordtype) (pi_ordtype) (rp_ordtype) (io_side) (odr_type) 
    </Comment>
</Annotation>
<EnumeratorRef name="OT_STP"/>
<EnumeratorRef name="OT_STP_LMT"/>
<EnumeratorRef name="OT_AON"/>
<EnumeratorRef name="OT_LMT"/>
<EnumeratorRef name="OT_MKT"/>
<EnumeratorRef name="OT_TICK_S"/>
<EnumeratorRef name="OT_LOC"/>
<EnumeratorRef name="OT_CAP"/>
<EnumeratorRef name="OT_AUTOEX"/>
</Group>
<Group>
<Annotation>
<Comment>
     Deprecated 
    </Comment>
</Annotation>
<EnumeratorRef name="STP"/>
<EnumeratorRef name="STP_LMT"/>
<EnumeratorRef name="AON"/>
<EnumeratorRef name="LMT"/>
<EnumeratorRef name="MKT"/>
</Group>
<EnumeratorRef name="BUY"/>
<EnumeratorRef name="SELL"/>
<EnumeratorRef name="SELL_SHORT"/>
<EnumeratorRef name="SS_EXEMPT"/>
<EnumeratorRef name="OVR_NITE"/>
<EnumeratorRef name="LMT_OPG"/>
<Annotation>
<Comment>
    Note: Mark also as LMT (0x0008)    
   </Comment>
</Annotation>
<EnumeratorRef name="TICK_S"/>
<EnumeratorRef name="LOC"/>
<EnumeratorRef name="OC"/>
<Group>
<Annotation>
<Comment>
     DEPRECATED 
    </Comment>
</Annotation>
<EnumeratorRef name="NON_MACH_FIRM"/>
</Group>
<EnumeratorRef name="SELLS"/>
<EnumeratorRef name="ANY_TYPE"/>
<Group>
<Annotation>
<Comment>
     order conds (om_conds) (od_conds) values 
     (most of these values are not used internally in DB2, but are 
     displayed on Order Detail screen) (currently fit in CHMASK).
    </Comment>
</Annotation>
<Group>
<Annotation>
<Comment>
      time in force  definitions 
     </Comment>
</Annotation>
<EnumeratorRef name="DAY"/>
<EnumeratorRef name="GTC"/>
<EnumeratorRef name="OPG"/>
</Group>
<EnumeratorRef name="O_DUP"/>
<EnumeratorRef name="REP_CXL"/>
<EnumeratorRef name="OB"/>
<EnumeratorRef name="DNR"/>
<EnumeratorRef name="DNI"/>
<EnumeratorRef name="TTS"/>
<EnumeratorRef name="STP_AON"/>
<EnumeratorRef name="PRI_INSERT"/>
<EnumeratorRef name="P_FILED"/>
<EnumeratorRef name="T_FILED"/>
<EnumeratorRef name="OC_NX"/>
<EnumeratorRef name="OC_NXX"/>
<EnumeratorRef name="OC_XPR"/>
</Group>
<Group>
<Annotation>
<Comment>
     8/97 DEPRECATED 
    </Comment>
</Annotation>
<EnumeratorRef name="DLL_TICK_ORDER"/>
<EnumeratorRef name="RPTSTS_MSG"/>
</Group>
<Group>
<Annotation>
<Comment>
     10/97 new for Effective Sequence ----------------------------------
    </Comment>
</Annotation>
<EnumeratorRef name="ELECTED"/>
<EnumeratorRef name="NOT_REDUCED"/>
<Annotation>
<Comment>
     (from DLL_ORDER_RECORD2::do_divs_pri) 
    </Comment>
</Annotation>
<EnumeratorRef name="EFF_SEQ_ON"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.param.h.4" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<EnumeratorRef name="BUY_SIDE"/>
<EnumeratorRef name="SELL_SIDE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.param.h.5" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<EnumeratorRef name="BUY_SIDE_IDX"/>
<EnumeratorRef name="SELL_SIDE_IDX"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.param.h.6" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<EnumeratorRef name="MAX_MSG_INFO_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.param.h.7" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<EnumeratorRef name="MAX_CLASSES"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.pos_types.h.1" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    Used with scrolling update messages to indicate
    presence of more data above and below
   </Comment>
</Annotation>
<EnumeratorRef name="PM_MORE_ABOVE"/>
<EnumeratorRef name="PM_MORE_BELOW"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.pss.h.1" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<EnumeratorRef name="SDOT_EFF_SEQ_ON"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PosDefs.h.1" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<EnumeratorRef name="N_PAGE_ORDERS"/>
<EnumeratorRef name="NUM_ENTITY"/>
<EnumeratorRef name="NUM_PWD"/>
<EnumeratorRef name="NUM_SPARES"/>
<EnumeratorRef name="SYMBOL_SIZE"/>
<EnumeratorRef name="CI_COUNT"/>
<EnumeratorRef name="SSF_DISP_RQST"/>
<EnumeratorRef name="SSF_DOING_CLOSING"/>
<EnumeratorRef name="SSF_BLK_TOTS_VALID"/>
<Group>
<Annotation>
<Comment>
     SSR thresholds 
    </Comment>
</Annotation>
<EnumeratorRef name="SSR_MAX"/>
<EnumeratorRef name="SSR_QTY_THRESH"/>
</Group>
<EnumeratorRef name="STP_QTY_THRESH"/>
<EnumeratorRef name="STP_VAL_THRESH"/>
<EnumeratorRef name="STP_QTY_GOV_THRESH"/>
<EnumeratorRef name="MAX_QUOTE_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PosDefs.h.2" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
    typdef lengths for general use  (4.0) 
   </Comment>
</Annotation>
<EnumeratorRef name="L_INT"/>
<EnumeratorRef name="L_SHORT"/>
<EnumeratorRef name="L_PRICE"/>
<EnumeratorRef name="L_QTY"/>
<EnumeratorRef name="L_MILLITIME"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PosDefs.h.3" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<EnumeratorRef name="L_DLL_VERSION"/>
<EnumeratorRef name="L_DLL_REC_LEN"/>
<EnumeratorRef name="N_CONTRA"/>
<EnumeratorRef name="L_DT_SIZE"/>
<EnumeratorRef name="L_TM_SIZE"/>
<EnumeratorRef name="L_STK_SIZE"/>
<EnumeratorRef name="L_TA_SIZE"/>
<EnumeratorRef name="L_BR_SIZE"/>
<EnumeratorRef name="L_SEQ_SIZE"/>
<EnumeratorRef name="L_MAX_TA"/>
<EnumeratorRef name="L_COMMENT_CODE"/>
<EnumeratorRef name="L_COMMENT"/>
<EnumeratorRef name="L_FILLER_SIZE"/>
<EnumeratorRef name="L_SK_SIZE"/>
<EnumeratorRef name="L_SK_SIZE2"/>
<EnumeratorRef name="L_MAX_GV"/>
<EnumeratorRef name="L_PRICE_SIZE"/>
<EnumeratorRef name="L_POSITION_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PosDefs.h.4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
    Various text length constants
   </Comment>
</Annotation>
<EnumeratorRef name="PRICE_TXT_SIZE"/>
<EnumeratorRef name="QTY_TXT_SIZE"/>
<EnumeratorRef name="FIRM_TXT_SIZE"/>
<EnumeratorRef name="COND_TXT_SIZE"/>
<EnumeratorRef name="BADGE_TXT_SIZE"/>
<EnumeratorRef name="TIME_TXT_SIZE"/>
<EnumeratorRef name="TICK_TXT_SIZE"/>
<EnumeratorRef name="YYYYMMDD_SIZE"/>
<EnumeratorRef name="HHMMSSSS_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ADM_INFO.h.1" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h">
<EnumeratorRef name="ADM_ROW"/>
<EnumeratorRef name="ADM_ROW_SZ"/>
<EnumeratorRef name="MAX_ADM_SZ"/>
<Group>
<Annotation>
<Comment>
     Values for the first byte in ai_text: If this value is
    </Comment>
</Annotation>
<EnumeratorRef name="ADM_FLAG_NONE"/>
<EnumeratorRef name="ADM_FLAG_POPENRES"/>
<EnumeratorRef name="ADM_FLAG_POPEN2LK"/>
<EnumeratorRef name="ADM_FLAG_ARROW"/>
<EnumeratorRef name="ADM_FLAG_POPENNDONE"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.AOB_LMTS.h.1" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<EnumeratorRef name="GVSTP"/>
<EnumeratorRef name="HILITE"/>
<EnumeratorRef name="BLKSPC"/>
<EnumeratorRef name="OPGSUBSET"/>
<EnumeratorRef name="INCLUSIVE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.APPROUTE_EOD_END_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/APPROUTE_EOD_END_DATA.h">
<EnumeratorRef name="APPROUTE_EOD_MSG_MAX_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.APPROUTE_EOD_END_DATA.h.2" cgen:file="/mnt/pos.shrb/include/events/APPROUTE_EOD_END_DATA.h">
<Annotation>
<Comment>
    eod filing end status 
   </Comment>
</Annotation>
<EnumeratorRef name="STKS_FAIL"/>
<EnumeratorRef name="STKS_COMPLETE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.AR_MSG.h.1" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h">
<EnumeratorRef name="max_q_defs"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.AR_MSG.h.2" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h">
<EnumeratorRef name="max_type_defs"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.AWAY_QUOTE_UPDATE.h.1" cgen:file="/mnt/pos.shrb/include/events/AWAY_QUOTE_UPDATE.h">
<EnumeratorRef name="MAX_AWAY_MKTS"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.BKDUMP_REQ.h.1" cgen:file="/mnt/pos.shrb/include/events/BKDUMP_REQ.h">
<Annotation>
<Comment>
    Which dump 
   </Comment>
</Annotation>
<EnumeratorRef name="BKDUMP_DB"/>
<EnumeratorRef name="BKDUMP_SMART_SEQ"/>
<EnumeratorRef name="BKDUMP_ALL_STATE"/>
<EnumeratorRef name="BKDUMP_PMP"/>
<Group>
<Annotation>
<Comment>
     Other constants 
    </Comment>
</Annotation>
<EnumeratorRef name="BKDUMP_FILE_LEN"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.BKDUMP_REQ.h.2" cgen:file="/mnt/pos.shrb/include/events/BKDUMP_REQ.h">
<Annotation>
<Comment>
    option field - bit field settings 
   </Comment>
</Annotation>
<EnumeratorRef name="BKDUMP_NO_OVERWRITE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.BLK_FREEZE.h.1" cgen:file="/mnt/pos.shrb/include/events/BLK_FREEZE.h">
<EnumeratorRef name="FR_OARS"/>
<EnumeratorRef name="FR_MOC"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.BLOCK_RPT.h.1" cgen:file="/mnt/pos.shrb/include/events/BLOCK_RPT.h">
<EnumeratorRef name="BL_OARS_VALID"/>
<EnumeratorRef name="BL_MOC_VALID"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.CAP_SUMRPT_SCROLL_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/CAP_SUMRPT_SCROLL_DATA.h">
<EnumeratorRef name="SUMRPT_MAX_ITEMS"/>
<EnumeratorRef name="SR_MORE_BELOW"/>
<EnumeratorRef name="SR_MORE_ABOVE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.CC_STK.h.1" cgen:file="/mnt/pos.shrb/include/events/CC_STK.h">
<EnumeratorRef name="CS_CL"/>
<EnumeratorRef name="CS_PR"/>
<EnumeratorRef name="CS_WS"/>
<EnumeratorRef name="CS_RT"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.CLASS_REGISTRATION.h.1" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<EnumeratorRef name="MAX_KEY"/>
<EnumeratorRef name="MENU_SIZE"/>
<EnumeratorRef name="MAX_WAIT"/>
<Group>
<Annotation>
<Comment>
     function definition for key actions: 
    </Comment>
</Annotation>
<EnumeratorRef name="MW_EXPAND"/>
<EnumeratorRef name="MW_DELETE"/>
<EnumeratorRef name="MW_SIGNAL"/>
<EnumeratorRef name="MW_SIG_AND_DEL"/>
<Annotation>
<Comment>
     combination of MW_SIGNAL and MW_DELETE  
    </Comment>
</Annotation>
<EnumeratorRef name="MW_SIGNAL_FINAL"/>
<Annotation>
<Comment>
     move the kb. queue to aset specified in  
    </Comment>
</Annotation>
<Annotation>
<Comment>
     the class.  
    </Comment>
</Annotation>
</Group>
<EnumeratorRef name="MW_UNKNOWN"/>
<EnumeratorRef name="MW_TIMER_1"/>
<EnumeratorRef name="MW_TIMER_2"/>
<EnumeratorRef name="IDX_CL_LMT_1MIN_IC"/>
<EnumeratorRef name="IDX_CL_LMT_2MIN_IC"/>
<EnumeratorRef name="IDX_CL_LMT_30SEC_IC"/>
<EnumeratorRef name="IDX_CL_LMT_IC_REJ"/>
<EnumeratorRef name="IDX_CL_MKT_1MIN_IC"/>
<EnumeratorRef name="IDX_CL_MKT_2MIN_IC"/>
<EnumeratorRef name="IDX_CL_MKT_30SEC_IC"/>
<EnumeratorRef name="IDX_CL_MKT_IC_REJ"/>
<EnumeratorRef name="IDX_CL_CR"/>
<EnumeratorRef name="IDX_CL_DETAIL"/>
<EnumeratorRef name="IDX_CL_CR_NL_1"/>
<EnumeratorRef name="IDX_CL_CR_NL_2"/>
<EnumeratorRef name="IDX_CL_NULL"/>
<EnumeratorRef name="IDX_CL_REMOVE_30"/>
<EnumeratorRef name="IDX_CL_REMOVE_120"/>
<EnumeratorRef name="IDX_CL_DETAIL_REMOVE"/>
<EnumeratorRef name="IDX_CL_CR_MW"/>
<EnumeratorRef name="LAST_ITS_IDX"/>
<EnumeratorRef name="SSR_CLASS_INDX"/>
<EnumeratorRef name="TICK_MSG_CLASS_INDX"/>
<EnumeratorRef name="RPT_STATUS_CLASS_INDX"/>
<EnumeratorRef name="REM_RPT_STAT_CLASS_INDX"/>
<EnumeratorRef name="DLL_MSG_CLASS_INDX"/>
<EnumeratorRef name="MSGS_IN_Q_CLASS_INDX"/>
<EnumeratorRef name="REPORT_SIDECAR_INDX"/>
<EnumeratorRef name="REMOVE_SIDECAR_INDX"/>
<EnumeratorRef name="MAX_PREDEFINED_CLASSES"/>
<EnumeratorRef name="MW_SSR_PRI"/>
<EnumeratorRef name="MW_THRESH_PRI"/>
<EnumeratorRef name="MW_TICK_MSG_PRI"/>
<EnumeratorRef name="MW_RPT_STATUS_PRI"/>
<EnumeratorRef name="MW_DLL_MSG_PRI"/>
<EnumeratorRef name="MW_MSG_IN_Q_PRI"/>
<EnumeratorRef name="MW_MSG_SIDECAR_PRI"/>
<EnumeratorRef name="MW_EQA_PRIO1_WARN"/>
<EnumeratorRef name="MW_EQA_RN_WARN"/>
<EnumeratorRef name="MW_EQA_PRIO1_VIOLATE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.CP_TEXT.h.1" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h">
<EnumeratorRef name="CP_SUBJECT_SIZE"/>
<EnumeratorRef name="TEXT_CP_HAS_TEXT"/>
<Annotation>
<Comment>
    Set by Database.             
   </Comment>
</Annotation>
<EnumeratorRef name="TEXT_CP_HAS_PREV_MSG"/>
<EnumeratorRef name="TEXT_CP_HAS_NEXT_MSG"/>
<EnumeratorRef name="CP_NOT_FOUND"/>
<Annotation>
<Comment>
    Set by Display.             
   </Comment>
</Annotation>
<EnumeratorRef name="TEXT_CP_IS_EMPTY"/>
<EnumeratorRef name="TEXT_IS_LAST_MSG"/>
<EnumeratorRef name="TEXT_IS_COMM_PG"/>
<EnumeratorRef name="TEXT_IS_SINGLE_STK_PG"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.CTR_NAMES.h.1" cgen:file="/mnt/pos.shrb/include/events/CTR_NAMES.h">
<EnumeratorRef name="L_MF_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.DLL_LEADER2.h.1" cgen:file="/mnt/pos.shrb/include/events/DLL_LEADER2.h">
<Annotation>
<Comment>
    Flags values for DLL_LEADER2::dl_flags 
   </Comment>
</Annotation>
<EnumeratorRef name="DL_FROZEN"/>
<EnumeratorRef name="DL_REPORTED"/>
<EnumeratorRef name="DL_DIVIDEND"/>
<EnumeratorRef name="DL_XPRESS"/>
<EnumeratorRef name="DL_ELECT_ON_QUOTE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ECHO_BACK_MSG_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/ECHO_BACK_MSG_DATA.h">
<EnumeratorRef name="ECHO_BACK_MAX_DATA_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.EFF_SEQ_INFO.h.1" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_INFO.h">
<EnumeratorRef name="ESI_TEXT_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.EXE_RPT.h.1" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Group>
<Annotation>
<Comment>
     Flags for ex_extype 
    </Comment>
</Annotation>
<EnumeratorRef name="EXT_GRP_RPT"/>
<EnumeratorRef name="EXT_IND_RPT"/>
<EnumeratorRef name="EXT_DROP"/>
<EnumeratorRef name="EXT_DEL"/>
<EnumeratorRef name="EXT_CXL"/>
<EnumeratorRef name="EXT_BRK_OK"/>
</Group>
<Group>
<Annotation>
<Comment>
     Two types of block executions:  opening, and block stops.
     Block stops (and other non-openings) use EXT_BLK_RPT.       
     Openings use EXT_OPENING.               
    </Comment>
</Annotation>
<EnumeratorRef name="EXT_BLK_RPT"/>
<EnumeratorRef name="EXT_OPENING"/>
</Group>
<EnumeratorRef name="EXT_DROP_OK"/>
<EnumeratorRef name="EXE_STP_RPT"/>
<Group>
<Annotation>
<Comment>
     flags for ex_conds 
    </Comment>
</Annotation>
<EnumeratorRef name="EX_COM"/>
<EnumeratorRef name="EX_NCOM"/>
<EnumeratorRef name="EX_XCH"/>
<EnumeratorRef name="EX_OK"/>
<EnumeratorRef name="EXE_OPG"/>
</Group>
<Group>
<Annotation>
<Comment>
     values for ex_flags 
    </Comment>
</Annotation>
<EnumeratorRef name="EXF_STOP_BMKT_FLASH"/>
<EnumeratorRef name="EXF_STOP_SMKT_FLASH"/>
<EnumeratorRef name="EXF_AMEX"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.FILE_DATE_TIME_INFO.h.1" cgen:file="/mnt/pos.shrb/include/events/FILE_DATE_TIME_INFO.h">
<EnumeratorRef name="FDTI_TEXT_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.FILE_ELECT_FLAGS.h.1" cgen:file="/mnt/pos.shrb/include/events/FILE_ELECT_FLAGS.h">
<EnumeratorRef name="UPDATE_LAST_SALE"/>
<EnumeratorRef name="FILE_ELECT"/>
<EnumeratorRef name="FILE_TICKS_ONLY"/>
<EnumeratorRef name="UNFILE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.FIND_RSP.h.1" cgen:file="/mnt/pos.shrb/include/events/FIND_RSP.h">
<EnumeratorRef name="FR_PAGE_SCR"/>
<EnumeratorRef name="FR_FBS_SCR"/>
<EnumeratorRef name="FR_MR_ABOVE"/>
<EnumeratorRef name="FR_MR_BELOW"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.GIVEUP.h.1" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h">
<EnumeratorRef name="AON_IDX"/>
<EnumeratorRef name="STP_IDX"/>
<EnumeratorRef name="DOT_IDX"/>
<EnumeratorRef name="LMT_IDX"/>
<EnumeratorRef name="LOC_IDX"/>
<EnumeratorRef name="TICK_IDX"/>
<EnumeratorRef name="PRIN_IDX"/>
<EnumeratorRef name="LMT_IDX_B"/>
<EnumeratorRef name="LOC_IDX_B"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.GRP_CXL.h.1" cgen:file="/mnt/pos.shrb/include/events/GRP_CXL.h">
<EnumeratorRef name="GC_STOP_BMKT_FLASH"/>
<EnumeratorRef name="GC_STOP_SMKT_FLASH"/>
<EnumeratorRef name="GC_CLR_ODD_LOT"/>
<EnumeratorRef name="GC_CAP_CXL_REPLACED"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.IN_COMMITMENT.h.1" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h">
<Annotation>
<Comment>
    bits def. for ic_type: 
   </Comment>
</Annotation>
<EnumeratorRef name="ITS_BUY"/>
<EnumeratorRef name="ITS_SELL"/>
<EnumeratorRef name="ITS_SSHRT"/>
<EnumeratorRef name="ITS_SSEX"/>
<EnumeratorRef name="ITS_LMT"/>
<EnumeratorRef name="ITS_MKT"/>
<EnumeratorRef name="ITS_CXL"/>
<Group>
<Annotation>
<Comment>
     Conds for commitment: 
    </Comment>
</Annotation>
<EnumeratorRef name="IC_BLOCK"/>
<EnumeratorRef name="IC_DUP"/>
<EnumeratorRef name="IC_EXPIR"/>
<EnumeratorRef name="IC_TA_PEND"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.IN_COMMITMENT.h.2" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h">
<EnumeratorRef name="CR_BOOK_AVAILABLE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.IN_OARS.h.1" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>
    The message-flags will be re-used as follows:
    IO_FRZ_STATUS    =   Sidecar status FREEZE message
    IO_AFTER_FREEZE  =   Sidecar AFTERFREEZE message
    IO_FINAL_STATUS  =   Sidecar Open Execution message
    IO_STATUS | IO_FRZ_STATUS   =   pre-execution status
    IO_STATUS | IO_FINAL_STATUS =   post-execution status
    IO_SIDECAR_REPORTABLE = IO_FRZ_STATUS | IO_AFTER_FREEZE
    IO_SIDECAR_NONREPORTABLE = IO_FINAL_STATUS
   </Comment>
</Annotation>
<EnumeratorRef name="IO_NONE"/>
<EnumeratorRef name="IO_STATUS"/>
<EnumeratorRef name="IO_FRZ_STATUS"/>
<EnumeratorRef name="IO_UNFRZ_STATUS"/>
<EnumeratorRef name="IO_AFTER_FREEZE"/>
<EnumeratorRef name="IO_FINAL_STATUS"/>
<EnumeratorRef name="IO_REOPEN"/>
<EnumeratorRef name="IO_ODD_LOT"/>
<EnumeratorRef name="IO_TIME"/>
<EnumeratorRef name="IO_CLOSE"/>
<EnumeratorRef name="IO_SIDECAR_REPORTABLE"/>
<EnumeratorRef name="IO_SIDECAR_NONREPORTABLE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ITS_ADMIN_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/ITS_ADMIN_DATA.h">
<Annotation>
<Comment>
    ITS_ADMIN_DATA Constants
   </Comment>
</Annotation>
<EnumeratorRef name="ITS_AD_DESTINATION_SIZE"/>
<EnumeratorRef name="ITS_AD_TEXT_LENGTH_SIZE"/>
<EnumeratorRef name="ITS_AD_TEXT_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ITS_COMMITMENT_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/ITS_COMMITMENT_DATA.h">
<Annotation>
<Comment>
    ITS_COMMITMENT_DATA Constants
   </Comment>
</Annotation>
<EnumeratorRef name="ITS_CD_1MIN_EXPIRATION"/>
<EnumeratorRef name="ITS_CD_MAX_GIVEUPS"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ITS_EXECUTION_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/ITS_EXECUTION_DATA.h">
<Annotation>
<Comment>
    ITS_EXECUTION_DATA Constants
   </Comment>
</Annotation>
<EnumeratorRef name="ITS_ED_MAX_GIVEUPS"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ITS_EXE_REQ_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/ITS_EXE_REQ_DATA.h">
<EnumeratorRef name="IER_FILE_AND_ELECT"/>
<EnumeratorRef name="IER_BLOCKING"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ITS_FMT_RSP.h.1" cgen:file="/mnt/pos.shrb/include/events/ITS_FMT_RSP.h">
<Annotation>
<Comment>
    bit values for re_flags; describe state of report; eg. execution, cancel.. 
   </Comment>
</Annotation>
<EnumeratorRef name="RE_CXL"/>
<EnumeratorRef name="RE_NCHANGE"/>
<EnumeratorRef name="RE_NLATER"/>
<EnumeratorRef name="RE_PRIN"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ITS_NAME_CHANGE_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/ITS_NAME_CHANGE_DATA.h">
<Annotation>
<Comment>
    ITS_NAME_CHANGE_DATA Constants
   </Comment>
</Annotation>
<EnumeratorRef name="ITS_NCD_MAX_GIVEUPS"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ITS_NC_REQ_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/ITS_NC_REQ_DATA.h">
<EnumeratorRef name="INR_MAX_GIVE_UPS"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ITS_POA.h.1" cgen:file="/mnt/pos.shrb/include/events/ITS_POA.h">
<EnumeratorRef name="N_POA_GV"/>
<Group>
<Annotation>
<Comment>
     values for poa_flags 
    </Comment>
</Annotation>
<EnumeratorRef name="POAF_NLATER"/>
<EnumeratorRef name="POAF_PRIN"/>
</Group>
<Group>
<Annotation>
<Comment>
     values for poa_type 
    </Comment>
</Annotation>
<EnumeratorRef name="POA_IND"/>
<EnumeratorRef name="POA_CXL"/>
<EnumeratorRef name="POA_2LK"/>
<EnumeratorRef name="POA_ADM"/>
<EnumeratorRef name="POA_BOT"/>
<EnumeratorRef name="POA_SLD"/>
<EnumeratorRef name="POA_SS"/>
<EnumeratorRef name="POA_SX"/>
<EnumeratorRef name="POA_ND"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ItsInterfaceTypes.h.1" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment/>
</Annotation>
<EnumeratorRef name="ITS_ID_SIZE"/>
<EnumeratorRef name="ITS_SIZE_SIZE"/>
<EnumeratorRef name="ITS_PRICE_SIZE"/>
<EnumeratorRef name="ITS_GIVEUP_NAME_SIZE"/>
<EnumeratorRef name="ITS_STK_SIZE"/>
<EnumeratorRef name="ITS_NUM_GIVEUPS_SIZE"/>
<EnumeratorRef name="ITS_BROKER_ID_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.ItsInterfaceTypes.h.2" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
    ITS_TEXT_HEADER Constants
   </Comment>
</Annotation>
<EnumeratorRef name="ITS_TH_LENGTH_SIZE"/>
<EnumeratorRef name="ITS_TH_RESERVED_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.LASTSALE.h.1" cgen:file="/mnt/pos.shrb/include/events/LASTSALE.h">
<EnumeratorRef name="LS_STK"/>
<EnumeratorRef name="LS_MDD"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.LMT_REPORT_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="DR_VERSION_SIZE"/>
<EnumeratorRef name="DR_MAX_CONTRA_CNT"/>
<EnumeratorRef name="DR_COMMENT_CODE_SIZE"/>
<EnumeratorRef name="DR_TRANS_ID_SIZE"/>
<EnumeratorRef name="DR_COMMENT_SIZE"/>
<EnumeratorRef name="DR_MAX_TA_CNT"/>
<EnumeratorRef name="DR_TIME_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.LMT_REPORT_DATA.h.2" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    Flag bits for DBK_REPORT::m_rec_id_flags 
   </Comment>
</Annotation>
<EnumeratorRef name="DR_NX_AUTO_EXECUTION"/>
<EnumeratorRef name="DR_NX_REAL_NAMES_SATISFIED"/>
<EnumeratorRef name="DR_END_BLKRPT"/>
<EnumeratorRef name="DR_UNBUNDLE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.LMT_REPORT_DATA.h.3" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    Flag bits for DBK_REPORT::m_sp_conds_flags 
   </Comment>
</Annotation>
<EnumeratorRef name="DR_XCH"/>
<EnumeratorRef name="DR_NO_RANGE_CHECK"/>
<Annotation>
<Comment>
    !TODO: We don't seem to set
    this anywhere.  What does
   </Comment>
</Annotation>
<EnumeratorRef name="DR_RPT"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.LMT_REPORT_DATA.h.4" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    Flag bits for m_dbkReserved 
    Set by stk. Read by log analysis
   </Comment>
</Annotation>
<EnumeratorRef name="DR_DBK_BUY"/>
<Annotation>
<Comment>
    Limit Report for sell orders 
   </Comment>
</Annotation>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.MDS_RPT.h.1" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<EnumeratorRef name="MD_QUOTE"/>
<EnumeratorRef name="MD_TRADE"/>
<EnumeratorRef name="MD_STATUS"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.MKT_ORDER_IMBAL_MSG.h.1" cgen:file="/mnt/pos.shrb/include/events/MKT_ORDER_IMBAL_MSG.h">
<EnumeratorRef name="MOI_BUY_IMBALANCE"/>
<EnumeratorRef name="MOI_SELL_IMBALANCE"/>
<EnumeratorRef name="MOI_NO_IMBALANCE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.MKT_ORDER_IMBAL_MSG.h.2" cgen:file="/mnt/pos.shrb/include/events/MKT_ORDER_IMBAL_MSG.h">
<EnumeratorRef name="MOI_MOO"/>
<EnumeratorRef name="MOI_MOC"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.MOD_COMMITMENT.h.1" cgen:file="/mnt/pos.shrb/include/events/MOD_COMMITMENT.h">
<EnumeratorRef name="MO_EXE"/>
<EnumeratorRef name="MO_EXE_NL"/>
<EnumeratorRef name="MO_CXL"/>
<EnumeratorRef name="MO_NA"/>
<EnumeratorRef name="MO_NAME_CHG"/>
<EnumeratorRef name="MO_NO_USER_ACTION"/>
<EnumeratorRef name="MO_REJECT"/>
<EnumeratorRef name="MO_EXP"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.OD_MSG.h.1" cgen:file="/mnt/pos.shrb/include/events/OD_MSG.h">
<EnumeratorRef name="N_HISTS"/>
<Group>
<Annotation>
<Comment>
     bit flag values for om_flags. 
    </Comment>
</Annotation>
<EnumeratorRef name="F_OD_SUMM"/>
<EnumeratorRef name="F_OD_HIST"/>
<EnumeratorRef name="F_OD_MBELOW"/>
<EnumeratorRef name="F_OD_MABOVE"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PEEK_INFO.h.1" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h">
<EnumeratorRef name="PI_HAS_PG"/>
<EnumeratorRef name="PI_CONTINUE"/>
<EnumeratorRef name="PI_NO_STOCK"/>
<EnumeratorRef name="MIN_PRI_PEEK_CNT"/>
<EnumeratorRef name="MAX_PRI_PEEK_CNT"/>
<EnumeratorRef name="TOTAL_PEEK_CNT"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PLAIN_TEXT.h.1" cgen:file="/mnt/pos.shrb/include/events/PLAIN_TEXT.h">
<EnumeratorRef name="MAX_LENGTH"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PM_ACTIVITY_UPDATE_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PM_ACTIVITY_UPDATE_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PM_IS_LAST_SALE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PM_DLL_ACTIVITY_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    pda_flags definitions 
   </Comment>
</Annotation>
<Group>
<Annotation>
<Comment>
     These definitions are based on the da_flags
     as documented in DLL_ACTIVITY_DATA.h, and
     account for the fact that in SDOT bit 0 is 
     most significant bit and bit 15 is the least
     e.g. PRIN TO CROWD is bit 15 in SDOT which 
     is 0x0001, rather than 0x8000             
    </Comment>
</Annotation>
<EnumeratorRef name="DLL_PRIN_TO_CROWD"/>
<EnumeratorRef name="DLL_ITS_REPORT"/>
<EnumeratorRef name="DLL_PRIN_TO_OPEN"/>
<EnumeratorRef name="DLL_ITS_NAME_CHG"/>
<EnumeratorRef name="DLL_PRIN_TO_BLOCK"/>
<EnumeratorRef name="DLL_PRIN_EXEC"/>
<EnumeratorRef name="DLL_MANUAL_TRADE"/>
<EnumeratorRef name="DLL_OLA_UPDATE"/>
</Group>
<Group>
<Annotation>
<Comment>
     And flags with REPORT_SOURCE_MASK and 
     check equivalence to these values. This
     derives from the fact that SDOT stores
     1-4 in bits 7-5 with their least sig bit
     being 7 (big endian)
    </Comment>
</Annotation>
<EnumeratorRef name="DLL_REPORT_SOURCE_MASK"/>
<EnumeratorRef name="DLL_REPORT_SOURCE_SAX"/>
<EnumeratorRef name="DLL_REPORT_SOURCE_BOOK"/>
<EnumeratorRef name="DLL_REPORT_SOURCE_BOOTH"/>
<EnumeratorRef name="DLL_REPORT_SOURCE_SDOT"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PM_EOD_END_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PM_EOD_END_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    eod filing end status 
   </Comment>
</Annotation>
<EnumeratorRef name="PM_POSITION_UPLOAD_COMPLETE"/>
<EnumeratorRef name="PM_MRO_COMPLETE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PM_POSITION_UPLOAD_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PM_POSITION_UPLOAD_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="VERSION_SIZE"/>
<EnumeratorRef name="RECORD_LENGTH_SIZE"/>
<EnumeratorRef name="MAX_STK_RECORD"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PM_SAX_ACTIVITY_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    psx_flags DEFINITIONS 
   </Comment>
</Annotation>
<EnumeratorRef name="PM_SAX_POS_DUPE"/>
<Group>
<Annotation>
<Comment>
     POSITION ACTIVITY FLAGS
    </Comment>
</Annotation>
<EnumeratorRef name="PM_SAX_BUST"/>
<EnumeratorRef name="PM_SAX_EXEC"/>
<EnumeratorRef name="PM_PRICE_CORRECTION"/>
<EnumeratorRef name="PM_CONTRA_CORRECTION"/>
</Group>
<Group>
<Annotation>
<Comment>
     POSITION TYPE FLAGS
    </Comment>
</Annotation>
<EnumeratorRef name="PM_PRIN_MODIFICATION"/>
<EnumeratorRef name="PM_AWO_MODIFICATION"/>
<Annotation>
<Comment>
     in a prin to crowd  
    </Comment>
</Annotation>
<EnumeratorRef name="PM_ITS_MODIFICATION"/>
</Group>
<Group>
<Annotation>
<Comment>
     LINKNO FLAGS
    </Comment>
</Annotation>
<EnumeratorRef name="PM_DBK_LINKNO"/>
<Annotation>
<Comment>
     by the display book  
    </Comment>
</Annotation>
<EnumeratorRef name="PM_SDOT_LINKNO"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PM_SAX_ACTIVITY_DATA.h.2" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="MAX_SAX_GV"/>
<EnumeratorRef name="ERC_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PM_SDOT_DBK_REJECT_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PM_SDOT_DBK_REJECT_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PSDR_ERROR_CODE_SIZE"/>
<EnumeratorRef name="PSDR_ERROR_MESSAGE_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PM_TRADE_LIST_UPDATE_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PM_TRADE_LIST_UPDATE_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PM_TRADE_LIST_MAX_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PRICE_TOTS.h.1" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>
    values of pt_flags 
   </Comment>
</Annotation>
<EnumeratorRef name="PT_HI"/>
<EnumeratorRef name="PT_STOP_NE"/>
<EnumeratorRef name="PT_TICK_EXISTS"/>
<EnumeratorRef name="PT_TICK_BETTER"/>
<EnumeratorRef name="PT_HI_2"/>
<EnumeratorRef name="PT_TICK_HI"/>
<EnumeratorRef name="PT_LMT_HI"/>
<EnumeratorRef name="PT_AON_HI"/>
<EnumeratorRef name="PT_OPG_HI"/>
<EnumeratorRef name="PT_LOC_HI"/>
<EnumeratorRef name="PT_STP_HI"/>
<EnumeratorRef name="PT_SL_HI"/>
<EnumeratorRef name="PT_NEW_PRICE_HI"/>
<EnumeratorRef name="PT_SP_HI_2"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PRIN_ACT.h.1" cgen:file="/mnt/pos.shrb/include/events/PRIN_ACT.h">
<EnumeratorRef name="WT_SIZE"/>
<EnumeratorRef name="CC_SIZE"/>
<EnumeratorRef name="FC_SIZE"/>
<EnumeratorRef name="DBL_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PRIN_TO_CROWD.h.1" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<EnumeratorRef name="OE_VERSION_SIZE"/>
<EnumeratorRef name="OE_EXEC_TIME_SIZE"/>
<EnumeratorRef name="OE_CSH_ND_SLR_SIZE"/>
<EnumeratorRef name="QTY_SIZE"/>
<EnumeratorRef name="EXPANDED_QTY_SIZE"/>
<EnumeratorRef name="CROWD_SIZE"/>
<EnumeratorRef name="OE_PRICE_INT_SIZE"/>
<EnumeratorRef name="OE_PRICE_FRAC_SIZE"/>
<EnumeratorRef name="AWO_PRICE_INT_SIZE"/>
<EnumeratorRef name="AWO_PRICE_FRAC_SIZE"/>
<EnumeratorRef name="OE_INPUT_TIME_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PROMPT_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PROMPT_DATA.h">
<EnumeratorRef name="PROMPT_DATA_NONE"/>
<EnumeratorRef name="PROMPT_DATA_TICK"/>
<EnumeratorRef name="PROMPT_DATA_STP_LMT"/>
<EnumeratorRef name="PROMPT_DATA_BUY_STP"/>
<EnumeratorRef name="PROMPT_DATA_SELL_STP"/>
<EnumeratorRef name="PROMPT_DATA_BUY_MKT"/>
<EnumeratorRef name="PROMPT_DATA_SELL_MKT"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PR_CMN_PRINT_JOB_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PR_CMN_PRINT_JOB_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PR_MAX_REQ_DATA_MAX_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PR_END_JOB_RESPONSE_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PR_END_JOB_RESPONSE_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PR_JOB_COMPLETED"/>
<EnumeratorRef name="PR_JOB_FAILED"/>
<EnumeratorRef name="PR_JOB_SCHEDULED"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PR_JOB_NACK_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PR_JOB_NACK_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PR_PRINT_SERVICES_UNAVAILABLE"/>
<EnumeratorRef name="PR_PRINT_QUOTA_EXCEEDED"/>
<EnumeratorRef name="PR_BAD_PRINTER_SPECIFIED"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PR_PRINT_PAGE_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/PR_PRINT_PAGE_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PR_MAX_PAGE_TEXT_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.PositionSummaryData.h.1" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="TIMESTAMP_SIZE"/>
<EnumeratorRef name="BOUGHT_SIZE"/>
<EnumeratorRef name="SOLD_SIZE"/>
<EnumeratorRef name="ODDBOUGHT_SIZE"/>
<EnumeratorRef name="ODDSOLD_SIZE"/>
<EnumeratorRef name="PRIOR_SIZE"/>
<EnumeratorRef name="LSALE_SIZE"/>
<EnumeratorRef name="NET_SIZE"/>
<EnumeratorRef name="PNL_SIZE"/>
<EnumeratorRef name="NETCHANGE_SIZE"/>
<EnumeratorRef name="NETVALUE_SIZE"/>
<EnumeratorRef name="OPENNIG_SIZE_TEMP"/>
<EnumeratorRef name="TRADE_UNIT_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.QUOTE.h.1" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>
    flags for quote modes used in qu_mode,  mq_mode  
   </Comment>
</Annotation>
<EnumeratorRef name="QM_DB"/>
<EnumeratorRef name="QM_DO"/>
<EnumeratorRef name="QM_DD"/>
<EnumeratorRef name="QM_FT"/>
<EnumeratorRef name="QM_NF"/>
<EnumeratorRef name="QM_RPT"/>
<EnumeratorRef name="QM_ASSIST"/>
<EnumeratorRef name="QM_AQ_DIRECT"/>
<EnumeratorRef name="QM_AQ_CANCEL"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.QUOTE_ASSIST_CEASE_TIMESTAMP_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/QUOTE_ASSIST_CEASE_TIMESTAMP_DATA.h">
<EnumeratorRef name="MAX_NUM_QA_TS_TAS"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.QUOTE_TIMER.h.1" cgen:file="/mnt/pos.shrb/include/events/QUOTE_TIMER.h">
<EnumeratorRef name="ASCII_TIME_LEN"/>
<EnumeratorRef name="ASCII_SEC_LEN"/>
<EnumeratorRef name="EQA_INFO_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.REAL_NAMES_REQ_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_REQ_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="RN_WITH_QUOTE_OVERLAY"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.REJECT_REPORT.h.1" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<EnumeratorRef name="REJ_OK"/>
<EnumeratorRef name="REJ_QTY"/>
<EnumeratorRef name="REJ_XQTY"/>
<EnumeratorRef name="REJ_MKT_BRK"/>
<EnumeratorRef name="REJ_XMKT_BRK"/>
<EnumeratorRef name="REJ_STP_M_PRI"/>
<EnumeratorRef name="REJ_X_TICK_1"/>
<EnumeratorRef name="REJ_X_TICK_2"/>
<EnumeratorRef name="REJ_X_TICK_3"/>
<EnumeratorRef name="REJ_X_TICK_4"/>
<EnumeratorRef name="REJ_U_COMBINATION"/>
<EnumeratorRef name="REJ_ERROR"/>
<EnumeratorRef name="REJ_DROP"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.REPORT_CORRECTION_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<EnumeratorRef name="RC_VERSION_SIZE"/>
<EnumeratorRef name="RC_MAX_CONTRA_CNT"/>
<EnumeratorRef name="RC_CONTRA_CNT_SIZE"/>
<EnumeratorRef name="RC_COMMENT_CODE_SIZE"/>
<EnumeratorRef name="RC_COMMENT_SIZE"/>
<EnumeratorRef name="RC_MAX_TA_CNT"/>
<EnumeratorRef name="RC_TIME_SIZE"/>
<EnumeratorRef name="RC_PRICE_SIZE"/>
<EnumeratorRef name="RC_CONTRA_QTY_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.REPORT_CORRECTION_DATA.h.2" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Annotation>
<Comment>
    Flag bits for DBK_REPORT_CORRECTION::m_rec_id_flags 
   </Comment>
</Annotation>
<EnumeratorRef name="RC_NX_REAL_NAMES_ASSIGNMENT"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.REPORT_CORRECTION_DATA.h.3" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Annotation>
<Comment>
    Flag bits for DBK_REPORT_CORRECTION_TA::m_ta_flags 
   </Comment>
</Annotation>
<EnumeratorRef name="RC_COMPLETE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.RPT.h.1" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<EnumeratorRef name="RC_MAX_GV"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.RPT.h.2" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Group>
<Annotation>
<Comment>
     !TODO: Remove the following constant.  It's only used in
     awo_rtns.c, and we should be removing that soon.
    </Comment>
</Annotation>
<EnumeratorRef name="EXPANDED_L_SEQ_SIZE"/>
</Group>
<Group>
<Annotation>
<Comment>
     Bit definitions for record identifier field in RPT_COMMON above
     This field identifies the type of transaction being sent to LMT II
    </Comment>
</Annotation>
<EnumeratorRef name="L_CXL"/>
<EnumeratorRef name="L_TLTC"/>
<EnumeratorRef name="L_STPSTK"/>
<EnumeratorRef name="L_STPOPG"/>
<EnumeratorRef name="L_PRCOR"/>
<EnumeratorRef name="L_NDONE"/>
<EnumeratorRef name="L_DEL"/>
<EnumeratorRef name="L_END_BLKRPT"/>
<EnumeratorRef name="L_UNBUNDLE"/>
<EnumeratorRef name="L_PROK"/>
<EnumeratorRef name="L_TTC_MOD"/>
<EnumeratorRef name="L_BUST"/>
<EnumeratorRef name="L_EFF_SEQ_ADM"/>
<EnumeratorRef name="L_TICK_ADM"/>
<EnumeratorRef name="L_ITS_NC_ADM"/>
<EnumeratorRef name="L_DROP_ADM"/>
</Group>
<Group>
<Annotation>
<Comment>
     rc_sp_conds
     *  Bit definitions for special conditions field in RPT_COMMON above
    </Comment>
</Annotation>
<EnumeratorRef name="L_DRPT"/>
<EnumeratorRef name="L_PRDEF"/>
<EnumeratorRef name="L_XCH"/>
<EnumeratorRef name="L_NDONE_TEXT"/>
<EnumeratorRef name="L_NO_RANGE_CHK"/>
<EnumeratorRef name="L_COMMISSION"/>
<EnumeratorRef name="L_USE_SDOT_LINKNO"/>
<EnumeratorRef name="L_NML"/>
<EnumeratorRef name="L_BILLING_ADMIN"/>
<EnumeratorRef name="L_RPT"/>
<EnumeratorRef name="L_OLD_FMT"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.RPT.h.3" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<EnumeratorRef name="LRD_MAX_TA"/>
<EnumeratorRef name="LRD_COMMENT_CODE"/>
<EnumeratorRef name="LRD_COMMENT"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.RPT.h.4" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<EnumeratorRef name="EOD_P_FILED"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.RPT.h.5" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<EnumeratorRef name="EARD_MAX_TA"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.RPT.h.6" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Group>
<Annotation>
<Comment>
     defs for est_flag: 
    </Comment>
</Annotation>
<EnumeratorRef name="ES_ELECTED_STP"/>
<EnumeratorRef name="ES_FILED_TICK"/>
<EnumeratorRef name="ES_PERM_FILED"/>
</Group>
<Group>
<Annotation>
<Comment>
     combo defs : should be used instead of single bit settings 
    </Comment>
</Annotation>
<EnumeratorRef name="ES_PERM_TICK"/>
<EnumeratorRef name="ES_TEMP_TICK"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.RPT.h.7" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<EnumeratorRef name="ESARD_MAX_TA"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.RPTSTS_INFO.h.1" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_INFO.h">
<EnumeratorRef name="RI_INTERNAL_ERROR"/>
<EnumeratorRef name="RI_ORDER_DROPPED"/>
<EnumeratorRef name="RI_ORDER_CLOSED"/>
<EnumeratorRef name="RI_BETTER_LIMITS"/>
<EnumeratorRef name="RI_MSG_NOT_FOUND"/>
<EnumeratorRef name="RI_ORDER_NOT_FILED"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.RPTSTS_SETUP.h.1" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_SETUP.h">
<Annotation>
<Comment>
    bit masks for rs_flags 
   </Comment>
</Annotation>
<EnumeratorRef name="RS_AUTO_MODE"/>
<EnumeratorRef name="MAX_RPTSTS_SHRS_AHEAD"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.SCROLL.h.1" cgen:file="/mnt/pos.shrb/include/events/SCROLL.h">
<Group>
<Annotation>
<Comment>
     flags for sc_screen 
    </Comment>
</Annotation>
<EnumeratorRef name="SC_SUMM"/>
<EnumeratorRef name="SC_PAGE"/>
<EnumeratorRef name="SC_BADGE_PAGE"/>
<EnumeratorRef name="SC_SMART_FIND"/>
<EnumeratorRef name="SC_SUMMARY_RPT"/>
</Group>
<Group>
<Annotation>
<Comment>
     flags for sc_dir 
    </Comment>
</Annotation>
<EnumeratorRef name="SC_UP"/>
<EnumeratorRef name="SC_DOWN"/>
<EnumeratorRef name="SC_RESET"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.SELF_CANCEL_TIMER_IN_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/SELF_CANCEL_TIMER_IN_DATA.h">
<EnumeratorRef name="OC_INTERVAL_LEN"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.SIDECAR_RPT_MSG.h.1" cgen:file="/mnt/pos.shrb/include/events/SIDECAR_RPT_MSG.h">
<Annotation>
<Comment>
    values for scr_flags 
   </Comment>
</Annotation>
<EnumeratorRef name="SC_SIDECAR_ALREADY_REPORTED"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.SIGNAL_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/SIGNAL_DATA.h">
<EnumeratorRef name="SD_MSG_NOT_FOUND"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.SMART_FIND_RSP.h.1" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h">
<EnumeratorRef name="SFR_MAX_SUBORDERS_ON_PAGE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.SP_GOV_REGISTER_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/SP_GOV_REGISTER_DATA.h" cgen:namespace="Pos:Msgs">
<EnumeratorRef name="CLASS_FIRM"/>
<EnumeratorRef name="CLASS_FR"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.SP_PROXY_CONFIG_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/SP_PROXY_CONFIG_DATA.h" cgen:namespace="Pos:Msgs">
<EnumeratorRef name="OPENING_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.SR_RPT_RSP_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_RSP_DATA.h">
<EnumeratorRef name="SR_RSP_OK"/>
<EnumeratorRef name="SR_RSP_ELECT_STPS_OPN"/>
<EnumeratorRef name="SR_RSP_PART_RPT_AON"/>
<EnumeratorRef name="SR_RSP_PRIN_WITH_BETTER_AON"/>
<EnumeratorRef name="SR_RSP_NON_BLOCK_NACK"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.STK_INACTIVE_INFO.h.1" cgen:file="/mnt/pos.shrb/include/events/STK_INACTIVE_INFO.h">
<EnumeratorRef name="SI_SWITCH_STK"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.STK_INFO.h.1" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<EnumeratorRef name="PRODUCT_TYPE_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.STK_INFO.h.2" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<EnumeratorRef name="HIGH_PRICE_FLAG"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.STOP_MKTS.h.1" cgen:file="/mnt/pos.shrb/include/events/STOP_MKTS.h">
<Annotation>
<Comment>
    !TODO: Are these still used?? Investigate
   </Comment>
</Annotation>
<EnumeratorRef name="SM_STOP_BMKT_FLASH"/>
<EnumeratorRef name="SM_STOP_SMKT_FLASH"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.SUBSCRIPTION.h.1" cgen:file="/mnt/pos.shrb/include/events/SUBSCRIPTION.h">
<EnumeratorRef name="STK_CLASS"/>
<EnumeratorRef name="PMP_CLASS"/>
<EnumeratorRef name="MIN_SUB_CLASS"/>
<EnumeratorRef name="MAX_SUB_CLASS"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.SUM_SCREEN.h.1" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<EnumeratorRef name="MKT_CNT"/>
<Group>
<Annotation>
<Comment>
     values of ms_flags  
    </Comment>
</Annotation>
<EnumeratorRef name="MS_BMKT_FLASH"/>
<EnumeratorRef name="MS_SMKT_FLASH"/>
<EnumeratorRef name="N_SUMM_PRICES"/>
<EnumeratorRef name="N_SUMM_SCREEN"/>
<EnumeratorRef name="MAX_PRI"/>
<EnumeratorRef name="MAX_PRI_CNT"/>
</Group>
<Group>
<Annotation>
<Comment>
     values of ld_flags 
    </Comment>
</Annotation>
<EnumeratorRef name="LD_AB_MORE"/>
<EnumeratorRef name="LD_BL_MORE"/>
</Group>
<Group>
<Annotation>
<Comment>
     values of su_bits in SUM_SCREEN (shows contents of msg) 
    </Comment>
</Annotation>
<EnumeratorRef name="SU_MKT_BSIDE"/>
<EnumeratorRef name="SU_MKT_SSIDE"/>
<EnumeratorRef name="SU_MKT_UPDATE"/>
<EnumeratorRef name="SU_LMT"/>
<EnumeratorRef name="SU_LMT_UPDATE"/>
<EnumeratorRef name="SU_TICK_UPDATE"/>
<EnumeratorRef name="SU_STK_LITE"/>
<EnumeratorRef name="SU_STK_BOPPER"/>
</Group>
<EnumeratorRef name="U_MKT_LN"/>
<EnumeratorRef name="U_BMKT"/>
<EnumeratorRef name="U_SMKT"/>
<EnumeratorRef name="U_LMT_LN"/>
<EnumeratorRef name="U_LMT"/>
<EnumeratorRef name="TD_TICK_BSIDE"/>
<EnumeratorRef name="TD_TICK_SSIDE"/>
<EnumeratorRef name="TD_TICK_BCLR"/>
<EnumeratorRef name="TD_TICK_SCLR"/>
<Group>
<Annotation>
<Comment>
     BIT SETTINGS FOR ws_ticks FIELD ( compare with TICK_DATA ) 
    </Comment>
</Annotation>
<EnumeratorRef name="WS_TICK_BCLR"/>
<EnumeratorRef name="WS_TICK_SCLR"/>
<EnumeratorRef name="WS_TICK_BSIDE"/>
<EnumeratorRef name="WS_TICK_SSIDE"/>
<EnumeratorRef name="WS_TICK_UPDATE"/>
</Group>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.TEXT.h.1" cgen:file="/mnt/pos.shrb/include/events/TEXT.h">
<EnumeratorRef name="TEXT_LEN"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.TEXT_MSG.h.1" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<EnumeratorRef name="TEXT_MSG_HAS_TEXT"/>
<EnumeratorRef name="TEXT_MSG_HAS_PREV_MSG"/>
<EnumeratorRef name="TEXT_MSG_HAS_NEXT_MSG"/>
<EnumeratorRef name="MSG_NOT_FOUND"/>
<EnumeratorRef name="TEXT_MSG_IS_EMPTY"/>
<EnumeratorRef name="TEXT_MSG_HAS_INFO"/>
<EnumeratorRef name="TEXT_MSG_RPTSTS"/>
<EnumeratorRef name="MAX_MSG_TEXT_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.TEXT_MSG_SHORT.h.1" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<EnumeratorRef name="MSG_SUBJECT_SIZE"/>
<EnumeratorRef name="MAX_MSG_SUBJECT_SIZE"/>
<EnumeratorRef name="MAX_MENU_FIELD_SIZE"/>
<EnumeratorRef name="NUM_MSG_TEXT_LINES"/>
<EnumeratorRef name="MSG_TEXT_LINE_LENGTH"/>
<Annotation>
<Comment>
    ts_flags 
   </Comment>
</Annotation>
<Annotation>
<Comment>
    Set by originator.              
   </Comment>
</Annotation>
<EnumeratorRef name="TEXT_MSG_SHORT_HAS_TEXT"/>
<Annotation>
<Comment>
    Set by Database 
   </Comment>
</Annotation>
<EnumeratorRef name="TEXT_MSG_SHORT_HAS_PREV_MSG"/>
<EnumeratorRef name="TEXT_MSG_SHORT_HAS_NEXT_MSG"/>
<Annotation>
<Comment>
    Set by Display. 
   </Comment>
</Annotation>
<EnumeratorRef name="TEXT_MSG_SHORT_IS_EMPTY"/>
<EnumeratorRef name="TEXT_MSG_SHORT_HAS_INFO"/>
<EnumeratorRef name="TEXT_MSG_SHORT_RPTSTS"/>
<EnumeratorRef name="TEXT_ATTRIB_NONE"/>
<EnumeratorRef name="TEXT_ATTRIB_REVERSE"/>
<EnumeratorRef name="TEXT_ATTRIB_BLINK"/>
<EnumeratorRef name="TEXT_ATTRIB_UNDERLINE"/>
<EnumeratorRef name="TEXT_ATTRIB_ON_CMD"/>
<EnumeratorRef name="TEXT_ATTRIB_YELLOW"/>
<EnumeratorRef name="TEXT_ATTRIB_RED"/>
<EnumeratorRef name="TEXT_ATTRIBS"/>
<EnumeratorRef name="TEXT_ATTRIB_COLORS"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.TEXT_MSG_SS.h.1" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SS.h">
<EnumeratorRef name="ALL_SS_MASK"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.VALIDATE_SLMT_RSP_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/VALIDATE_SLMT_RSP_DATA.h">
<EnumeratorRef name="SLV_OK"/>
<EnumeratorRef name="SLV_ORDER_AT_DIFF_PRICE"/>
<EnumeratorRef name="SLV_ORDERS_AT_DIFF_PRICE"/>
</UnNamedEnumeration>
<UnNamedEnumeration imported="yes" name=".UNNAMED_ENUM.WS_INFO.h.1" cgen:file="/mnt/pos.shrb/include/events/WS_INFO.h">
<EnumeratorRef name="WS_AWO_ON"/>
</UnNamedEnumeration>
<Define name="NAME_MAX" value="14" cgen:expression="14" cgen:file="/usr/include/limits.h">
<Annotation>
<Comment>
Max number of characters in a filename (not including terminating null)
</Comment>
</Annotation>
</Define>
<Define name="PATH_MAX" value="1023" cgen:expression="1023" cgen:file="/usr/include/limits.h">
<Annotation>
<Comment>
max number of characters in a pathname (not including terminating null)
</Comment>
</Annotation>
</Define>
<Define name="BYTE_MAX" value="255" cgen:expression="UCHAR_MAX" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="WORD_MAX" value="65535" cgen:expression="USHRT_MAX" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="TINY_MIN" value="-128" cgen:expression="SCHAR_MIN" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="TINY_MAX" value="127" cgen:expression="SCHAR_MAX" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="UTINY_MAX" value="255" cgen:expression="UCHAR_MAX" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="TIME_MAX" value="65535" cgen:expression="USHRT_MAX" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="MILLITIME_MAX" value="4294967295" cgen:expression="ULONG_MAX" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="SEQNO_MAX" value="65535" cgen:expression="USHRT_MAX" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="DATE_MAX" value="65535" cgen:expression="USHRT_MAX" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="JDATE_MAX" value="65535" cgen:expression="USHRT_MAX" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="PRICE_MAX" value="2147483647" cgen:expression="2147483647UL" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h"/>
<Define name="T_VC_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Define name="SIXTYFOURTH_64" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
1/64 in sixtyfourths
</Comment>
</Annotation>
</Define>
<Define name="THIRTYSECOND_64" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
1/32 in sixtyfourths
</Comment>
</Annotation>
</Define>
<Define name="SIXTEENTH_64" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
1/16 in sixtyfourths
</Comment>
</Annotation>
</Define>
<Define name="EIGHTH_64" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
1/8 in sixtyfourths
</Comment>
</Annotation>
</Define>
<Define name="ONE_DOLLAR_64" value="64" cgen:expression="64" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
one dollar in 64ths
</Comment>
</Annotation>
</Define>
<Define name="TICKS_PER_DOLLAR_64" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="PUS_PER_DOLLAR_64" value="64" cgen:expression="(PRICE)64" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
price-units per dollar
</Comment>
</Annotation>
</Define>
<Define name="PRICE_TICK_64" value="8" cgen:expression="((unsigned int)PUS_PER_DOLLAR_64/8)" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
(price-units per tick)
</Comment>
</Annotation>
</Define>
<Define name="MAX_PRICE_8" value="65535" cgen:expression="MAX_QTY" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="MAX_PRICE_64" value="63999" cgen:expression="((PRICE)(999*64+63))" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="MAX_ORDER_QTY" value="30000" cgen:expression="(30000)" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
was (999)
</Comment>
</Annotation>
</Define>
<Define name="MAX_QTY" value="65535" cgen:expression="(65535)" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="MAX_AGQTY" value="2048000000" cgen:expression="((AGQTY)(2048000000L))" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
actually: 2147483648.
</Comment>
</Annotation>
</Define>
<Define name="MIN_QTY" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="YR_BITS" value="127" cgen:expression="0x007FU" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
rightmost 7 bits
</Comment>
</Annotation>
</Define>
<Define name="DA_BITS" value="3968" cgen:expression="0x0F80U" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
next 5 bits
</Comment>
</Annotation>
</Define>
<Define name="MO_BITS" value="61440" cgen:expression="0xF000U" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
leftmost 4 bits
</Comment>
</Annotation>
</Define>
<Define name="INVALID" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
same for other types
</Comment>
</Annotation>
</Define>
<Define name="CID_SIZE" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
size of its committment id
</Comment>
</Annotation>
</Define>
<Define name="NOT_A_FIRM" value="-1" cgen:expression="(-1)" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="SYS_FIRM" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="STREET_FIRM" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="PRIN_FIRM" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="SWING_FIRM" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="MKT_TRADE_FIRM" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="TRUE" value="1" cgen:expression="(BOOL)1" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="FALSE" value="0" cgen:expression="(BOOL)0" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="OA_OARS_ON" value="1" cgen:expression="0x01" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="OA_PR_CORR" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
price correction
</Comment>
</Annotation>
</Define>
<Define name="OA_ND" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
nothing done
</Comment>
</Annotation>
</Define>
<Define name="OA_PRI_OK" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
price ok
</Comment>
</Annotation>
</Define>
<Define name="OA_STAT_REQ" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
OARS status request (in opening)
</Comment>
</Annotation>
</Define>
<Define name="OA_FRZ" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
oars unfreeze
</Comment>
</Annotation>
</Define>
<Define name="OA_UNFRZ" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
oars freeze
</Comment>
</Annotation>
</Define>
<Define name="OA_MOC" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
market on close
</Comment>
</Annotation>
</Define>
<Define name="OA_SIDECAR" value="256" cgen:expression="0x100" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
Sidecar transaction
</Comment>
</Annotation>
</Define>
<Define name="OA_EXECUTION" value="512" cgen:expression="0x200" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
Sidecar execution
</Comment>
</Annotation>
</Define>
<Define name="ALL_BLANKS" value="100" cgen:expression="100" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
used by unfmt_pri to indicate a blank field
</Comment>
</Annotation>
</Define>
<Define name="ZERO_PRICE" value="102" cgen:expression="102" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
used by unfmt_pri to indicate price 0.0
</Comment>
</Annotation>
</Define>
<Define name="PLUS" value="104" cgen:expression="104" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
'+' preceeds number
</Comment>
</Annotation>
</Define>
<Define name="MINUS" value="106" cgen:expression="106" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
'-' preceeds number
</Comment>
</Annotation>
</Define>
<Define name="RIGHT_JUST" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
parameter to fmt_pri() and fmt_qty()
</Comment>
</Annotation>
</Define>
<Define name="LEFT_JUST" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
parameter to fmt_pri() and fmt_qty()
</Comment>
</Annotation>
</Define>
<Define name="BL_ZERO" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
used in fmt_qty (blank if zero)
</Comment>
</Annotation>
</Define>
<Define name="NBL_ZERO" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
used in fmt_qty (don't blank zero)
</Comment>
</Annotation>
</Define>
<Define name="OK_ZERO" value="16" cgen:expression="0x0010" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
no error if zero price (fmt_pri)
</Comment>
</Annotation>
</Define>
<Define name="SHOW_MINUS" value="32" cgen:expression="0x0020" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
Insert a minus sign if negative
</Comment>
</Annotation>
</Define>
<Define name="OK_TRUNCATE" value="64" cgen:expression="0x0040" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
Truncate the price if it &gt;= 100.00
</Comment>
</Annotation>
</Define>
<Define name="OK_EFG" value="128" cgen:expression="0x0080" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
use e,f,g instead of . in fmt_pri()
</Comment>
</Annotation>
</Define>
<Define name="OK_DOT" value="256" cgen:expression="0x0100" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
use . to format 32, 64ths in fmt_pri()
</Comment>
</Annotation>
</Define>
<Define name="N_CONTEXTS" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="WRAP" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="WORD_WRAP" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="TRUNCATE" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="MAX_MSG_LENGTH" value="2048" cgen:expression="2048" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
limit size of msg sent between tasks
</Comment>
</Annotation>
</Define>
<Define name="MCR_SWAP" value="0" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="MAX_DBK_LINKAGE" value="30000" cgen:expression="30000" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="NYSE" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>
-dr9-
</Comment>
</Annotation>
</Define>
<Define name="AMEX" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Define name="MAX_REAL_NAMES_GIVEUPS" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
Max number of giveups in a Real Names
</Comment>
</Annotation>
</Define>
<Define name="MPV_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Define name="PRODUCT_TYPE_SIZE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/misc/config.h"/>
<Define name="DB2_DEVTYPE" value="52" cgen:expression="'4'" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Annotation>
<Comment>
as of 03/27/90
</Comment>
</Annotation>
</Define>
<Define name="SDOT_POSS_DUP_ON" value="49" cgen:expression="'1'" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Annotation>
<Comment>
ascii flag for IS_HEAD ih_poss_dupe flag
</Comment>
</Annotation>
</Define>
<Define name="N_MDS_RSP" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Annotation>
<Comment>
Response to MDS transaction.
</Comment>
</Annotation>
</Define>
<Define name="N_RPT_RSP" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Annotation>
<Comment>
Response to LMT/DOT txn.
</Comment>
</Annotation>
</Define>
<Define name="N_REROUT_RSP" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Annotation>
<Comment>
Response to order rerouted to
</Comment>
</Annotation>
</Define>
<Define name="N_OE_RSP" value="8" cgen:expression="0x8" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Annotation>
<Comment>
Response to Order Entry.
</Comment>
</Annotation>
</Define>
<Define name="N_ITS_RSP" value="4" cgen:expression="0x4" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Annotation>
<Comment>
Response to ITS.
</Comment>
</Annotation>
</Define>
<Define name="N_I_NDONE" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Annotation>
<Comment>
ack for indiv nothing done
</Comment>
</Annotation>
</Define>
<Define name="N_AWO_RSP" value="128" cgen:expression="0x80" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Annotation>
<Comment>
Response to AWO transaction.
</Comment>
</Annotation>
</Define>
<Define name="N_A_RESPONSE" value="254" cgen:expression="(N_I_NDONE | N_MDS_RSP | N_RPT_RSP | N_REROUT_RSP | N_ITS_RSP | N_OE_RSP | N_AWO_RSP)" cgen:file="/mnt/pos.shrb/include/misc/pss.h"/>
<Define name="N_A_RESPONSE_2" value="248" cgen:expression="(N_MDS_RSP | N_RPT_RSP | N_REROUT_RSP | N_OE_RSP | N_AWO_RSP)" cgen:file="/mnt/pos.shrb/include/misc/pss.h"/>
<Define name="ALIVE_NOT_DLLED" value="0" cgen:expression="0x0" cgen:file="/mnt/pos.shrb/include/misc/pss.h"/>
<Define name="ALIVE_DLLED" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/misc/pss.h"/>
<Define name="PO_TEXT_LEN" value="1808" cgen:expression="(MAX_MSG_LENGTH - 2 * (sizeof(O_MAIN) + sizeof(O_KEY) + sizeof(O_EXT) + TA_SIZE + TIME_SIZE + DATE_SIZE + sizeof(short) +5) )" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h"/>
<Define name="N_DLL_ORDERS" value="17" cgen:expression="((MAX_MSG_LENGTH-(sizeof(unsigned short)))/sizeof(ORDER))" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h"/>
<Define name="true" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/utilities/bool.h"/>
<Define name="false" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/utilities/bool.h"/>
<Define name="REQ_FOR_FIRST_PAGE" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/MSG_REQ.h"/>
<Define name="REQ_FOR_PREVIOUS_PAGE" value="32" cgen:expression="0x20" cgen:file="/mnt/pos.shrb/include/events/MSG_REQ.h"/>
<Define name="REQ_FOR_NEXT_PAGE" value="64" cgen:expression="0x40" cgen:file="/mnt/pos.shrb/include/events/MSG_REQ.h"/>
<Define name="AR_Q_DEF" value="2" cgen:expression="0x02" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h"/>
<Define name="STK_TYPE_DEF" value="8" cgen:expression="0x08" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h"/>
<Define name="CFG_RESP" value="4" cgen:expression="0x04" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h"/>
<Define name="SZ_BLK_SAVE" value="130" cgen:expression="130" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Define name="SZ_MOC_SAVE" value="130" cgen:expression="130" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Define name="SZ_QT_SAVE" value="32" cgen:expression="((2*PRICE_TXT_SIZE)+(2*QTY_TXT_SIZE)+4)" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Define name="SZ_QT_ASSIST_SAVE" value="30" cgen:expression="30" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h"/>
<Define name="GOV_REGISTR" value="1001" cgen:expression="1001" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="GOV_UNREG" value="1002" cgen:expression="1002" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="GOV_NOTIFY" value="1003" cgen:expression="1003" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_STK" value="5461067" cgen:expression="0x0053544b" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_XC" value="22595" cgen:expression="0x00005843" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_AR" value="16722" cgen:expression="0x00004152" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_HIA" value="4737345" cgen:expression="0x00484941" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_MWEP" value="1297565008" cgen:expression="0x4d574550" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_MWDB" value="1297564738" cgen:expression="0x4d574442" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_TIMER" value="1414090053" cgen:expression="0x54494d45" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_MMP" value="5066064" cgen:expression="0x004d4d50" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_PMP" value="5262672" cgen:expression="0x00504d50" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_FPRX" value="1179669112" cgen:expression="0x46505278" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_POSPRINT" value="1347374676" cgen:expression="0x504f4e54" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="CLASS_PIX" value="5065048" cgen:expression="0x004d4958" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h"/>
<Define name="DLL_RECORD_LEN" value="120" cgen:expression="120" cgen:file="/mnt/pos.shrb/include/events/DLL_LEADER2.h">
<Annotation>
<Comment>
length of host records to DLL (4.0)
</Comment>
</Annotation>
</Define>
<Define name="PM_STOCK_SUMMARY_REQ_DATA_h" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/PM_STOCK_SUMMARY_REQ_DATA.h"/>
<Define name="N_DLL_ACTIVITY" value="17" cgen:expression="((MAX_MSG_LENGTH-(sizeof(int)))/(sizeof(PM_DLL_ACTIVITY_DATA)))" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_BLOCKED_ACTIVITY_DATA.h"/>
<Enumerator name="TIME_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="DATE_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="TA_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="MF_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="STK_SIZE" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="PWD_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="NMF_SIZE" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="DEVICE_SZ" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="BADGE_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="N_STKORG" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="N_STKSPERPAGE" value="14" cgen:expression="14" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="N_PAGES" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="N_STOCKS" value="28" cgen:expression="(N_PAGES * N_STKSPERPAGE)" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="MAX_STKS" value="196" cgen:expression="(N_STOCKS * N_WKSTS)" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="N_FIRMS" value="400" cgen:expression="400" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="MAX_GV" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="MAX_U_GV" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="DOT_SPG_QTY" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="ENTITY_SZ" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="TIME_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="DATE_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="TA_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="MF_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="STK_SIZE" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="PWD_SIZE" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="NMF_SIZE" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="DEVICE_SZ" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="BADGE_SIZE" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="N_STKORG" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="N_STKSPERPAGE" value="14" cgen:expression="14" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="N_PAGES" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="N_STOCKS" value="28" cgen:expression="(N_PAGES * N_STKSPERPAGE)" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="MAX_STKS" value="196" cgen:expression="(N_STOCKS * N_WKSTS)" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="N_FIRMS" value="400" cgen:expression="400" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="MAX_GV" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="MAX_U_GV" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="DOT_SPG_QTY" value="11" cgen:expression="11" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="ENTITY_SZ" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h"/>
<Enumerator name="MMI_NON_FIRM_BID" value="1" cgen:expression="0x1" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="MMI_NON_FIRM_ASK" value="2" cgen:expression="0x2" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="SP_CAN_COM_SIZE" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="SP_PRICE_TXT_SIZE" value="15" cgen:expression="15" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="SP_REQ_ID_SIZE" value="30" cgen:expression="30" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="SP_NUM_MAX_ACTIVE_SCREENS" value="7000" cgen:expression="7000" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h"/>
<Enumerator name="OT_TICKS_STP" value="131072" cgen:expression="0x20000" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>Tick Sensitive STP or STP LMT order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OC_TIF_MASK" value="262403" cgen:expression="DAY|GTC|OPG|OC_XPR" cgen:file="/mnt/pos.shrb/include/misc/param.h"/>
<Enumerator name="USA_EQUITY" value="0" cgen:expression="0" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h"/>
<Enumerator name="BABY_BERK" value="1" cgen:expression="1" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h"/>
<Enumerator name="FOREIGN_ORDINARIES" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h"/>
<Enumerator name="DR_DBK_SELL" value="64" cgen:expression="SELL" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h"/>
<Enumerator name="UR_OUT_STOCK_AHEAD" value="3" cgen:expression="3" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="UR_OUT_QUOTE_NO_LONGER_XPRESS" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="UR_OUT_STOCK_AHEAD_NOT_EXPOSED" value="5" cgen:expression="5" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="UR_OUT_NO_XPRESS_QUOTE_NOT_EXPOSED" value="6" cgen:expression="6" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="UR_OUT_ORDER_QTY_EXCEEDS_QUOTED_SIZE_NOT_EXPOSED" value="7" cgen:expression="7" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="UR_OUT_BAD_XPRESS_PRICE_OR_QUANTITY_NOT_EXPOSED" value="8" cgen:expression="8" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="UR_OUT_TOO_LATE_NOT_EXPOSED" value="9" cgen:expression="9" cgen:file="/mnt/pos.shrb/include/events/RPT.h"/>
<Enumerator name="REGISTRATION_MSG_MAX_DATA_SIZE" value="100" cgen:expression="100" cgen:file="/mnt/pos.shrb/include/events/REGISTRATION_MSG.h"/>
<Enumerator name="ITS_BLOCK_TRADE" value="66" cgen:expression="'B'" cgen:file="/mnt/pos.shrb/include/events/ITS_COMMITMENT_DATA.h"/>
<Enumerator name="ITS_NOT_BLOCK_TRADE" value="32" cgen:expression="' '" cgen:file="/mnt/pos.shrb/include/events/ITS_COMMITMENT_DATA.h"/>
<Enumerator name="SI_QUEUE" value="-2" cgen:expression="-2" cgen:file="/usr/include/sys/siginfo.h"/>
<Enumerator name="SI_USER" value="-1" cgen:expression="-1" cgen:file="/usr/include/sys/siginfo.h"/>
<Enumerator name="SI_TIMER" value="1" cgen:expression="1" cgen:file="/usr/include/sys/siginfo.h"/>
<Enumerator name="SI_ASYNCIO" value="2" cgen:expression="2" cgen:file="/usr/include/sys/siginfo.h"/>
<Enumerator name="SI_MESGQ" value="3" cgen:expression="3" cgen:file="/usr/include/sys/siginfo.h"/>
<Enumerator name="SR_RSP_CANCEL_XPRESS_ORDERS" value="16" cgen:expression="0x10" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_RSP_DATA.h"/>
<Enumerator name="SHARE_SIZE" value="16" cgen:expression="16" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator name="PRICE_SIZE" value="16" cgen:expression="16" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator name="VALUE_SIZE" value="16" cgen:expression="16" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h"/>
<Enumerator name="CLASS_TDP" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/SP_GOV_REGISTER_DATA.h"/>
<Enumerator name="SP_SETTLEMENT_TXT_SIZE" value="2" cgen:expression="2" cgen:file="/mnt/pos.shrb/include/events/SP_TRADE_LIST_UPDATE_DATA.h"/>
<Enumerator name="SP_TRADE_LIST_MAX_SIZE" value="30" cgen:expression="30" cgen:file="/mnt/pos.shrb/include/events/SP_TRADE_LIST_UPDATE_DATA.h"/>
<Enumerator name="CLOCK_INVALID" value="0" cgen:expression="0" cgen:file="/usr/include/sys/time.h"/>
<Enumerator name="CLOCK_REALTIME" value="1" cgen:expression="1" cgen:file="/usr/include/sys/time.h"/>
<Enumerator name="CLOCK_VIRTUAL" value="2" cgen:expression="2" cgen:file="/usr/include/sys/time.h"/>
<Enumerator name="CLOCK_PROFILE" value="4" cgen:expression="4" cgen:file="/usr/include/sys/time.h"/>
<Enumerator name="RTTIMER0" value="8" cgen:expression="8" cgen:file="/usr/include/sys/time.h"/>
<Enumerator name="RTTIMER1" value="16" cgen:expression="16" cgen:file="/usr/include/sys/time.h"/>
<Enumerator name="REAL_NAMES_REQUIRED_BID" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/QuoteValidationErrors.h">
<Annotation>
<Comment>Check Bid price. Real Name required</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REAL_NAMES_REQUIRED_OFFER" value="2" cgen:expression="0x0002" cgen:file="/mnt/pos.shrb/include/events/QuoteValidationErrors.h">
<Annotation>
<Comment>Check Offer price. Real Names required</Comment>
</Annotation>
</Enumerator>
<Enumerator name="XPRESS_ORDERS_PENDING_BID" value="4" cgen:expression="0x0004" cgen:file="/mnt/pos.shrb/include/events/QuoteValidationErrors.h">
<Annotation>
<Comment>Check Bid price. XPress Order pending</Comment>
</Annotation>
</Enumerator>
<Enumerator name="XPRESS_ORDERS_PENDING_OFFER" value="8" cgen:expression="0x0008" cgen:file="/mnt/pos.shrb/include/events/QuoteValidationErrors.h">
<Annotation>
<Comment>Check Offer price. XPress Order pending</Comment>
</Annotation>
</Enumerator>
<Enumerator name="XPRESS_CANCEL_LOCKOUT_BID" value="16" cgen:expression="0x0010" cgen:file="/mnt/pos.shrb/include/events/QuoteValidationErrors.h">
<Annotation>
<Comment>Use only by the standalone quote template</Comment>
</Annotation>
</Enumerator>
<Enumerator name="XPRESS_CANCEL_LOCKOUT_OFFER" value="32" cgen:expression="0x0020" cgen:file="/mnt/pos.shrb/include/events/QuoteValidationErrors.h">
<Annotation>
<Comment>Use only by the standalone quote template</Comment>
</Annotation>
</Enumerator>
<Enumerator name="ASCII_DATE_LENGTH" value="10" cgen:expression="10" cgen:file="/mnt/pos.shrb/include/events/LATE_TO_CLOSE_TIMER_DATA.h"/>
<Enumerator name="ASCII_TIME_LENGTH" value="12" cgen:expression="12" cgen:file="/mnt/pos.shrb/include/events/LATE_TO_CLOSE_TIMER_DATA.h"/>
<Enumerator name="OPEN_BOOK_STOCK_HALTED" value="1" cgen:expression="0x0001" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_UPDATE_DATA.h"/>
<Enumerator name="MAX_CANONICAL_MSG_LENGTH" value="7104" cgen:expression="MMAN_MAX_MSG_LENGTH - 1024" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_UPDATE_DATA.h"/>
<Enumerator name="N_OPEN_BOOK_DETAIL_DATA" value="587" cgen:expression="((MAX_CANONICAL_MSG_LENGTH -sizeof(OPEN_BOOK_HEADER_DATA)) /sizeof(OPEN_BOOK_DETAIL_DATA))" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_UPDATE_DATA.h"/>
<Enumerator name="MAX_DATA_LEN" value="8155" cgen:expression="8192 - sizeof( OPEN_BOOK_PUMP_HEADER )" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_PUMP_MSG.h"/>
<Enumerator name="TIMESTAMP_LEN" value="17" cgen:expression="17" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_PUMP_HEADER.h"/>
<Enumerator name="INT_LEN" value="4" cgen:expression="4" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_PUMP_HEADER.h"/>
<UnNamedEnumeration name=".UNNAMED_ENUM.generic_stk.h.1" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h">
<EnumeratorRef name="TIME_SIZE"/>
<EnumeratorRef name="DATE_SIZE"/>
<EnumeratorRef name="TA_SIZE"/>
<EnumeratorRef name="MF_SIZE"/>
<EnumeratorRef name="BR_SIZE"/>
<EnumeratorRef name="SEQ_SIZE"/>
<EnumeratorRef name="STK_SIZE"/>
<EnumeratorRef name="PWD_SIZE"/>
<EnumeratorRef name="NMF_SIZE"/>
<EnumeratorRef name="DEVICE_SZ"/>
<EnumeratorRef name="BADGE_SIZE"/>
<EnumeratorRef name="TIME_SIZE"/>
<EnumeratorRef name="DATE_SIZE"/>
<EnumeratorRef name="TA_SIZE"/>
<EnumeratorRef name="MF_SIZE"/>
<EnumeratorRef name="BR_SIZE"/>
<EnumeratorRef name="SEQ_SIZE"/>
<EnumeratorRef name="STK_SIZE"/>
<EnumeratorRef name="PWD_SIZE"/>
<EnumeratorRef name="NMF_SIZE"/>
<EnumeratorRef name="DEVICE_SZ"/>
<EnumeratorRef name="BADGE_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.generic_stk.h.2" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h">
<EnumeratorRef name="N_STKORG"/>
<EnumeratorRef name="N_STKSPERPAGE"/>
<EnumeratorRef name="N_PAGES"/>
<EnumeratorRef name="N_STOCKS"/>
<EnumeratorRef name="MAX_STKS"/>
<EnumeratorRef name="N_FIRMS"/>
<EnumeratorRef name="MAX_GV"/>
<EnumeratorRef name="MAX_U_GV"/>
<EnumeratorRef name="DET_GV"/>
<EnumeratorRef name="DOT_SPG_QTY"/>
<EnumeratorRef name="ENTITY_SZ"/>
<EnumeratorRef name="N_STKORG"/>
<EnumeratorRef name="N_STKSPERPAGE"/>
<EnumeratorRef name="N_PAGES"/>
<EnumeratorRef name="N_STOCKS"/>
<EnumeratorRef name="MAX_STKS"/>
<EnumeratorRef name="N_FIRMS"/>
<EnumeratorRef name="MAX_GV"/>
<EnumeratorRef name="MAX_U_GV"/>
<EnumeratorRef name="DET_GV"/>
<EnumeratorRef name="DOT_SPG_QTY"/>
<EnumeratorRef name="ENTITY_SZ"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.generic_stk.h.1" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h">
<EnumeratorRef name="TIME_SIZE"/>
<EnumeratorRef name="DATE_SIZE"/>
<EnumeratorRef name="TA_SIZE"/>
<EnumeratorRef name="MF_SIZE"/>
<EnumeratorRef name="BR_SIZE"/>
<EnumeratorRef name="SEQ_SIZE"/>
<EnumeratorRef name="STK_SIZE"/>
<EnumeratorRef name="PWD_SIZE"/>
<EnumeratorRef name="NMF_SIZE"/>
<EnumeratorRef name="DEVICE_SZ"/>
<EnumeratorRef name="BADGE_SIZE"/>
<EnumeratorRef name="TIME_SIZE"/>
<EnumeratorRef name="DATE_SIZE"/>
<EnumeratorRef name="TA_SIZE"/>
<EnumeratorRef name="MF_SIZE"/>
<EnumeratorRef name="BR_SIZE"/>
<EnumeratorRef name="SEQ_SIZE"/>
<EnumeratorRef name="STK_SIZE"/>
<EnumeratorRef name="PWD_SIZE"/>
<EnumeratorRef name="NMF_SIZE"/>
<EnumeratorRef name="DEVICE_SZ"/>
<EnumeratorRef name="BADGE_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.generic_stk.h.2" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h">
<EnumeratorRef name="N_STKORG"/>
<EnumeratorRef name="N_STKSPERPAGE"/>
<EnumeratorRef name="N_PAGES"/>
<EnumeratorRef name="N_STOCKS"/>
<EnumeratorRef name="MAX_STKS"/>
<EnumeratorRef name="N_FIRMS"/>
<EnumeratorRef name="MAX_GV"/>
<EnumeratorRef name="MAX_U_GV"/>
<EnumeratorRef name="DET_GV"/>
<EnumeratorRef name="DOT_SPG_QTY"/>
<EnumeratorRef name="ENTITY_SZ"/>
<EnumeratorRef name="N_STKORG"/>
<EnumeratorRef name="N_STKSPERPAGE"/>
<EnumeratorRef name="N_PAGES"/>
<EnumeratorRef name="N_STOCKS"/>
<EnumeratorRef name="MAX_STKS"/>
<EnumeratorRef name="N_FIRMS"/>
<EnumeratorRef name="MAX_GV"/>
<EnumeratorRef name="MAX_U_GV"/>
<EnumeratorRef name="DET_GV"/>
<EnumeratorRef name="DOT_SPG_QTY"/>
<EnumeratorRef name="ENTITY_SZ"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.PosDefs.h.5" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<EnumeratorRef name="SP_CAN_COM_SIZE"/>
<EnumeratorRef name="SP_PRICE_TXT_SIZE"/>
<EnumeratorRef name="SP_REQ_ID_SIZE"/>
<EnumeratorRef name="SP_NUM_MAX_ACTIVE_SCREENS"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.REGISTRATION_MSG.h.1" cgen:file="/mnt/pos.shrb/include/events/REGISTRATION_MSG.h">
<EnumeratorRef name="REGISTRATION_MSG_MAX_DATA_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.SP_TRADE_LIST_UPDATE_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/SP_TRADE_LIST_UPDATE_DATA.h">
<EnumeratorRef name="SP_SETTLEMENT_TXT_SIZE"/>
<EnumeratorRef name="SP_TRADE_LIST_MAX_SIZE"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.LATE_TO_CLOSE_TIMER_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/LATE_TO_CLOSE_TIMER_DATA.h">
<EnumeratorRef name="ASCII_DATE_LENGTH"/>
<EnumeratorRef name="ASCII_TIME_LENGTH"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.OPEN_BOOK_UPDATE_DATA.h.1" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_UPDATE_DATA.h">
<EnumeratorRef name="OPEN_BOOK_STOCK_HALTED"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.OPEN_BOOK_UPDATE_DATA.h.2" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_UPDATE_DATA.h">
<EnumeratorRef name="MAX_CANONICAL_MSG_LENGTH"/>
<EnumeratorRef name="N_OPEN_BOOK_DETAIL_DATA"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.OPEN_BOOK_PUMP_MSG.h.1" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_PUMP_MSG.h">
<EnumeratorRef name="MAX_DATA_LEN"/>
</UnNamedEnumeration>
<UnNamedEnumeration name=".UNNAMED_ENUM.OPEN_BOOK_PUMP_HEADER.h.1" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_PUMP_HEADER.h">
<EnumeratorRef name="TIMESTAMP_LEN"/>
<EnumeratorRef name="INT_LEN"/>
</UnNamedEnumeration>
</Constants>
<Types xmlns:loc="http://www.siac.com/makeFlatRepository.xsl" xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance">
<Struct name="_concxl" size="8" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Members>
<DataMember name="cc_cxl_qty" offset="0">
<Annotation>
<Comment>qty cancelled</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="cc_cxl_lvs_qty" offset="2">
<Annotation>
<Comment>qty left after cancel</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="cc_io_cxl_qty" offset="4">
<Annotation>
<Comment>qty cancelled (from IN_ORDER)</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="cc_io_cxl_lvs_qty" offset="6">
<Annotation>
<Comment>qty left after cancel (from IN_ORDER) (used only for duplicate check)</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="_det" size="44" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Members>
<DataMember name="de_exec_qty" offset="0">
<Annotation>
<Comment>executed quantity (defined only for</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="de_lvs_qty" offset="2">
<Annotation>
<Comment>remaining portion of order qty</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="de_fmt_price" offset="4">
<Annotation>
<Comment>execution price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="de_prin_qty" offset="8">
<Annotation>
<Comment>qty given up to PRIN * (included in rp_exec_qty)</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="de_gv_cnt" offset="10">
<Annotation>
<Comment># of giveups that follow. Since PRIN * doesn't follow,it isn't counted here</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="de_gv" offset="12">
<Annotation>
<Comment>number of giveups in a detail rec</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="DET_GV">
<TypeOrTypeRef typeName="DET_GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="_det" size="44" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<TypeOrTypeRef typeName="_det" typeKind="Struct"/>
</Typedef>
<Struct name="_md_depth_ind" size="20" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<Members>
<DataMember name="di_type" offset="0">
<Annotation>
<Comment>see MDS_DEPTH_INDICATION for values</Comment>
</Annotation>
<TypeOrTypeRef typeName="MDS_DEPTH_INDICATION" typeKind="Enumeration"/>
</DataMember>
<DataMember name="di_depth_ind" offset="4">
<Annotation>
<Comment>buy/sell price &amp; qty</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="QUOTE_INFO_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="_md_quote" size="28" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<Members>
<DataMember name="mq_mode" offset="0">
<Annotation>
<Comment>quote mode: see MQ_ bellow</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="mq_bid_xpress_ind" offset="4">
<Annotation>
<Comment>see XPRESS_QUOTE_INDICATOR</Comment>
</Annotation>
<TypeOrTypeRef typeName="XPRESS_QUOTE_INDICATOR" typeKind="Enumeration"/>
</DataMember>
<DataMember name="mq_ask_xpress_ind" offset="8">
<Annotation>
<Comment>see XPRESS_QUOTE_INDICATOR</Comment>
</Annotation>
<TypeOrTypeRef typeName="XPRESS_QUOTE_INDICATOR" typeKind="Enumeration"/>
</DataMember>
<DataMember name="mq_quote" offset="12">
<Annotation>
<Comment>buy/sell price &amp; qty</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="QUOTE_INFO_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="_md_status" size="8" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<Members>
<DataMember name="st_volume" offset="0">
<Annotation>
<Comment>market order imbalance amount in shares</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="st_type" offset="4">
<Annotation>
<Comment>imbalance side and type - see mds.h,</Comment>
</Annotation>
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="_md_trade" size="24" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<Members>
<DataMember name="tr_price" offset="0">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="tr_qty" offset="4">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="tr_badge" offset="8">
<Annotation>
<Comment>badge number</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="tr_cond" offset="10">
<Annotation>
<Comment>trade conditions (see db2.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="MT_BS"/>
<Bit constantName="MT_SELLER"/>
<Bit constantName="MT_127"/>
<Bit constantName="MT_AVGPR"/>
<Bit constantName="MT_SLDLST"/>
<Bit constantName="MT_CASH"/>
<Bit constantName="MT_STP"/>
<Bit constantName="MT_AUTO_EX"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="tr_seller" offset="12">
<Annotation>
<Comment># delivery days for SELLER cond</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="tr_supp_trade_num" offset="14">
<Annotation>
<Comment>supplimentary trade number</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="tr_dbk_linkage" offset="16">
<Annotation>
<Comment>linkage number</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="DBL_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Union name="_mds_data" size="28" discriminator="undefined" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<Members>
<DataMember name="md_trade" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="_md_trade" typeKind="Struct"/>
</DataMember>
<DataMember name="md_quote" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="_md_quote" typeKind="Struct"/>
</DataMember>
<DataMember name="md_status" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="_md_status" typeKind="Struct"/>
</DataMember>
<DataMember name="md_depth_ind" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="_md_depth_ind" typeKind="Struct"/>
</DataMember>
</Members>
</Union>
<Struct name="_nd" size="8" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Members>
<DataMember name="ndn_text_code" offset="0">
<Annotation>
<Comment>(see NDONE struct for values)</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ndn_shrs_ahead" offset="4">
<Annotation>
<Comment>shares ahead (in rlots!)</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="_o_main" size="68" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<Members>
<DataMember name="om_tanum" offset="0">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="om_fbs" offset="6">
<TypeOrTypeRef typeName="FBS" typeKind="Struct"/>
</DataMember>
<DataMember name="om_qty" offset="18">
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="om_odd_qty" offset="20">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="om_ordtype" offset="24">
<TypeOrTypeRef>
<Mask name="OrderTypeMask" size="4">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_AUTOEX"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="om_conds" offset="28">
<TypeOrTypeRef>
<Mask name="OrderCondMask" size="4">
<Bit constantName="EFF_SEQ_ON"/>
<Bit constantName="NOT_REDUCED"/>
<Bit constantName="ELECTED"/>
<Bit constantName="OC_XPR"/>
<Bit constantName="OC_NXX"/>
<Bit constantName="OC_NX"/>
<Bit constantName="T_FILED"/>
<Bit constantName="P_FILED"/>
<Bit constantName="PRI_INSERT"/>
<Bit constantName="STP_AON"/>
<Bit constantName="TTS"/>
<Bit constantName="DNI"/>
<Bit constantName="DNR"/>
<Bit constantName="OB"/>
<Bit constantName="REP_CXL"/>
<Bit constantName="O_DUP"/>
<Bit constantName="OPG"/>
<Bit constantName="GTC"/>
<Bit constantName="DAY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="om_file_price" offset="32">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="om_date" offset="36">
<TypeOrTypeRef typeName="DATE" typeKind="Typedef"/>
</DataMember>
<DataMember name="om_time" offset="38">
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="om_oe_date" offset="40">
<TypeOrTypeRef typeName="JDATE" typeKind="Typedef"/>
</DataMember>
<DataMember name="om_oe_time" offset="44">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="om_eff_seq_date" offset="48">
<TypeOrTypeRef typeName="JDATE" typeKind="Typedef"/>
</DataMember>
<DataMember name="om_eff_seq_time" offset="52">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="om_eff_seq_no" offset="56">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="oc_cxl" offset="58">
<TypeOrTypeRef typeName="_o_main::{unnamed.union.1}" typeKind=""/>
</DataMember>
<DataMember name="om_pexe_qty" offset="60">
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="om_clearing_firm" offset="62">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<Constants/>
<NestedType>
<Union size="2" discriminator="undefined">
<Members>
<Member name="om_pcxl_qty" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</Member>
<Member name="om_oc_time" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="OC_INTERVAL" typeKind="Typedef"/>
</Member>
</Members>
</Union>
</NestedType>
</Members>
</Struct>
<Struct name="_objname" size="16" cgen:file="/mnt/pos.shrb/include/mgt/mman/mman.h">
<Members>
<DataMember name="obj_array" offset="0">
<TypeOrTypeRef>
<Symbol size="16"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="_prccor" size="4" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Members>
<DataMember name="corr_price" offset="0">
<Annotation>
<Comment>corrected price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="_stpstk" size="12" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Members>
<DataMember name="stps_price" offset="0">
<Annotation>
<Comment>price at which stock was stopped</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="stps_qty" offset="4">
<Annotation>
<Comment>qty stopped. INVALID if not specified</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="stps_gid" offset="6">
<Annotation>
<Comment>group id for stopped stock</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="stps_mid" offset="8">
<Annotation>
<Comment>mw message id for stopped stock</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ACTKEY" size="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<Members>
<DataMember name="ak_time" offset="0">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="ak_linkno" offset="4">
<TypeOrTypeRef typeName="LINKNO" typeKind="Typedef"/>
</DataMember>
<DataMember name="ak_type" offset="8">
<TypeOrTypeRef typeName="ACTTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="ak_seq" offset="12">
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="c_MINSEQ" value="0"/>
<Enumerator name="c_MAXSEQ" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="c_MINSEQ"/>
<EnumeratorRef name="c_MAXSEQ"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="ACTNO" size="2" cgen:file="/mnt/pos.shrb/include/events/ACTNO.h">
<Members>
<DataMember name="ac_num" offset="0">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="ADM_INFO_P" size="162" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h">
<TypeOrTypeRef typeName="ADM_INFO" typeKind="Struct"/>
</Typedef>
<Struct name="ADM_INFO" size="162" cgen:file="/mnt/pos.shrb/include/events/ADM_INFO.h">
<Members>
<DataMember name="ai_adm_size" offset="0">
<Annotation>
<Comment>size of msg admin text</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ai_text" offset="2">
<Annotation>
<Comment>text of adm msg</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="160" cgen:expression="MAX_ADM_SZ"/>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="ADM_ROW" value="0"/>
<Enumerator name="ADM_ROW_SZ" value="1"/>
<Enumerator name="MAX_ADM_SZ" value="2"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="ADM_ROW"/>
<EnumeratorRef name="ADM_ROW_SZ"/>
<EnumeratorRef name="MAX_ADM_SZ"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Typedef name="AGQTY" size="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Typedef name="ALIGN" size="4" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_params.h">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</Typedef>
<Struct name="AOB_LMTS" size="48" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Members>
<DataMember name="al_price" offset="0">
<Annotation>
<Comment>in case user has changed the price meanwhile</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="al_qty" offset="4">
<Annotation>
<Comment>qtys aob al_price.indexes</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="al_at_qty" offset="12">
<Annotation>
<Comment>qtys at al_price.indexes are</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="al_at_loc_qty" offset="20">
<Annotation>
<Comment>loc qty at al_price for 'c' indicator</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="al_lopg_cxl" offset="28">
<Annotation>
<Comment>LMT OPGs qty to be cxled after opening</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="al_pri_filter" offset="36">
<Annotation>
<Comment>high sell, low buy for price filter</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="al_reject_reason" offset="44">
<Annotation>
<Comment>Values in REJECT_REPORT</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="REJ_STP_M_PRI"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="GVSTP" value="0" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Annotation>
<Comment>request for STP giveups</Comment>
</Annotation>
</Enumerator>
<Enumerator name="HILITE" value="1" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Annotation>
<Comment>request for highlighting</Comment>
</Annotation>
</Enumerator>
<Enumerator name="BLKSPC" value="2" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Annotation>
<Comment>request for block spec. rpt</Comment>
</Annotation>
</Enumerator>
<Enumerator name="OPGSUBSET" value="3" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Annotation>
<Comment>rqst to count OPG subset</Comment>
</Annotation>
</Enumerator>
<Enumerator name="INCLUSIVE" value="4" cgen:file="/mnt/pos.shrb/include/events/AOB_LMTS.h">
<Annotation>
<Comment>do an at-or-better count</Comment>
</Annotation>
</Enumerator>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="GVSTP"/>
<EnumeratorRef name="HILITE"/>
<EnumeratorRef name="BLKSPC"/>
<EnumeratorRef name="OPGSUBSET"/>
<EnumeratorRef name="INCLUSIVE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="AOB_STPS" size="4" cgen:file="/mnt/pos.shrb/include/events/AOB_STPS.h">
<Members>
<DataMember name="as_aob_stp" offset="0">
<Annotation>
<Comment>aob stop/stl/ total</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="APPROUTE_EOD_END_DATA" size="260" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/APPROUTE_EOD_END_DATA.h">
<Members>
<DataMember name="ar_endStatus" offset="0">
<Annotation>
<Comment>eod filing complete status 0=&gt;FAIL</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="ar_failMsgSize" offset="2">
<Annotation>
<Comment>Actual size of detail message for fail</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="ar_failMsg" offset="4">
<TypeOrTypeRef>
<Symbol size="256" cgen:expression="APPROUTE_EOD_MSG_MAX_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="AR_IN_CANCEL" size="2048" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<Members>
<DataMember name="ar_seq" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ar_cxl" offset="4">
<TypeOrTypeRef typeName="IN_CANCEL" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="AR_IN_OARS" size="44" cgen:file="/mnt/pos.shrb/include/events/AR_IN_OARS.h">
<Members>
<DataMember name="ar_o_seq" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ar_o_ord" offset="4">
<TypeOrTypeRef typeName="IN_OARS" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="AR_IN_ORDER" size="1928" cgen:file="/mnt/pos.shrb/include/events/AR_IN_ORDER.h">
<Members>
<DataMember name="ar_seq" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ar_ord" offset="4">
<TypeOrTypeRef typeName="IN_ORDER" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="AR_LACK_MSG" size="24" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h">
<Members>
<DataMember name="uh" offset="0">
<Annotation>
<Comment>user header</Comment>
</Annotation>
<TypeOrTypeRef typeName="USER_HDR" typeKind="Struct"/>
</DataMember>
<DataMember name="count" offset="20">
<Annotation>
<Comment>how many items have bee recived so far!</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="AR_MSG" size="2040" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h">
<Members>
<DataMember name="uh" offset="0">
<TypeOrTypeRef typeName="USER_HDR" typeKind="Struct"/>
</DataMember>
<DataMember name="count" offset="20">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="q_def" offset="24">
<TypeOrTypeRef>
<Array numElements="112" cgen:expression="max_q_defs">
<TypeOrTypeRef typeName="Q_DEF" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Enumeration name="auto_exec_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="auto_exec_off"/>
<EnumeratorRef name="auto_exec_on"/>
</Enumeration>
<Enumeration name="auto_quote_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="auto_quote_none"/>
<EnumeratorRef name="auto_quote_s1"/>
<EnumeratorRef name="auto_quote_s2"/>
<EnumeratorRef name="auto_quote_s3"/>
<EnumeratorRef name="auto_quote_clear"/>
</Enumeration>
<Enumeration name="autoquote_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="one_rlot_buy"/>
<EnumeratorRef name="one_rlot_sell"/>
<EnumeratorRef name="aq_autoquote"/>
</Enumeration>
<Struct name="AWAY_MKT_QUOTE" size="20" cgen:file="/mnt/pos.shrb/include/events/AWAY_MKT_QUOTE.h">
<Members>
<DataMember name="m_exchCode" offset="0">
<Annotation>
<Comment>away market exchange code</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_bidPrice" offset="4">
<Annotation>
<Comment>bid price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_bidSize" offset="8">
<Annotation>
<Comment>number of units desired</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_askPrice" offset="12">
<Annotation>
<Comment>asking price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_askSize" offset="16">
<Annotation>
<Comment>number of units offered</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="AWAY_QUOTE_UPDATE" size="564" cgen:file="/mnt/pos.shrb/include/events/AWAY_QUOTE_UPDATE.h">
<Members>
<DataMember name="aqu_quote_count" offset="0">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="aqu_away_quotes" offset="4">
<TypeOrTypeRef>
<Array numElements="28" cgen:expression="MAX_AWAY_MKTS">
<TypeOrTypeRef typeName="AWAY_MKT_QUOTE" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="MAX_AWAY_MKTS" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="MAX_AWAY_MKTS"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="BADGE_PAGE_RQST_MSG" size="2" cgen:file="/mnt/pos.shrb/include/events/BADGE_PAGE_RQST_MSG.h">
<Members>
<DataMember name="br_badge_id_" offset="0">
<TypeOrTypeRef typeName="BADGEID" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="BADGE_PAGE_RSP_MSG" size="296" cgen:file="/mnt/pos.shrb/include/events/BADGE_PAGE_RSP_MSG.h">
<Members>
<DataMember name="bpr_badge_id_" offset="0">
<Annotation>
<Comment>badge id</Comment>
</Annotation>
<TypeOrTypeRef typeName="BADGEID" typeKind="Typedef"/>
</DataMember>
<DataMember name="bpr_flags_" offset="2">
<Annotation>
<Comment>announce the type of info.</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="bpr_cnt_" offset="4">
<Annotation>
<Comment># of orders in array bpr_orders[]</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="bpr_list_" offset="8">
<TypeOrTypeRef>
<Array numElements="8" cgen:expression="BR_PAGE_SIZE">
<TypeOrTypeRef typeName="TRADE_LIST_DETAIL" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="BR_PAGE_SIZE" value="0"/>
<Enumerator name="BR_ABOVE" value="1"/>
<Enumerator name="BR_BELOW" value="2"/>
</Constants>
<NestedType>
<Enumeration name="BR_BADGE_RSP_FLAGS" size="4" cgen:namespace="BADGE_PAGE_RSP_MSG">
<EnumeratorRef name="BR_PAGE_SIZE"/>
<EnumeratorRef name="BR_ABOVE"/>
<EnumeratorRef name="BR_BELOW"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Typedef name="BADGEID" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</Typedef>
<Struct name="BadgeRetrievalPage" size="0">
<Members/>
</Struct>
<Struct name="BEST_AWAY_MKT_QUOTE" size="24" cgen:file="/mnt/pos.shrb/include/events/BEST_AWAY_MKT_QUOTE.h">
<Members>
<DataMember name="m_bestBidDepth" offset="0">
<Annotation>
<Comment>true if more quantity is available than bestBidSize</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_bestBidExch" offset="1">
<Annotation>
<Comment>best bid away market exchange</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_bestBidPrice" offset="4">
<Annotation>
<Comment>best bid price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_bestBidSize" offset="8">
<Annotation>
<Comment>number of units desired by best bid exchange</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_bestAskDepth" offset="12">
<Annotation>
<Comment>true if more quantity is available than bestAskSize</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_bestAskExch" offset="13">
<Annotation>
<Comment>best ask away market exchange</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_bestAskPrice" offset="16">
<Annotation>
<Comment>best ask price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_bestAskSize" offset="20">
<Annotation>
<Comment>number of units offered by best ask exchange</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="BEST_PRICES" size="20" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Members>
<DataMember name="bp_lmt_price" offset="0">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="bp_stp_price" offset="4">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="bp_stplmt_price" offset="8">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="bp_aon_price" offset="12">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="bp_loc_price" offset="16">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="BEST_QUOTE_MSG" size="56" cgen:file="/mnt/pos.shrb/include/events/BEST_QUOTE_MSG.h">
<Members>
<DataMember name="bqm_bestBidDepth" offset="0">
<Annotation>
<Comment>1 if more quantity is available than bestBidSize</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="bqm_bestBidExch" offset="1">
<Annotation>
<Comment>best bid away market exchange</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="bqm_bestBidPrice" offset="8">
<Annotation>
<Comment>best bid price</Comment>
</Annotation>
<TypeOrTypeRef typeName="MMP_PRICE" typeKind="Struct"/>
</DataMember>
<DataMember name="bqm_bestBidSize" offset="24">
<Annotation>
<Comment>number of units desired by best bid exchange</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="bqm_bestAskDepth" offset="28">
<Annotation>
<Comment>1 if more quantity is available than bestAskSize</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="bqm_bestAskExch" offset="29">
<Annotation>
<Comment>best ask away market exchange</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="bqm_bestAskPrice" offset="32">
<Annotation>
<Comment>best ask price</Comment>
</Annotation>
<TypeOrTypeRef typeName="MMP_PRICE" typeKind="Struct"/>
</DataMember>
<DataMember name="bqm_bestAskSize" offset="48">
<Annotation>
<Comment>number of units offered by best ask exchange</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="BKDUMP_REQ" size="68" cgen:file="/mnt/pos.shrb/include/events/BKDUMP_REQ.h">
<Members>
<DataMember name="which" offset="0">
<Annotation>
<Comment>which dump - see enum above</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="file" offset="4">
<Annotation>
<Comment>file destination for dump</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="50" cgen:expression=" BKDUMP_FILE_LEN "/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="option" offset="54">
<Annotation>
<Comment>future use ************************************************************************** if file == "" then the 'file' field is filled in when the message is received by 'q_up'. file = "&lt;wsname&gt;_&lt;StockName&gt;.dmp" //e.g. "N05A40_ADT_WS.dmp" fi **************************************************************************</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="StockName" offset="56">
<Annotation>
<Comment>name of security or '*'</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression=" STK_SIZE "/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="BLK_FREEZE" size="1" cgen:file="/mnt/pos.shrb/include/events/BLK_FREEZE.h">
<Members>
<DataMember name="fr_flags" offset="0">
<Annotation>
<Comment>see below</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="FR_MOC"/>
<Bit constantName="FR_OARS"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="FR_OARS" value="0"/>
<Enumerator name="FR_MOC" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="FR_OARS"/>
<EnumeratorRef name="FR_MOC"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="BLOCK_RPT" size="116" cgen:file="/mnt/pos.shrb/include/events/BLOCK_RPT.h">
<Members>
<DataMember name="bl_flags" offset="0">
<Annotation>
<Comment>BLOCK_EXECUTE or BLOCK_VALIDATE_ONLY only</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="BLOCK_FILE_AND_ELECT"/>
<Bit constantName="BLOCK_VALIDATE_ONLY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="bl_firm" offset="2">
<Annotation>
<Comment>value: "OARS" or "YB"</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="bl_price" offset="8">
<Annotation>
<Comment>opening price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="bl_tot_open_qty" offset="12">
<Annotation>
<Comment>total open qty for MDS</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="bl_prin_qty" offset="16">
<Annotation>
<Comment>qty of PRIN participation</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="bl_prin_side" offset="20">
<Annotation>
<Comment>PRIN side (BUY or SELL), or 0</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="bl_mkt_shrs" offset="24">
<Annotation>
<Comment>qtys for BUY, SELL sides;indexed by BUY_IDX, SELL_IDX in param.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="bl_lmt_shrs" offset="32">
<Annotation>
<Comment>qtys for BUY, SELL sides;indexed by BUY_IDX, SELL_IDX in param.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2" cgen:expression="SELL_IDX">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="bl_badge" offset="40">
<Annotation>
<Comment>badge# 1-9999 for MDS. 1 is default</Comment>
</Annotation>
<TypeOrTypeRef typeName="BADGEID" typeKind="Typedef"/>
</DataMember>
<DataMember name="bl_conds" offset="42">
<Annotation>
<Comment>(see below)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="BL_MOC_VALID"/>
<Bit constantName="BL_OARS_VALID"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="bl_mt_conds" offset="44">
<Annotation>
<Comment>(see below)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="MT_SLDLST"/>
<Bit constantName="MT_OPD"/>
<Bit constantName="MT_127"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="bl_oars" offset="48">
<Annotation>
<Comment>since book doesn't remember oars info</Comment>
</Annotation>
<TypeOrTypeRef typeName="IN_OARS" typeKind="Struct"/>
</DataMember>
<DataMember name="bl_prin" offset="88">
<Annotation>
<Comment>AWO</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRIN_ACT" typeKind="Struct"/>
</DataMember>
<Constants>
<Enumerator name="BL_OARS_VALID" value="0" cgen:file="/mnt/pos.shrb/include/events/BLOCK_RPT.h">
<Annotation>
<Comment>info in bl_oars is valid info</Comment>
</Annotation>
</Enumerator>
<Enumerator name="BL_MOC_VALID" value="1" cgen:file="/mnt/pos.shrb/include/events/BLOCK_RPT.h">
<Annotation>
<Comment>info in bl_oars is valid info</Comment>
</Annotation>
</Enumerator>
<Enumerator name="BLOCK_EXECUTE" value="0"/>
<Enumerator name="BLOCK_VALIDATE_ONLY" value="1"/>
<Enumerator name="BLOCK_FILE_AND_ELECT" value="2"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="BL_OARS_VALID"/>
<EnumeratorRef name="BL_MOC_VALID"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="BLOCK_EXECUTE"/>
<EnumeratorRef name="BLOCK_VALIDATE_ONLY"/>
<EnumeratorRef name="BLOCK_FILE_AND_ELECT"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="BOOK_DATA" size="52" cgen:file="/mnt/pos.shrb/include/events/BOOK_DATA.h">
<Members>
<DataMember name="bd_copen_cnt" offset="0">
<Annotation>
<Comment>cnt of current open orders - orderbase</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="bd_ovord_cnt" offset="4">
<Annotation>
<Comment>overnight order cnt - orderbase</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="bd_olord_cnt" offset="8">
<Annotation>
<Comment>on-line order cnt - book</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="bd_cxl_cnt" offset="12">
<Annotation>
<Comment>cnt of order cancellations - orderbase</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="bd_trd_cnt" offset="16">
<Annotation>
<Comment>cnt of quotes/trade rpts - book</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="bd_rpt_cnt" offset="20">
<Annotation>
<Comment>cnt of order executions - orderbase</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="bd_frpt_cnt" offset="24">
<Annotation>
<Comment>cnt of full order executions - ordrebase</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="bd_mkt_cnt" offset="28">
<Annotation>
<Comment>cnt of open mkt BUY &amp; SELL orders - market</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="bd_mlmt_cnt" offset="36">
<Annotation>
<Comment>cnt of open mktble lmt BUY &amp; SELL ords</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="bd_state" offset="44">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="bd_book_features" offset="48">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="DLL_AB" value="0"/>
<Enumerator name="ADDED_NDLL" value="1"/>
<Enumerator name="ADDED_DLL" value="2"/>
<Enumerator name="DLL_DONE" value="3"/>
<Enumerator name="DLL_HALF" value="4"/>
<Enumerator name="DLL_NONE" value="5"/>
<Enumerator name="BDF_EQA_ON" value="6"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="DLL_AB"/>
<EnumeratorRef name="ADDED_NDLL"/>
<EnumeratorRef name="ADDED_DLL"/>
<EnumeratorRef name="DLL_DONE"/>
<EnumeratorRef name="DLL_HALF"/>
<EnumeratorRef name="DLL_NONE"/>
<EnumeratorRef name="BDF_EQA_ON"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<NativeType name="bool" size="1"/>
<Typedef name="BOOL" size="1" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_params.h">
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</Typedef>
<Enumeration name="BR_BADGE_RSP_FLAGS" size="4" cgen:namespace="BADGE_PAGE_RSP_MSG" cgen:file="/mnt/pos.shrb/include/events/BADGE_PAGE_RSP_MSG.h">
<EnumeratorRef name="BR_PAGE_SIZE"/>
<EnumeratorRef name="BR_ABOVE"/>
<EnumeratorRef name="BR_BELOW"/>
</Enumeration>
<Enumeration name="BR_BADGE_SIDE" size="4" cgen:namespace="TRADE_LIST_DETAIL" cgen:file="/mnt/pos.shrb/include/events/BADGE_PAGE_RSP_MSG.h">
<EnumeratorRef name="BR_BADGE_BOT"/>
<EnumeratorRef name="BR_BADGE_SKIPLINE"/>
<EnumeratorRef name="BR_BADGE_SLD"/>
</Enumeration>
<Typedef name="BYTE" size="1" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</Typedef>
<Struct name="CAP_SUMRPT_OPEN_REQ_DATA" size="6" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/CAP_SUMRPT_OPEN_REQ_DATA.h">
<Members>
<DataMember name="sr_tanum" offset="0">
<Annotation>
<Comment>ta of requested order</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="CAP_SUMRPT_OPEN_RSP_DATA" size="156" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/CAP_SUMRPT_OPEN_RSP_DATA.h">
<Members>
<DataMember name="sr_fbs" offset="0">
<Annotation>
<Comment>The firm-br-seq of the requesting order</Comment>
</Annotation>
<TypeOrTypeRef typeName="FBS" typeKind="Struct"/>
</DataMember>
<DataMember name="sr_printOutNumber" offset="12">
<Annotation>
<Comment>The Summary Report number</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_side" offset="14">
<Annotation>
<Comment>The side of the requesting order</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_shares" offset="16">
<Annotation>
<Comment>The original shares of the order</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_price" offset="20">
<Annotation>
<Comment>The price of the order</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_prevTotalQty" offset="24">
<Annotation>
<Comment>The total quantity of the previous summaries section</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_prevTotalReports" offset="28">
<Annotation>
<Comment>The total reports of the previous</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_sinceTotalQty" offset="32">
<Annotation>
<Comment>The total quantity since last</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_sinceTotalReports" offset="36">
<Annotation>
<Comment>The total reports since last</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_totals" offset="40">
<Annotation>
<Comment>The individual summaries sorted by decreasing price</Comment>
</Annotation>
<TypeOrTypeRef typeName="CAP_SUMRPT_SCROLL_DATA" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="CAP_SUMRPT_SCROLL_DATA" size="116" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/CAP_SUMRPT_SCROLL_DATA.h">
<Members>
<DataMember name="sr_prev_qty" offset="0">
<Annotation>
<Comment>Total qty of the previous summaries for a particular price.</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="SUMRPT_MAX_ITEMS">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_prev_reports" offset="20">
<Annotation>
<Comment>Total rpts of the previous</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="SUMRPT_MAX_ITEMS">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_prev_price" offset="32">
<Annotation>
<Comment>The unique price of the</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="SUMRPT_MAX_ITEMS">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_since_qty" offset="52">
<Annotation>
<Comment>Total qty for a particular price since the last accumulation.</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="SUMRPT_MAX_ITEMS">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_since_reports" offset="72">
<Annotation>
<Comment>Total rpts for a particular</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="SUMRPT_MAX_ITEMS">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_since_price" offset="84">
<Annotation>
<Comment>The unique price of the</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="SUMRPT_MAX_ITEMS">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_prevCount" offset="104">
<Annotation>
<Comment>The # of previous rows</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="sr_sinceCount" offset="108">
<Annotation>
<Comment>The # of since rows</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="sr_moreBelow" offset="112">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="sr_moreAbove" offset="113">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="CHANGE_CLOSING_TIME_DATA" size="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/CHANGE_CLOSING_TIME_DATA.h">
<Members>
<DataMember name="m_time" offset="0">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="CHANGE_ETF_DELAY_DATA" size="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/CHANGE_ETF_DELAY_DATA.h">
<Members>
<DataMember name="m_minutes" offset="0">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<NativeType name="char" size="1"/>
<Typedef name="CHMASK" size="1" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_params.h">
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</Typedef>
<Struct name="CLASS_ACK" size="4" cgen:file="/mnt/pos.shrb/include/events/CLASS_ACK.h">
<Members>
<DataMember name="class_handle" offset="0">
<Annotation>
<Comment>instance id</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="class_id" offset="2">
<Annotation>
<Comment>class id</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="CLASS_REGISTRATION" size="148" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Members>
<DataMember name="cr_classid" offset="0">
<Annotation>
<Comment>reference ID for use of application</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="cr_qid" offset="4">
<Annotation>
<Comment>return qid</Comment>
</Annotation>
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="cr_menu_l1" offset="6">
<Annotation>
<Comment>line 1 of the meun</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="37" cgen:expression="MENU_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="cr_menu_l2" offset="43">
<Annotation>
<Comment>line 2 of the menu</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="37" cgen:expression="MENU_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="cr_recipt" offset="80">
<TypeOrTypeRef typeName="ON_RECEIPT" typeKind="Struct"/>
</DataMember>
<DataMember name="cr_timeout1" offset="86">
<TypeOrTypeRef typeName="ON_TIMEOUT" typeKind="Struct"/>
</DataMember>
<DataMember name="cr_timeout2" offset="100">
<TypeOrTypeRef typeName="ON_TIMEOUT" typeKind="Struct"/>
</DataMember>
<DataMember name="cr_key" offset="114">
<TypeOrTypeRef typeName="ON_KEY" typeKind="Struct"/>
</DataMember>
<Constants>
<Enumerator name="MAX_CLASSES" value="0"/>
<Enumerator name="MAX_KEY" value="1"/>
<Enumerator name="MENU_SIZE" value="2"/>
<Enumerator name="MAX_WAIT" value="3"/>
<Enumerator name="MW_EXPAND" value="4"/>
<Enumerator name="MW_DELETE" value="5"/>
<Enumerator name="MW_SIGNAL" value="6"/>
<Enumerator name="MW_SIG_AND_DEL" value="7"/>
<Enumerator name="MW_SIGNAL_FINAL" value="8"/>
<Enumerator name="MW_UNKNOWN" value="9"/>
<Enumerator name="MW_TIMER_1" value="10"/>
<Enumerator name="MW_TIMER_2" value="11"/>
<Enumerator name="LAST_ITS_IDX" value="12"/>
<Enumerator name="SSR_CLASS_INDX" value="13"/>
<Enumerator name="TICK_MSG_CLASS_INDX" value="14"/>
<Enumerator name="RPT_STATUS_CLASS_INDX" value="15"/>
<Enumerator name="REM_RPT_STAT_CLASS_INDX" value="16"/>
<Enumerator name="DLL_MSG_CLASS_INDX" value="17"/>
<Enumerator name="MSGS_IN_Q_CLASS_INDX" value="18"/>
<Enumerator name="REPORT_SIDECAR_INDX" value="19"/>
<Enumerator name="REMOVE_SIDECAR_INDX" value="20"/>
<Enumerator name="MAX_PREDEFINED_CLASSES" value="21"/>
<Enumerator name="MW_SSR_PRI" value="22"/>
<Enumerator name="MW_THRESH_PRI" value="23"/>
<Enumerator name="MW_TICK_MSG_PRI" value="24"/>
<Enumerator name="MW_RPT_STATUS_PRI" value="25"/>
<Enumerator name="MW_DLL_MSG_PRI" value="26"/>
<Enumerator name="MW_MSG_IN_Q_PRI" value="27"/>
<Enumerator name="MW_MSG_SIDECAR_PRI" value="28"/>
<Enumerator name="MW_EQA_PRIO1_WARN" value="29"/>
<Enumerator name="MW_EQA_RN_WARN" value="30"/>
<Enumerator name="MW_EQA_PRIO1_VIOLATE" value="31"/>
</Constants>
<NestedType>
<Typedef name="ON_RECEIPT" size="6">
<TypeOrTypeRef typeName="ON_RECEIPT" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Typedef name="ON_TIMEOUT" size="14">
<TypeOrTypeRef typeName="ON_TIMEOUT" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Typedef name="ON_KEY" size="34">
<TypeOrTypeRef typeName="ON_KEY" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="MAX_CLASSES"/>
<EnumeratorRef name="MAX_KEY"/>
<EnumeratorRef name="MENU_SIZE"/>
<EnumeratorRef name="MAX_WAIT"/>
<EnumeratorRef name="MW_EXPAND"/>
<EnumeratorRef name="MW_DELETE"/>
<EnumeratorRef name="MW_SIGNAL"/>
<EnumeratorRef name="MW_SIG_AND_DEL"/>
<EnumeratorRef name="MW_SIGNAL_FINAL"/>
<EnumeratorRef name="MW_UNKNOWN"/>
<EnumeratorRef name="MW_TIMER_1"/>
<EnumeratorRef name="MW_TIMER_2"/>
<EnumeratorRef name="LAST_ITS_IDX"/>
<EnumeratorRef name="SSR_CLASS_INDX"/>
<EnumeratorRef name="TICK_MSG_CLASS_INDX"/>
<EnumeratorRef name="RPT_STATUS_CLASS_INDX"/>
<EnumeratorRef name="REM_RPT_STAT_CLASS_INDX"/>
<EnumeratorRef name="DLL_MSG_CLASS_INDX"/>
<EnumeratorRef name="MSGS_IN_Q_CLASS_INDX"/>
<EnumeratorRef name="REPORT_SIDECAR_INDX"/>
<EnumeratorRef name="REMOVE_SIDECAR_INDX"/>
<EnumeratorRef name="MAX_PREDEFINED_CLASSES"/>
<EnumeratorRef name="MW_SSR_PRI"/>
<EnumeratorRef name="MW_THRESH_PRI"/>
<EnumeratorRef name="MW_TICK_MSG_PRI"/>
<EnumeratorRef name="MW_RPT_STATUS_PRI"/>
<EnumeratorRef name="MW_DLL_MSG_PRI"/>
<EnumeratorRef name="MW_MSG_IN_Q_PRI"/>
<EnumeratorRef name="MW_MSG_SIDECAR_PRI"/>
<EnumeratorRef name="MW_EQA_PRIO1_WARN"/>
<EnumeratorRef name="MW_EQA_RN_WARN"/>
<EnumeratorRef name="MW_EQA_PRIO1_VIOLATE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="CLIENT_STATE_DATA" size="356" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h">
<Members>
<DataMember name="cs_type" offset="0">
<Annotation>
<Comment>note: this tells which field changed! Tape info</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="sd_tape" offset="4">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="os_in_opening" offset="5">
<Annotation>
<Comment>True/False if opening started/completed</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="os_accept_lopg" offset="6">
<Annotation>
<Comment>True/False if reopening started/completed</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="os_opn_price" offset="8">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="blk_buf" offset="12">
<Annotation>
<Comment>open buffer</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="130" cgen:expression="SZ_BLK_SAVE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="moc_buf" offset="142">
<Annotation>
<Comment>close buffer</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="130" cgen:expression="SZ_MOC_SAVE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qt_buf" offset="272">
<TypeOrTypeRef>
<Symbol size="32" cgen:expression="SZ_QT_SAVE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qt_assist_buf" offset="304">
<TypeOrTypeRef>
<Symbol size="30" cgen:expression="SZ_QT_ASSIST_SAVE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="firmId" offset="334">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="PWD_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pi_bid" offset="344">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pi_ask" offset="348">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="groupNdaCount" offset="352">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="COMM_BILLING_DATA" size="10" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Members>
<DataMember name="cbd_tanum" offset="0">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="cbd_billingValue" offset="6">
<Annotation>
<Comment>alignment issue: see pragma if better C++</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="COMM_BILLING_REQ_DATA" size="6" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/COMM_BILLING_REQ_DATA.h">
<Members>
<DataMember name="cbr_tanum" offset="0">
<Annotation>
<Comment>ta of requested order</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="COMM_BILLING_RSP_DATA" size="32" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/COMM_BILLING_RSP_DATA.h">
<Members>
<DataMember name="cbr_fbs" offset="0">
<Annotation>
<Comment>The firm-br-seq of the requesting order</Comment>
</Annotation>
<TypeOrTypeRef typeName="FBS" typeKind="Struct"/>
</DataMember>
<DataMember name="cbr_origShares" offset="12">
<Annotation>
<Comment>Original shares of request order</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="cbr_asAgentShares" offset="16">
<Annotation>
<Comment>Shares executed as agent</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="cbr_cxlShares" offset="20">
<Annotation>
<Comment>Shares cancelled</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="cbr_asPrinShares" offset="24">
<Annotation>
<Comment>Shares executed as PRIN</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="cbr_billShares" offset="28">
<Annotation>
<Comment>Billing Value</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="COMM_BILLING_UPD_DATA" size="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/COMM_BILLING_UPD_DATA.h">
<Members>
<DataMember name="cbu_billShares" offset="0">
<Annotation>
<Comment>Billing value</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="COMMITMENT_RESPONSE" size="180" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h">
<Members>
<DataMember name="cr_in_commitment" offset="0">
<TypeOrTypeRef typeName="IN_COMMITMENT" typeKind="Struct"/>
</DataMember>
<DataMember name="cr_template_type" offset="132">
<Annotation>
<Comment>see below</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="cr_err_reason" offset="133">
<Annotation>
<Comment>0 if no error; see below for error numbers</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="cr_flags" offset="134">
<Annotation>
<Comment>CR_BOOK_AVAILABLE or none</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="CR_BOOK_AVAILABLE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="cr_n_old_gu" offset="136">
<Annotation>
<Comment>Number of old giveups for name chg</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="cr_old_gu" offset="138">
<Annotation>
<Comment>array of old gives</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="MAX_ITS_NAME_CHG_GV">
<TypeOrTypeRef typeName="DET_GIVEUP" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="CP_TEXT" size="94" cgen:file="/mnt/pos.shrb/include/events/CP_TEXT.h">
<Members>
<DataMember name="ct_dsp_slot_no" offset="0">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ct_msg_class" offset="2">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ct_msg_id" offset="4">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ct_flags" offset="6">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName=" CP_NOT_FOUND"/>
<Bit constantName=" TEXT_IS_SINGLE_STK_PG"/>
<Bit constantName=" TEXT_IS_COMM_PG"/>
<Bit constantName=" TEXT_IS_LAST_MSG"/>
<Bit constantName=" TEXT_CP_IS_EMPTY"/>
<Bit constantName=" TEXT_CP_HAS_NEXT_MSG"/>
<Bit constantName="TEXT_CP_HAS_PREV_MSG"/>
<Bit constantName="TEXT_CP_HAS_TEXT"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ct_subject" offset="8">
<TypeOrTypeRef>
<Symbol size="43" cgen:expression="CP_SUBJECT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ct_subject_attribs" offset="51">
<TypeOrTypeRef>
<Mask name="" size="">
<Bit constantName="TEXT_ATTRIB_YELLOW"/>
<Bit constantName="TEXT_ATTRIB_ON_CMD"/>
<Bit constantName="TEXT_ATTRIB_UNDERLINE"/>
<Bit constantName="TEXT_ATTRIB_BLINK"/>
<Bit constantName="TEXT_ATTRIB_REVERSE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="CROWD_INFO" size="13" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<Members>
<DataMember name="ci_contra" offset="0">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ci_qty" offset="4">
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="QTY_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ci_badge" offset="9">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="BADGE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="CTR_NAMES" size="4" cgen:file="/mnt/pos.shrb/include/events/CTR_NAMES.h">
<Members>
<DataMember name="cn_name" offset="0">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="L_MF_SIZE" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="L_MF_SIZE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Typedef name="DATE" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Struct name="DBK_REPORT_CORRECTION_TA" size="68" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Members>
<DataMember name="m_ta" offset="0">
<Annotation>
<Comment>(0) Order's TA #, in "fixed format": a one or two alpha character field, right justified, blank-padded, followed by a 4 decimal digit field, right justified, '0'-padded, e.g., " A0001" or "BB0123"</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_qty" offset="6">
<Annotation>
<Comment>(6) report quantity</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_contra" offset="8">
<Annotation>
<Comment>(8) contra names</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="RC_MAX_CONTRA_CNT">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_contraQty" offset="28">
<Annotation>
<Comment>(28) qty for each contra</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="RC_MAX_CONTRA_CNT">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_contraBadgeId" offset="48">
<Annotation>
<Comment>(48) badges for contras</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="RC_MAX_CONTRA_CNT">
<TypeOrTypeRef typeName="BADGEID" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_taFlags" offset="58">
<Annotation>
<Comment>(58) TA flags</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="RC_COMPLETE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_transId" offset="60">
<Annotation>
<Comment>(60) 2 byte transaction id</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_transRefId" offset="62">
<Annotation>
<Comment>(62) 2 byte transaction reference</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_exePrice" offset="64">
<Annotation>
<Comment>(64) the execution price</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="RC_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DBK_REPORT_CORRECTION" size="430" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Members>
<DataMember name="m_symbol" offset="0">
<Annotation>
<Comment>(0) the stock symbol</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_recNum" offset="11">
<Annotation>
<Comment>(11) # of the record</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_version" offset="12">
<Annotation>
<Comment>(12) "RP01" (not null</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="RC_VERSION_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_taCnt" offset="16">
<Annotation>
<Comment>(16) # of TAs</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_recIdFlags" offset="18">
<Annotation>
<Comment>(18) flag bits</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="RC_NX_REAL_NAMES_ASSIGNMENT"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_spCondsFlags" offset="20">
<Annotation>
<Comment>(20) flag bits</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_post" offset="22">
<Annotation>
<Comment>(22)</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_tee" offset="23">
<Annotation>
<Comment>(23)</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_transTime" offset="24">
<Annotation>
<Comment>(24) MILLITIME binary field</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="RC_TIME_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_commentCode" offset="28">
<Annotation>
<Comment>(28)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="RC_COMMENT_CODE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_comment" offset="30">
<Annotation>
<Comment>(30)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="RC_COMMENT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_dbkInfo" offset="40">
<Annotation>
<Comment>(40) RESERVED for DBK !!!</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_contraCount" offset="42">
<Annotation>
<Comment>(42) contra count for each TA</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="RC_MAX_TA_CNT">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_filler" offset="52">
<Annotation>
<Comment>(52) 38 character filler</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="38"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_reportCorrectionTa" offset="90">
<Annotation>
<Comment>(90)</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="RC_MAX_TA_CNT">
<TypeOrTypeRef typeName="DBK_REPORT_CORRECTION_TA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DBK_REPORT_TA" size="12" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h">
<Members>
<DataMember name="m_ta" offset="0">
<Annotation>
<Comment>(0) Order's TA #, in "fixed format": a one or two alpha character field, right justified, blank-padded, followed by a 4 decimal digit field, right justified, '0'-padded, e.g., " A0001" or "BB0123"</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_qty" offset="6">
<Annotation>
<Comment>(6) report quantity</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_leaves" offset="8">
<Annotation>
<Comment>(8) qty left</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_trans_id" offset="10">
<Annotation>
<Comment>2 byte transaction id short m_transId;</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="DR_TRANS_ID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DBK_REPORT" size="428" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h">
<Members>
<DataMember name="m_symbol" offset="0">
<Annotation>
<Comment>(0) the stock symbol</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_recNum" offset="11">
<Annotation>
<Comment>(11) # of the record</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_version" offset="12">
<Annotation>
<Comment>(12) "RP02" (not null</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="DR_VERSION_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_tick" offset="16">
<Annotation>
<Comment>(16) last sale tick. This is a digit character. '0' is no tick '1' is 0- '2' is 0+ '3' is - '4' is +</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_contraCnt" offset="17">
<Annotation>
<Comment>(17) # of contras</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_taCnt" offset="18">
<Annotation>
<Comment>(18) # of TAs</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_exePrice" offset="20">
<Annotation>
<Comment>(20) the execution price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_dbkReserved" offset="24">
<Annotation>
<Comment>(24) RESERVED for DBK. Used as a MASK Bits SELL and BUY are the only bits currently used</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_dbkLinkNo" offset="26">
<Annotation>
<Comment>(26) DBK Link Number</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_recIdFlags" offset="28">
<Annotation>
<Comment>(28) flag bits</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="DR_UNBUNDLE"/>
<Bit constantName="DR_END_BLKRPT"/>
<Bit constantName="DR_NX_REAL_NAMES_SATISFIED"/>
<Bit constantName="DR_NX_AUTO_EXECUTION"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_spCondsFlags" offset="30">
<Annotation>
<Comment>(30) flag bits</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="DR_RPT"/>
<Bit constantName="DR_NO_RANGE_CHECK"/>
<Bit constantName="DR_XCH"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_post" offset="32">
<Annotation>
<Comment>(32)</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_tee" offset="33">
<Annotation>
<Comment>(33)</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_suppTradeNum" offset="34">
<Annotation>
<Comment>(34) supplemental</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_contra" offset="36">
<Annotation>
<Comment>(36) contra names</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="DR_MAX_CONTRA_CNT">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_contraQty" offset="64">
<Annotation>
<Comment>(64) qty for each contra</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="DR_MAX_CONTRA_CNT">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_contraBadgeId" offset="92">
<Annotation>
<Comment>(92) badges for contras</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="DR_MAX_CONTRA_CNT">
<TypeOrTypeRef typeName="BADGEID" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_dbkExeTime" offset="106">
<Annotation>
<Comment>(106) MILLITIME binary field (100ths of seconds.)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="DR_TIME_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_writeInTime" offset="110">
<Annotation>
<Comment>(110) MILLITIME binary field</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="DR_TIME_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_commentCode" offset="114">
<Annotation>
<Comment>(114)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="DR_COMMENT_CODE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_comment" offset="116">
<Annotation>
<Comment>(116)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="DR_COMMENT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_filler" offset="126">
<Annotation>
<Comment>(126) Changed Filler from 12 to 2 bytes. Eugene.</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_reportTa" offset="128">
<Annotation>
<Comment>(128)</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="25" cgen:expression="DR_MAX_TA_CNT">
<TypeOrTypeRef typeName="DBK_REPORT_TA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DEFAULTS" size="12" cgen:file="/mnt/pos.shrb/include/events/DEFAULTS.h">
<Members>
<DataMember name="de_best_price" offset="0">
<Annotation>
<Comment>default rpt template price for RPT_TYPE</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="de_actno" offset="4">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="de_last_stop_price" offset="8">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="DEPTH_IND_INFO" size="8" cgen:file="/mnt/pos.shrb/include/events/DEPTH_IND_INFO.h">
<TypeOrTypeRef typeName="QUOTE_INFO" typeKind="Struct"/>
</Typedef>
<Struct name="DEPTH_IND_RPT_DATA" size="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/DEPTH_IND_RPT_DATA.h">
<Members>
<DataMember name="dirpt_depthIndInfo" offset="0">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="DEPTH_IND_INFO" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DEPTH_IND_RSP_DATA" size="20" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/DEPTH_IND_RSP_DATA.h">
<Members>
<DataMember name="dirsp_isFirstInd" offset="0">
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="dirsp_depthIndInfo" offset="4">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="DEPTH_IND_INFO" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="EMPTY_DEPTH_INDICATION" value="0"/>
<Enumerator name="NOT_EMPTY_DEPTH_INDICATION" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="EMPTY_DEPTH_INDICATION"/>
<EnumeratorRef name="NOT_EMPTY_DEPTH_INDICATION"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Typedef name="DET_GIVEUP_P" size="6" cgen:file="/mnt/pos.shrb/include/events/DET_GIVEUP.h">
<TypeOrTypeRef typeName="DET_GIVEUP" typeKind="Struct"/>
</Typedef>
<Struct name="DET_GIVEUP" size="6" cgen:file="/mnt/pos.shrb/include/events/DET_GIVEUP.h">
<Members>
<DataMember name="gv_qty" offset="0">
<Annotation>
<Comment>giveup quantity</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="gv_firm" offset="2">
<Annotation>
<Comment>contra member firm</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Union name="DET_VAR" size="44" discriminator="undefined" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Members>
<DataMember name="va_det" offset="0" discriminatorCase="undefined">
<Annotation>
<Comment>reporting an execution</Comment>
</Annotation>
<TypeOrTypeRef typeName="_det" typeKind="Struct"/>
</DataMember>
<DataMember name="va_cxl" offset="0" discriminatorCase="undefined">
<Annotation>
<Comment>reporting a cancel</Comment>
</Annotation>
<TypeOrTypeRef typeName="_concxl" typeKind="Struct"/>
</DataMember>
<DataMember name="va_prcc" offset="0" discriminatorCase="undefined">
<Annotation>
<Comment>reporting a price change</Comment>
</Annotation>
<TypeOrTypeRef typeName="_prccor" typeKind="Struct"/>
</DataMember>
<DataMember name="va_stpstk" offset="0" discriminatorCase="undefined">
<Annotation>
<Comment>reporting a stop stock</Comment>
</Annotation>
<TypeOrTypeRef typeName="_stpstk" typeKind="Struct"/>
</DataMember>
<DataMember name="va_nd" offset="0" discriminatorCase="undefined">
<Annotation>
<Comment>reporting nothing done</Comment>
</Annotation>
<TypeOrTypeRef typeName="_nd" typeKind="Struct"/>
</DataMember>
</Members>
</Union>
<Struct name="DL_IN_ORDER" size="1932" cgen:file="/mnt/pos.shrb/include/events/DL_IN_ORDER.h">
<Members>
<DataMember name="dl_seq" offset="0">
<Annotation>
<Comment>seq # stk/trs has to ack</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_count" offset="4">
<Annotation>
<Comment>count of ORDERs folowing</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_ord" offset="8">
<TypeOrTypeRef typeName="IN_ORDER" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="DL_RQST" size="310" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Members>
<DataMember name="dr_count" offset="0">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="dr_stocks" offset="2">
<TypeOrTypeRef>
<Array numElements="28" cgen:expression="N_STOCKS">
<TypeOrTypeRef>
<Symbol size="11"/>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DLL_ACCEPT_DATA" size="10" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/DLL_ACCEPT_DATA.h">
<Members>
<DataMember name="dll_version" offset="0">
<Annotation>
<Comment>L_DLL_VERSION is defined in PosDefs.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_DLL_VERSION"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="record_len" offset="4">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_DLL_REC_LEN"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DLL_ACTIVITY_DATA" size="120" cgen:file="/mnt/pos.shrb/include/events/DLL_ACTIVITY_DATA.h">
<Members>
<DataMember name="da_record_type" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="da_filler1" offset="1">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="da_tanum" offset="2">
<Annotation>
<Comment>6 char TA #</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_side" offset="8">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="da_filler2" offset="9">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="da_flags" offset="10">
<Annotation>
<Comment>16 bit</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="L_SHORT"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_exec_price" offset="12">
<Annotation>
<Comment>32 bit</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_filler3" offset="16">
<Annotation>
<Comment>2 char filler</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_ctr_names" offset="18">
<Annotation>
<Comment>occurs 5 times, 4 chars each</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="N_CONTRA">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_ctr_qty" offset="38">
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="N_CONTRA">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_ctr_badge" offset="48">
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="N_CONTRA">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_dbk_linkno" offset="68">
<Annotation>
<Comment>16 bit link number</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="L_SHORT"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_tick" offset="70">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="da_filler4" offset="71">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="da_write_in_time" offset="72">
<Annotation>
<Comment>32 bit binary</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_MILLITIME"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_canned_cmt_1" offset="76">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="da_canned_cmt_2" offset="77">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="da_cmt_freeform" offset="78">
<Annotation>
<Comment>10 chars</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="L_COMMENT"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_exe_time_milli" offset="88">
<Annotation>
<Comment>32 bit binary 1/100th sec</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_MILLITIME"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_csh_nd_seller" offset="92">
<Annotation>
<Comment>ascii " ","C ","ND " or 001 to 999 = sellers #days</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="3"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_firm" offset="95">
<Annotation>
<Comment>4 chars</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_ord_type" offset="99">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="da_clearing_firm" offset="100">
<Annotation>
<Comment>clearing firm giveup for CAP orders</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="FIRM_TXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_filler5" offset="104">
<TypeOrTypeRef>
<Symbol size="6"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="da_sort_key" offset="110">
<Annotation>
<Comment>sort keys, at positions 111-120</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DLL_BP_FAIL_INFO" size="11" cgen:file="/mnt/pos.shrb/include/events/DLL_BP_FAIL_INFO.h">
<Members>
<DataMember name="dbf_stock" offset="0">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DLL_LEADER2" size="120" cgen:file="/mnt/pos.shrb/include/events/DLL_LEADER2.h">
<Members>
<DataMember name="dl_record_code" offset="0">
<Annotation>
<Comment>1 char</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_stock_code" offset="1">
<Annotation>
<Comment>8 bit binary</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_dll_version" offset="2">
<Annotation>
<Comment>dll version, 4 ascii chars (4.0)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_DLL_VERSION"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_dll_rec_len" offset="6">
<Annotation>
<Comment>record length, 6 ascii digits(4.0</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_DLL_REC_LEN"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_security_sym" offset="12">
<Annotation>
<Comment>11 chars</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="L_STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_date" offset="23">
<Annotation>
<Comment>MMDDYY 6 chars</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_DT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_time" offset="29">
<Annotation>
<Comment>HHMMSS 6 chars</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_TM_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_post" offset="35">
<Annotation>
<Comment>8 bit binary</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_tee" offset="36">
<Annotation>
<Comment>1 char</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_unit_of_trade" offset="37">
<Annotation>
<Comment>8 bit binary</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_specialist_unit_num" offset="38">
<Annotation>
<Comment>16 bit binary</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_clearing_num" offset="40">
<Annotation>
<Comment>16 bit binary</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_last_sale_price" offset="42">
<Annotation>
<Comment>32 bit binary</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_trd_spsym" offset="46">
<Annotation>
<Comment>4 chars, specialist trade firm name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_clr_spsym" offset="50">
<Annotation>
<Comment>4 chars, specialist clearing firm name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_opening_cnt" offset="54">
<Annotation>
<Comment>1 char, oars synchronization</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_flags" offset="55">
<Annotation>
<Comment>8 bit binary, bits 8-15 - &lt;08:09&gt; = 0 - Unfrozen 1 - Frozen 2 - Reported &lt;10&gt; = Dividend or stock split applied last night &lt;11&gt; = 1 - XPress ON, 0 - XPress Off &lt;12&gt; = ELECT_ON_QUOTE 1 - Elect 0 - Do not elect &lt;12:15&gt; = NOT USED</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_price_denom_code" offset="56">
<Annotation>
<Comment>8 bit binary</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_filler2" offset="57">
<Annotation>
<Comment>1 char filler</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_xpr_quote_timer" offset="58">
<Annotation>
<Comment># of seconds for XPress quote timer</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_prin_position" offset="60">
<Annotation>
<Comment>32 bit binary</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_POSITION_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_xpr_order_size" offset="64">
<Annotation>
<Comment>size of the smallest XPress order - initially 25000</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_xpr_cutoff_time" offset="68">
<Annotation>
<Comment># of minutes before close time. Initially will be set to 2.</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_nx_cutoff_time" offset="70">
<Annotation>
<Comment># of minutes before close time. Initially will be set to 1.</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_close_time" offset="72">
<Annotation>
<Comment>4 character HHMM close time when NYSE stops trading</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_etf_extended_time" offset="76">
<Annotation>
<Comment># of minutes after close time. Default is 0. Even though the field is char[2], it actually contains a binary short.</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_filler3" offset="78">
<Annotation>
<Comment>34 char filler</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="32"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_sort_key" offset="110">
<Annotation>
<Comment>10 bytes, at positions 111-120 SECY BINARY 8 PRICE-PRIORITY BINARY 8 JUL-DATE BINARY 16 MILLI-TIME BINARY 32 TIE-BREAKER BINARY 16</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="L_SK_SIZE2"/>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="L_DT_SIZE" value="0" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>date array size in DLL_HEAD</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_TM_SIZE" value="1" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>ditto for time</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_STK_SIZE" value="2" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of stock symbol</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_TA_SIZE" value="3" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of LMT II TA #</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_BR_SIZE" value="4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of branch</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_SEQ_SIZE" value="5" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of sequence</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_MAX_TA" value="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>maximum TA #'s for report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_COMMENT_CODE" value="7" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of prin act comment code</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_COMMENT" value="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of prin act comment</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_SK_SIZE2" value="9" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of sort key2</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_PRICE_SIZE" value="10" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of price in DLL records</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_POSITION_SIZE" value="11" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of PRIN position in DLL rec</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_DLL_VERSION" value="12" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>size of version field in DLL_LEADER2</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_DLL_REC_LEN" value="13" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>size of record length field in DLL_LEADER2</Comment>
</Annotation>
</Enumerator>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="L_DT_SIZE"/>
<EnumeratorRef name="L_TM_SIZE"/>
<EnumeratorRef name="L_STK_SIZE"/>
<EnumeratorRef name="L_TA_SIZE"/>
<EnumeratorRef name="L_BR_SIZE"/>
<EnumeratorRef name="L_SEQ_SIZE"/>
<EnumeratorRef name="L_MAX_TA"/>
<EnumeratorRef name="L_COMMENT_CODE"/>
<EnumeratorRef name="L_COMMENT"/>
<EnumeratorRef name="L_SK_SIZE2"/>
<EnumeratorRef name="L_PRICE_SIZE"/>
<EnumeratorRef name="L_POSITION_SIZE"/>
<EnumeratorRef name="L_DLL_VERSION"/>
<EnumeratorRef name="L_DLL_REC_LEN"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="DLL_LEADER" size="70" cgen:file="/mnt/pos.shrb/include/events/DLL_LEADER2.h">
<Members>
<DataMember name="dl_record_code" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_stock_code" offset="1">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_security_sym" offset="2">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="L_STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_date" offset="13">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_DT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_time" offset="19">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_TM_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_post" offset="25">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_tee" offset="26">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_unit_of_trade" offset="27">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_bid_price" offset="28">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_sell_price" offset="32">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_trd_spsym" offset="36">
<Annotation>
<Comment>specialist trade firm name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_clr_spsym" offset="40">
<Annotation>
<Comment>specialist clearing firm name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_opening_cnt" offset="44">
<Annotation>
<Comment>oars synchronization</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_flags" offset="45">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_price_denom_code" offset="46">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dl_filler" offset="47">
<TypeOrTypeRef>
<Symbol size="13"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dl_sort_key" offset="60">
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="L_SK_SIZE2"/>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="L_DT_SIZE" value="0" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>date array size in DLL_HEAD</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_TM_SIZE" value="1" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>ditto for time</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_STK_SIZE" value="2" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of stock symbol</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_TA_SIZE" value="3" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of LMT II TA #</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_BR_SIZE" value="4" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of branch</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_SEQ_SIZE" value="5" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of sequence</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_MAX_TA" value="6" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>maximum TA #'s for report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_COMMENT_CODE" value="7" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of prin act comment code</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_COMMENT" value="8" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of prin act comment</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_SK_SIZE2" value="9" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of sort key2</Comment>
</Annotation>
</Enumerator>
<Enumerator name="L_PRICE_SIZE" value="10" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>length of price in DLL records</Comment>
</Annotation>
</Enumerator>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="L_DT_SIZE"/>
<EnumeratorRef name="L_TM_SIZE"/>
<EnumeratorRef name="L_STK_SIZE"/>
<EnumeratorRef name="L_TA_SIZE"/>
<EnumeratorRef name="L_BR_SIZE"/>
<EnumeratorRef name="L_SEQ_SIZE"/>
<EnumeratorRef name="L_MAX_TA"/>
<EnumeratorRef name="L_COMMENT_CODE"/>
<EnumeratorRef name="L_COMMENT"/>
<EnumeratorRef name="L_SK_SIZE2"/>
<EnumeratorRef name="L_PRICE_SIZE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="DLL_ORDER_RECORD2" size="120" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Members>
<DataMember name="do_record_type" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_filler1" offset="1">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_ta_number" offset="2">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_firm_symbol" offset="8">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_br_office" offset="12">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_BR_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_sequence" offset="16">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_file_price" offset="18">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_side" offset="22">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_type" offset="23">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_time_in_force" offset="24">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_security_code" offset="25">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_qty_exec" offset="26">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_qty_cxld" offset="28">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_qty_open" offset="30">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_prl_quantity" offset="32">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_lmt_price" offset="34">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_stp_price" offset="38">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_oc_time_limit" offset="42">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_bill_to" offset="44">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_send_to" offset="48">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_filler2" offset="52">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_flags" offset="54">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_oe_date" offset="56">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_oe_time" offset="58">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_clearing_firm" offset="62">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_filler3" offset="66">
<TypeOrTypeRef>
<Symbol size="44"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_secy" offset="110">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_divs_pri" offset="111">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_effseq_date" offset="112">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_effseq_time" offset="114">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_effseq_seq" offset="118">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DLL_ORDER_RECORD" size="70" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Members>
<DataMember name="do_ta_number" offset="0">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_firm_symbol" offset="6">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_br_office" offset="10">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_BR_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_sequence" offset="14">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_file_price" offset="16">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_side" offset="20">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_type" offset="21">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_time_in_force" offset="22">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_security_code" offset="23">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_qty_exec" offset="24">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_qty_cxld" offset="26">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_qty_open" offset="28">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_prl_quantity" offset="30">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_lmt_price" offset="32">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_stp_price" offset="36">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_ord_date" offset="40">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_DT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_ord_time" offset="46">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_TM_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_flags" offset="52">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_oe_date" offset="54">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_oe_time" offset="56">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_secy" offset="60">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_divs_pri" offset="61">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_effseq_date" offset="62">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_effseq_time" offset="64">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="do_effseq_seq" offset="68">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DLL_ORDERS" size="1976" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<Members>
<DataMember name="do_cnt" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="do_dll" offset="4">
<Annotation>
<Comment>limit size of msg sent between tasks</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="17" cgen:expression="N_DLL_ORDERS">
<TypeOrTypeRef typeName="ORDER" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Enumeration name="dll_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="not_dlled"/>
<EnumeratorRef name="dll_on"/>
<EnumeratorRef name="dlled"/>
<EnumeratorRef name="dll_aborted"/>
</Enumeration>
<Struct name="DLL_TICK_INFO" size="2" cgen:file="/mnt/pos.shrb/include/events/DLL_TICK_INFO.h">
<Members>
<DataMember name="dt_buy" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dt_sell" offset="1">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="DLL_TRAILER2" size="120" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Members>
<DataMember name="dt_record_code" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dt_stk_code" offset="1">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dt_security_sym" offset="2">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="L_STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_date" offset="13">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_DT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_time" offset="19">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_TM_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_fill1" offset="25">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dt_stk_order_count" offset="26">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_bid_price" offset="28">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_bid_order_count" offset="32">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_ask_price" offset="34">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_ask_order_count" offset="38">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_order_count" offset="40">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_bid_count" offset="44">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_ask_count" offset="48">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_filler" offset="52">
<TypeOrTypeRef>
<Symbol size="58"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_sort_key" offset="110">
<TypeOrTypeRef>
<Symbol size="10"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DLL_TRAILER" size="70" cgen:file="/mnt/pos.shrb/include/misc/lmt.h">
<Members>
<DataMember name="dt_record_code" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dt_stk_code" offset="1">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dt_security_sym" offset="2">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="L_STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_date" offset="13">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_DT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_time" offset="19">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="L_TM_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_fill1" offset="25">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="dt_stk_order_count" offset="26">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_bid_price" offset="28">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_bid_order_count" offset="32">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_ask_price" offset="34">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="L_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_ask_order_count" offset="38">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_order_count" offset="40">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_bid_count" offset="44">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_ask_count" offset="48">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_filler" offset="52">
<TypeOrTypeRef>
<Symbol size="8"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="dt_sort_key" offset="60">
<TypeOrTypeRef>
<Symbol size="10"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="DSP_DLL_DATA" size="20" cgen:file="/mnt/pos.shrb/include/events/DSP_DLL_DATA.h">
<Members>
<DataMember name="ds_stk_sym" offset="0">
<Annotation>
<Comment>symbol of stock for dll</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ds_trd_spsym" offset="11">
<Annotation>
<Comment>specialist trade firm name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ds_clr_spsym" offset="15">
<Annotation>
<Comment>specialist clearing firm name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ds_ex_dividend" offset="19">
<Annotation>
<Comment>day-after-dividend-reduction flag</Comment>
</Annotation>
<TypeOrTypeRef typeName="BOOL" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="DSP_REG" size="4" cgen:file="/mnt/pos.shrb/include/events/DSP_REG.h">
<Members>
<DataMember name="dr_qid" offset="0">
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="dr_bdy_state" offset="2">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="BDY_UNDEFINED" value="0"/>
<Enumerator name="BDY_ACTIVE" value="1"/>
<Enumerator name="BDY_INACTIVE_TRY" value="2"/>
<Enumerator name="BDY_INACTIVE" value="3"/>
<Enumerator name="BDY_FORCED_INACTIVE" value="4"/>
</Constants>
<NestedType>
<Enumeration name="BDY_STATE" size="4" cgen:namespace="DSP_REG">
<EnumeratorRef name="BDY_UNDEFINED"/>
<EnumeratorRef name="BDY_ACTIVE"/>
<EnumeratorRef name="BDY_INACTIVE_TRY"/>
<EnumeratorRef name="BDY_INACTIVE"/>
<EnumeratorRef name="BDY_FORCED_INACTIVE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="ECHO_BACK_MSG_DATA" size="2048" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/ECHO_BACK_MSG_DATA.h">
<Members>
<DataMember name="eb_header" offset="0">
<TypeOrTypeRef typeName="ECHO_BACK_MSG_HEADER" typeKind="Struct"/>
</DataMember>
<DataMember name="eb_msg_data" offset="6">
<Annotation>
<Comment>limit size of msg sent between tasks</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2042" cgen:expression="MAX_MSG_LENGTH-sizeof(ECHO_BACK_MSG_HEADER)"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ECHO_BACK_MSG_HEADER" size="6" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/ECHO_BACK_MSG_DATA.h">
<Members>
<DataMember name="eh_qid" offset="0">
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="eh_msg_type" offset="2">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="eh_msg_data_size" offset="4">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="EFF_SEQ_ADM_RPT_DATA" size="240" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Members>
<DataMember name="esard_ta" offset="0">
<Annotation>
<Comment>1 - 12 ta numbers per RPT</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="12" cgen:expression="ESARD_MAX_TA">
<TypeOrTypeRef typeName="EFF_SEQ_TA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="EFF_SEQ_INFO" size="52" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_INFO.h">
<Members>
<DataMember name="esi_ta" offset="0">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="esi_stk_symbol" offset="6">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="esi_text" offset="17">
<TypeOrTypeRef>
<Symbol size="27" cgen:expression="ESI_TEXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="esi_seq" offset="44">
<TypeOrTypeRef typeName="SEQNO" typeKind="Typedef"/>
</DataMember>
<DataMember name="esi_date" offset="46">
<TypeOrTypeRef typeName="JDATE" typeKind="Typedef"/>
</DataMember>
<DataMember name="esi_time" offset="48">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="EFF_SEQ_TA" size="20" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Members>
<DataMember name="est_ta_name" offset="0">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="est_flag" offset="6">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="est_filed_price" offset="8">
<Annotation>
<Comment>alignment issue: see pragma if better C++</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="est_seq" offset="12">
<Annotation>
<Comment>effective seq and time assigned by stk</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="est_date" offset="14">
<Annotation>
<Comment>julian date</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="est_time" offset="16">
<Annotation>
<Comment>time in hundreds of sec</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="EFF_SEQ_UPLOAD_PARAMS" size="18" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<Members>
<DataMember name="esup_when" offset="0">
<Annotation>
<Comment>one of EffSeqUploadWhen</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="esup_order_types" offset="2">
<Annotation>
<Comment>combination of order type flags (LMT,AON,LOC,STP,STP_LMT,MKT,TICK_S)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_LMT"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="esup_flags" offset="4">
<Annotation>
<Comment>combination of EffSeqUploadFlags</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="ESUF_FILED_TICK_S_ONLY"/>
<Bit constantName="ESUF_ELECTED_STP_LMT_ONLY"/>
<Bit constantName="ESUF_ELECTED_STP_ONLY"/>
<Bit constantName="ESUF_DELTA_ONLY"/>
<Bit constantName="ESUF_GTC_ONLY"/>
<Bit constantName="ESUF_UPLOAD_ON"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="esup_stk" offset="6">
<Annotation>
<Comment>stk name (space padded, no null.)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ENV_XREF" size="288" cgen:file="/mnt/pos.shrb/include/events/ENV_XREF.h">
<Members>
<DataMember name="tx_env_name" offset="0">
<TypeOrTypeRef>
<Symbol size="32"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="tx_env_value" offset="32">
<TypeOrTypeRef>
<Symbol size="256"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="EOD_ADM_MSG" size="">
<Members/>
</Struct>
<Struct name="EOD_ADM_RPT_DATA" size="240" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Members>
<DataMember name="eard_ta" offset="0">
<Annotation>
<Comment>1 - 15 ta numbers involved</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="15" cgen:expression="EARD_MAX_TA">
<TypeOrTypeRef typeName="EOD_TA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="EOD_TA" size="16" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Members>
<DataMember name="et_ta_name" offset="0">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="et_filed_price" offset="6">
<Annotation>
<Comment>alignment issue: see pragma if better C++</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="et_filed_date" offset="10">
<TypeOrTypeRef typeName="JDATE" typeKind="Typedef"/>
</DataMember>
<DataMember name="et_filed_time" offset="12">
<TypeOrTypeRef typeName="HRMINSEC" typeKind="Typedef"/>
</DataMember>
<DataMember name="et_flag" offset="15">
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="ES_PERM_FILED"/>
<Bit constantName="ES_FILED_TICK"/>
<Bit constantName="ES_ELECTED_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Enumeration name="eqa_state" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="eqa_on"/>
<EnumeratorRef name="eqa_assisted_quote"/>
<EnumeratorRef name="eqa_prio1"/>
<EnumeratorRef name="eqa_prio2"/>
<EnumeratorRef name="eqa_stage1"/>
<EnumeratorRef name="eqa_stage2"/>
</Enumeration>
<Typedef name="exe_invocation" size="256">
<TypeOrTypeRef>
<Symbol size="256"/>
</TypeOrTypeRef>
</Typedef>
<Typedef name="exe_origin" size="512">
<TypeOrTypeRef>
<Symbol size="512"/>
</TypeOrTypeRef>
</Typedef>
<Struct name="EXE_RPT" size="220" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Members>
<DataMember name="ex_print" offset="0">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="ex_qty" offset="4">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="ex_extype" offset="8">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="EXT_BRK_OK"/>
<Bit constantName="EXT_IND_RPT"/>
<Bit constantName="EXT_GRP_RPT"/>
<Bit constantName="EXT_CXL"/>
<Bit constantName="EXT_DEL"/>
<Bit constantName="EXT_DROP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ex_tanum" offset="10">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ex_ordtype" offset="16">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_STP"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ex_ordprice" offset="20">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ex_exprice" offset="24">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ex_conds" offset="28">
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="EX_XCH"/>
<Bit constantName="T_FILED"/>
<Bit constantName="P_FILED"/>
<Bit constantName="OPG"/>
<Bit constantName="O_DUP"/>
<Bit constantName="GTC"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ex_mds_badge" offset="30">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ex_flags" offset="32">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="EXF_AMEX"/>
<Bit constantName="EXF_STOP_SMKT_FLASH"/>
<Bit constantName="EXF_STOP_BMKT_FLASH"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ex_cross_info" offset="36">
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="CI_COUNT">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ex_gvcnt" offset="64">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ex_gv" offset="68">
<TypeOrTypeRef>
<Array numElements="10" cgen:expression="MAX_GV">
<TypeOrTypeRef typeName="GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ex_prin_act" offset="188">
<TypeOrTypeRef typeName="PRIN_ACT" typeKind="Struct"/>
</DataMember>
<DataMember name="ex_str" offset="214">
<TypeOrTypeRef typeName="SUPPL_TRADE_RPT" typeKind="Struct"/>
</DataMember>
<Constants>
<Enumerator name="EXT_GRP_RPT" value="0" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>group report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_IND_RPT" value="1" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>individual report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_DROP" value="2" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>from display book only</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_DEL" value="3" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>delete from DB &amp; host</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_CXL" value="4" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>back to member firm too</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_BRK_OK" value="5" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>OK to break mkt ords</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_BLK_RPT" value="6" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>Block rpt (of stps)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_OPENING" value="7" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>opening block report</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXT_DROP_OK" value="8" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>OK to drop</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXE_STP_RPT" value="9" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>stop report (initiated in MKT)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EX_COM" value="10" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>commission</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EX_NCOM" value="11" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>no commission</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EX_XCH" value="12" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>X clearing house</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EX_OK" value="13" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>stroke ok</Comment>
</Annotation>
</Enumerator>
<Enumerator name="EXE_OPG" value="14" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Annotation>
<Comment>opening flag for PROK checks</Comment>
</Annotation>
</Enumerator>
</Constants>
<NestedType>
<Typedef name="SUPPL_TRADE_RPT" size="6">
<TypeOrTypeRef typeName="SUPPL_TRADE_RPT" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="EXT_GRP_RPT"/>
<EnumeratorRef name="EXT_IND_RPT"/>
<EnumeratorRef name="EXT_DROP"/>
<EnumeratorRef name="EXT_DEL"/>
<EnumeratorRef name="EXT_CXL"/>
<EnumeratorRef name="EXT_BRK_OK"/>
<EnumeratorRef name="EXT_BLK_RPT"/>
<EnumeratorRef name="EXT_OPENING"/>
<EnumeratorRef name="EXT_DROP_OK"/>
<EnumeratorRef name="EXE_STP_RPT"/>
<EnumeratorRef name="EX_COM"/>
<EnumeratorRef name="EX_NCOM"/>
<EnumeratorRef name="EX_XCH"/>
<EnumeratorRef name="EX_OK"/>
<EnumeratorRef name="EXE_OPG"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Typedef name="exe_version" size="64">
<TypeOrTypeRef>
<Symbol size="64"/>
</TypeOrTypeRef>
</Typedef>
<Struct name="EXE_XREF" size="840" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/EXE_XREF.h">
<Members>
<DataMember name="tx_invocation" offset="0">
<TypeOrTypeRef typeName="exe_invocation" typeKind="Typedef"/>
</DataMember>
<DataMember name="tx_version" offset="256">
<TypeOrTypeRef typeName="exe_version" typeKind="Typedef"/>
</DataMember>
<DataMember name="tx_origin" offset="320">
<TypeOrTypeRef typeName="exe_origin" typeKind="Typedef"/>
</DataMember>
<DataMember name="tx_pid" offset="832">
<TypeOrTypeRef typeName="pid_t" typeKind="Typedef"/>
</DataMember>
<DataMember name="tx_ppid" offset="836">
<TypeOrTypeRef typeName="pid_t" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="FBS_P" size="11" cgen:file="/mnt/pos.shrb/include/events/FBS.h">
<TypeOrTypeRef typeName="FBS" typeKind="Struct"/>
</Typedef>
<Struct name="FBS" size="11" cgen:file="/mnt/pos.shrb/include/events/FBS.h">
<Members>
<DataMember name="fb_firm" offset="0">
<Annotation>
<Comment>orig. member firm. ascii abbrev.</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="fb_branch" offset="4">
<Annotation>
<Comment>originating branch. ascii code.</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="3" cgen:expression="BR_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="fb_sequence" offset="7">
<Annotation>
<Comment># identifies this order</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="SEQ_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="BR_SIZE" value="0"/>
<Enumerator name="SEQ_SIZE" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="BR_SIZE"/>
<EnumeratorRef name="SEQ_SIZE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Enumeration name="field" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="none"/>
<EnumeratorRef name="dll"/>
<EnumeratorRef name="open"/>
<EnumeratorRef name="lastsale"/>
<EnumeratorRef name="quote"/>
<EnumeratorRef name="freeze"/>
<EnumeratorRef name="rptsts"/>
<EnumeratorRef name="quote_hi"/>
<EnumeratorRef name="eqa"/>
<EnumeratorRef name="mmp"/>
<EnumeratorRef name="open_cap"/>
<EnumeratorRef name="flash_card"/>
<EnumeratorRef name="autoquote"/>
<EnumeratorRef name="rnp"/>
<EnumeratorRef name="auto_exec"/>
<EnumeratorRef name="xpress_quote"/>
<EnumeratorRef name="late_to_close"/>
</Enumeration>
<Struct name="FILE_DATE_TIME_INFO" size="28" cgen:file="/mnt/pos.shrb/include/events/FILE_DATE_TIME_INFO.h">
<Members>
<DataMember name="fdti_text" offset="0">
<TypeOrTypeRef>
<Symbol size="22" cgen:expression="FDTI_TEXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="fdti_date" offset="22">
<TypeOrTypeRef typeName="JDATE" typeKind="Typedef"/>
</DataMember>
<DataMember name="fdti_time" offset="24">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="FILE_ELECT_FLAGS" size="2" cgen:file="/mnt/pos.shrb/include/events/FILE_ELECT_FLAGS.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Struct name="FIND_ORDERS" size="20" cgen:file="/mnt/pos.shrb/include/events/FIND_ORDERS.h">
<Members>
<DataMember name="fo_fbs" offset="0">
<Annotation>
<Comment>firm,branch,sequence</Comment>
</Annotation>
<TypeOrTypeRef typeName="FBS" typeKind="Struct"/>
</DataMember>
<DataMember name="fo_pgtype" offset="12">
<Annotation>
<Comment>page type, BUY, SELL.</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="fo_price" offset="16">
<Annotation>
<Comment>price or 0 for best price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="FIND_RSP" size="460" cgen:file="/mnt/pos.shrb/include/events/FIND_RSP.h">
<Members>
<DataMember name="fr_flags" offset="0">
<Annotation>
<Comment>announce the type of info. see below</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="unsigned char" size="1">
<Bit constantName="FR_MR_BELOW"/>
<Bit constantName="FR_MR_ABOVE"/>
<Bit constantName="FR_FBS_SCR"/>
<Bit constantName="FR_PAGE_SCR"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="fr_ocnt" offset="2">
<Annotation>
<Comment># of orders in array fr_orders[]</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="fr_pgtype" offset="4">
<Annotation>
<Comment>page type. see param.h. valid are * AON,STP,LMT,MKT,TICK_S ored with BUY,SELL</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_AUTOEX"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="fr_prhead" offset="8">
<TypeOrTypeRef typeName="PRICE_TOTS" typeKind="Struct"/>
</DataMember>
<DataMember name="fr_orders" offset="44">
<Annotation>
<Comment>part of O_MAIN ordinfo for Disp</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="8" cgen:expression="N_PAGE_ORDERS">
<TypeOrTypeRef typeName="SUB_ORDER" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="N_PAGE_ORDERS" value="0"/>
<Enumerator name="FR_PAGE_SCR" value="1"/>
<Enumerator name="FR_FBS_SCR" value="2"/>
<Enumerator name="FR_MR_ABOVE" value="3"/>
<Enumerator name="FR_MR_BELOW" value="4"/>
</Constants>
<NestedType>
<Typedef name="SUB_ORDER" size="52">
<TypeOrTypeRef typeName="SUB_ORDER" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="N_PAGE_ORDERS"/>
<EnumeratorRef name="FR_PAGE_SCR"/>
<EnumeratorRef name="FR_FBS_SCR"/>
<EnumeratorRef name="FR_MR_ABOVE"/>
<EnumeratorRef name="FR_MR_BELOW"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="FOREIGN_ORDS" size="8" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<Members>
<DataMember name="fo_mpv" offset="0">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="fo_product_type" offset="4">
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="PRODUCT_TYPE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="fo_price_unit" offset="6">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="FOREIGN_ORDS" size="8" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<TypeOrTypeRef typeName="FOREIGN_ORDS" typeKind="Struct"/>
</Typedef>
<Enumeration name="frozen_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="notfrozen"/>
<EnumeratorRef name="frozen"/>
<EnumeratorRef name="frozen_blink"/>
<EnumeratorRef name="frozen_rpt_blink"/>
<EnumeratorRef name="unfreeze_rpt_blink"/>
</Enumeration>
<Struct name="FRZ_UNFRZ_TIMESTAMP_DATA" size="28" cgen:file="/mnt/pos.shrb/include/events/FRZ_UNFRZ_TIMESTAMP_DATA.h">
<Members>
<DataMember name="fu_type" offset="0">
<Annotation>
<Comment>E(xplicit), I(mplicit), U(nfreeze)</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="fu_date" offset="1">
<Annotation>
<Comment>Date</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="YYYYMMDD_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="fu_time" offset="9">
<Annotation>
<Comment>Time</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="HHMMSSSS_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="fu_symbol" offset="17">
<Annotation>
<Comment>Stock Symbol</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="SYMBOL_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="GIVEUP_P" size="12" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h">
<TypeOrTypeRef typeName="GIVEUP" typeKind="Struct"/>
</Typedef>
<Struct name="GIVEUP_SHRS" size="12" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h">
<Members>
<DataMember name="gv_shares" offset="0">
<Annotation>
<Comment>giveup amt in shares</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="gv_firm" offset="4">
<Annotation>
<Comment>contra member firm</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="gv_badge" offset="8">
<Annotation>
<Comment>coresponding badge #</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="GIVEUP" size="12" cgen:file="/mnt/pos.shrb/include/events/GIVEUP.h">
<Members>
<DataMember name="gv_qty" offset="0">
<Annotation>
<Comment>giveup quantity</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="gv_firm" offset="4">
<Annotation>
<Comment>contra member firm</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="gv_badge" offset="8">
<Annotation>
<Comment>coresponding badge #</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="GOV_REG_MSG" size="84" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h">
<Members>
<DataMember name="uh" offset="0">
<TypeOrTypeRef typeName="USER_HDR" typeKind="Struct"/>
</DataMember>
<DataMember name="prm" offset="20">
<TypeOrTypeRef typeName="PROC_REG_MSG" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="GovReg" size="512" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/gov.h">
<Members>
<DataMember name="m_procReg" offset="0">
<TypeOrTypeRef typeName="ProcReg" typeKind="Struct"/>
</DataMember>
<DataMember name="m_numOfProcIdentities" offset="28">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_procIdentities" offset="32">
<TypeOrTypeRef>
<Array numElements="20" cgen:expression="MAX_NUM_IDENTITIES">
<TypeOrTypeRef typeName="ProcIdentity" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="GQID" size="20">
<TypeOrTypeRef typeName="tagGQID" typeKind="Struct"/>
</Typedef>
<Struct name="GRP_CXL" size="76" cgen:file="/mnt/pos.shrb/include/events/GRP_CXL.h">
<Members>
<DataMember name="gc_flags" offset="0">
<TypeOrTypeRef>
<Mask name="int" size="4">
<Bit constantName="GC_CLR_ODD_LOT"/>
<Bit constantName="GC_STOP_SMKT_FLASH"/>
<Bit constantName="GC_STOP_BMKT_FLASH"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="gc_price" offset="4">
<Annotation>
<Comment>Price of orders...</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="gc_pgtype" offset="8">
<Annotation>
<Comment>The order type</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_AUTOEX"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="gc_count" offset="10">
<Annotation>
<Comment>Number of cancel requests</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="gc_tanums" offset="12">
<Annotation>
<Comment>TA's to be cancelled</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="8" cgen:expression="N_PAGE_ORDERS">
<TypeOrTypeRef>
<Symbol size="6"/>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="gc_pcxl_qtys" offset="60">
<Annotation>
<Comment>if != 0 do partial cancel</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="8" cgen:expression="N_PAGE_ORDERS">
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="GC_STOP_BMKT_FLASH" value="0"/>
<Enumerator name="GC_STOP_SMKT_FLASH" value="1"/>
<Enumerator name="GC_CLR_ODD_LOT" value="2"/>
<Enumerator name="GC_CAP_CXL_REPLACED" value="3"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="GC_STOP_BMKT_FLASH"/>
<EnumeratorRef name="GC_STOP_SMKT_FLASH"/>
<EnumeratorRef name="GC_CLR_ODD_LOT"/>
<EnumeratorRef name="GC_CAP_CXL_REPLACED"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="HOST_CONFIG_DATA" size="836" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Members>
<DataMember name="cd_seqno" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="cd_time" offset="4">
<TypeOrTypeRef>
<Array numElements="7">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="cd_info" offset="18">
<TypeOrTypeRef typeName="HOST_WS_INFO" typeKind="Struct"/>
</DataMember>
<DataMember name="cd_stk_cnt" offset="48">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="cd_stkinfo" offset="50">
<TypeOrTypeRef>
<Array numElements="28" cgen:expression="N_STOCKS">
<TypeOrTypeRef typeName="HOST_STK_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="HOST_FOREIGN_ORDS" size="8" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<Members>
<DataMember name="hfo_mpv" offset="0">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MPV_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="hfo_product_type" offset="4">
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="PRODUCT_TYPE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="hfo_price_unit" offset="6">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="hfo_price_type" offset="7">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="HOST_FOREIGN_ORDS" size="8" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<TypeOrTypeRef typeName="HOST_FOREIGN_ORDS" typeKind="Struct"/>
</Typedef>
<Struct name="HOST_PRICE_BREAKS" size="8" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<Members>
<DataMember name="pb_bp" offset="0">
<TypeOrTypeRef>
<Array numElements="3">
<TypeOrTypeRef typeName="SHORT_PRICE" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pb_spare" offset="6">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="HOST_PRICE_BREAKS" size="8" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<TypeOrTypeRef typeName="HOST_PRICE_BREAKS" typeKind="Struct"/>
</Typedef>
<Typedef name="HOST_PRICE_INFO" size="8" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<TypeOrTypeRef typeName="HOST_PRICE_INFO" typeKind="Union"/>
</Typedef>
<Union name="HOST_PRICE_INFO" size="8" discriminator="undefined" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<Members>
<DataMember name="hpi_price_breaks" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="HOST_PRICE_BREAKS" typeKind="Struct"/>
</DataMember>
<DataMember name="hpi_foreign_ords" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="HOST_FOREIGN_ORDS" typeKind="Struct"/>
</DataMember>
</Members>
</Union>
<Struct name="HOST_STK_INFO" size="28" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<Members>
<DataMember name="hsi_symbol" offset="0">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="hsi_grp_ta" offset="11">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="hsi_ssr_flag" offset="17">
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="hsi_tr_unit" offset="18">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="hsi_price_info" offset="20">
<TypeOrTypeRef typeName="HOST_PRICE_INFO" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="HOST_STK_INFO" size="28" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<TypeOrTypeRef typeName="HOST_STK_INFO" typeKind="Struct"/>
</Typedef>
<Struct name="HOST_WS_INFO" size="30" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<Members>
<DataMember name="ws_entity" offset="0">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="ENTITY_SZ"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ws_pwd" offset="8">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="PWD_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ws_group_nd_times" offset="16">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ws_flag" offset="18">
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="cntgncy_entity" offset="19">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="ENTITY_SZ"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ws_spares" offset="27">
<TypeOrTypeRef>
<Symbol size="3"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="HOST_WS_INFO" size="30" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<TypeOrTypeRef typeName="HOST_WS_INFO" typeKind="Struct"/>
</Typedef>
<Typedef name="HRMINSEC" size="3">
<TypeOrTypeRef>
<Array numElements="3">
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</Array>
</TypeOrTypeRef>
</Typedef>
<Typedef name="in_addr_t" size="4">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Struct name="in_addr" size="4">
<Members>
<DataMember name="s_addr" offset="0">
<TypeOrTypeRef typeName="in_addr_t" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="IN_ADMIN" size="200" cgen:file="/mnt/pos.shrb/include/events/IN_ADMIN.h">
<Members>
<DataMember name="ia_aid" offset="0">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ia_stock" offset="5">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ia_type" offset="16">
<Annotation>
<Comment>ie: ADMIN or PADMIN</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="ia_pss_time" offset="18">
<Annotation>
<Comment>PSS time stamp of rcvd. admin</Comment>
</Annotation>
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="ia_org_market" offset="20">
<TypeOrTypeRef typeName="MARKET_CENTER_P" typeKind="Typedef"/>
</DataMember>
<DataMember name="ia_dst_market" offset="29">
<TypeOrTypeRef typeName="MARKET_CENTER_P" typeKind="Typedef"/>
</DataMember>
<DataMember name="ia_adm_info" offset="38">
<Annotation>
<Comment>text of adm msg</Comment>
</Annotation>
<TypeOrTypeRef typeName="ADM_INFO_P" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="IN_CANCEL" size="2044" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<Members>
<DataMember name="rep_order" offset="0">
<Annotation>
<Comment>if cxl w/rep: this is the replacment</Comment>
</Annotation>
<TypeOrTypeRef typeName="ORDER" typeKind="Struct"/>
</DataMember>
<DataMember name="cxl_order" offset="116">
<Annotation>
<Comment>cxl: ok for simple cxl and cxl w/rep</Comment>
</Annotation>
<TypeOrTypeRef typeName="ORDER" typeKind="Struct"/>
</DataMember>
<DataMember name="ord_text" offset="232">
<Annotation>
<Comment>text in case book decides to print</Comment>
</Annotation>
<TypeOrTypeRef typeName="O_TXT" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="IN_COMMITMENT" size="132" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h">
<Members>
<DataMember name="ic_cid" offset="0">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ic_stock" offset="5">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ic_awo_tanum" offset="16">
<Annotation>
<Comment>PSS's ta# for AWO processing</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ic_gv_cnt" offset="22">
<Annotation>
<Comment>gu count</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ic_det_gv" offset="24">
<Annotation>
<Comment>array of gv's for rcvd REPORT</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="MAX_ITS_EXE_GV">
<TypeOrTypeRef typeName="DET_GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ic_type" offset="54">
<Annotation>
<Comment>See below</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="ic_price" offset="56">
<Annotation>
<Comment>Lmt price, if LMT</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ic_qty" offset="60">
<Annotation>
<Comment>in round lots</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="ic_pss_time" offset="62">
<Annotation>
<Comment>PSS time stamp of incomingcommit</Comment>
</Annotation>
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="ic_expiration_time" offset="64">
<Annotation>
<Comment>Host generated expiration time</Comment>
</Annotation>
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="ic_resp_time" offset="66">
<Annotation>
<Comment>time of execution response</Comment>
</Annotation>
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="ic_org_market" offset="68">
<TypeOrTypeRef typeName="MARKET_CENTER_P" typeKind="Typedef"/>
</DataMember>
<DataMember name="ic_dst_market" offset="77">
<TypeOrTypeRef typeName="MARKET_CENTER_P" typeKind="Typedef"/>
</DataMember>
<DataMember name="ic_conds" offset="86">
<Annotation>
<Comment>See below (Block?)</Comment>
</Annotation>
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="ic_pa" offset="87">
<TypeOrTypeRef typeName="PRIN_ACT_P" typeKind="Typedef"/>
</DataMember>
<DataMember name="ic_mad" offset="114">
<Annotation>
<Comment>misc data for awos</Comment>
</Annotation>
<TypeOrTypeRef typeName="MISC_AWO_DATA_P" typeKind="Typedef"/>
</DataMember>
<Constants>
<Enumerator name="ITS_BUY" value="0"/>
<Enumerator name="ITS_SELL" value="1"/>
<Enumerator name="ITS_SSHRT" value="2"/>
<Enumerator name="ITS_SSEX" value="3"/>
<Enumerator name="ITS_LMT" value="4"/>
<Enumerator name="ITS_MKT" value="5"/>
<Enumerator name="ITS_CXL" value="6"/>
<Enumerator name="IC_BLOCK" value="7"/>
<Enumerator name="IC_DUP" value="8"/>
<Enumerator name="IC_EXPIR" value="9" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h">
<Annotation>
<Comment>Expired</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IC_TA_PEND" value="10" cgen:file="/mnt/pos.shrb/include/events/IN_COMMITMENT.h">
<Annotation>
<Comment>AWO rel: waiting for TANUM</Comment>
</Annotation>
</Enumerator>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="ITS_BUY"/>
<EnumeratorRef name="ITS_SELL"/>
<EnumeratorRef name="ITS_SSHRT"/>
<EnumeratorRef name="ITS_SSEX"/>
<EnumeratorRef name="ITS_LMT"/>
<EnumeratorRef name="ITS_MKT"/>
<EnumeratorRef name="ITS_CXL"/>
<EnumeratorRef name="IC_BLOCK"/>
<EnumeratorRef name="IC_DUP"/>
<EnumeratorRef name="IC_EXPIR"/>
<EnumeratorRef name="IC_TA_PEND"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="IN_OARS" size="40" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Members>
<DataMember name="io_tanum" offset="0">
<Annotation>
<Comment>oars turnaround # in ascii</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="io_time" offset="6">
<Annotation>
<Comment>time of ?</Comment>
</Annotation>
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="io_paired" offset="8">
<Annotation>
<Comment>oars paired qty</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="io_imbal" offset="12">
<Annotation>
<Comment>oars imbalance qty</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="io_side" offset="16">
<Annotation>
<Comment>side of oars imbalance. values are BUY, SELL defined in param.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="char" size="1">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="io_flags" offset="18">
<Annotation>
<Comment>values appear below</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="IO_CLOSE"/>
<Bit constantName="IO_TIME"/>
<Bit constantName="IO_ODD_LOT"/>
<Bit constantName="IO_REOPEN"/>
<Bit constantName="IO_FINAL_STATUS"/>
<Bit constantName="IO_AFTER_FREEZE"/>
<Bit constantName="IO_UNFRZ_STATUS"/>
<Bit constantName="IO_FRZ_STATUS"/>
<Bit constantName="IO_STATUS"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="io_lopg_cxl" offset="20">
<Annotation>
<Comment>lmt opg cxl qty (set only by book)</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="io_pri_filter" offset="28">
<Annotation>
<Comment>high sell, low buy for price filter</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="io_sidecar_price" offset="36">
<Annotation>
<Comment>sidecar execution price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<Constants>
<Enumerator name="IO_NONE" value="0" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>no IN_OARS msg received yet</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IO_STATUS" value="1" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>periodic status msg</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IO_FRZ_STATUS" value="2" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>status at OARS freeze</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IO_UNFRZ_STATUS" value="3" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>status at OARS unfreeze</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IO_AFTER_FREEZE" value="4" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>status after OARS freeze</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IO_FINAL_STATUS" value="5" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>final status -- OARS done</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IO_REOPEN" value="6" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>announces reopening of OARS</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IO_ODD_LOT" value="7" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>there is odd_lot accumulation in moc</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IO_TIME" value="8" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>found time hh:mm</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IO_CLOSE" value="9" cgen:file="/mnt/pos.shrb/include/events/IN_OARS.h">
<Annotation>
<Comment>found CLOSE in the text</Comment>
</Annotation>
</Enumerator>
<Enumerator name="IO_SIDECAR_REPORTABLE" value="10"/>
<Enumerator name="IO_SIDECAR_NONREPORTABLE" value="11"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="IO_NONE"/>
<EnumeratorRef name="IO_STATUS"/>
<EnumeratorRef name="IO_FRZ_STATUS"/>
<EnumeratorRef name="IO_UNFRZ_STATUS"/>
<EnumeratorRef name="IO_AFTER_FREEZE"/>
<EnumeratorRef name="IO_FINAL_STATUS"/>
<EnumeratorRef name="IO_REOPEN"/>
<EnumeratorRef name="IO_ODD_LOT"/>
<EnumeratorRef name="IO_TIME"/>
<EnumeratorRef name="IO_CLOSE"/>
<EnumeratorRef name="IO_SIDECAR_REPORTABLE"/>
<EnumeratorRef name="IO_SIDECAR_NONREPORTABLE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="IN_OLA" size="16" cgen:file="/mnt/pos.shrb/include/events/IN_OLA.h">
<Members>
<DataMember name="ola_seq" offset="0">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ola_qty" offset="4">
<TypeOrTypeRef typeName="OLA_QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="ola_sign" offset="8">
<TypeOrTypeRef typeName="OLA_SIGN" typeKind="Typedef"/>
</DataMember>
<DataMember name="ola_time" offset="12">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="IN_ORDER" size="1924" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<Members>
<DataMember name="in_omain" offset="0">
<TypeOrTypeRef typeName="O_MAIN" typeKind="Typedef"/>
</DataMember>
<DataMember name="in_okey" offset="68">
<TypeOrTypeRef typeName="O_KEY" typeKind="Struct"/>
</DataMember>
<DataMember name="in_oext" offset="80">
<TypeOrTypeRef typeName="O_EXT" typeKind="Struct"/>
</DataMember>
<DataMember name="in_pri_time" offset="91">
<Annotation>
<Comment>priority insert time# (only)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="TIME_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="in_pri_date" offset="99">
<Annotation>
<Comment>priority insert date# (only)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="DATE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="in_pri_ta" offset="107">
<Annotation>
<Comment>priority insert ta# (only)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="in_otxt" offset="114">
<Annotation>
<Comment>order text valid with cancels and priority inserts</Comment>
</Annotation>
<TypeOrTypeRef typeName="O_TXT" typeKind="Struct"/>
</DataMember>
<Constants>
<Enumerator name="OB" value="0" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>or better order</Comment>
</Annotation>
</Enumerator>
<Enumerator name="RPTSTS_MSG" value="1" cgen:file="/mnt/pos.shrb/include/misc/param.h">
<Annotation>
<Comment>report status msg exist for this order -------------------------------------------------------------------</Comment>
</Annotation>
</Enumerator>
</Constants>
<NestedType>
<Typedef name="O_MAIN" size="68">
<TypeOrTypeRef typeName="_o_main" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Typedef name="O_KEY" size="12">
<TypeOrTypeRef typeName="O_KEY" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Typedef name="O_EXT" size="11">
<TypeOrTypeRef typeName="O_EXT" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Typedef name="O_TXT" size="1810">
<TypeOrTypeRef typeName="O_TXT" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="OB"/>
<EnumeratorRef name="RPTSTS_MSG"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="IN_P_OPEN" size="52" cgen:file="/mnt/pos.shrb/include/events/IN_P_OPEN.h">
<Members>
<DataMember name="ipo_pid" offset="0">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ipo_stock" offset="5">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ipo_type" offset="16">
<Annotation>
<Comment>see flags below: CLX, IND, 2LK</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="ipo_pss_time" offset="18">
<Annotation>
<Comment>PSS time stamp of rcvd. admin</Comment>
</Annotation>
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="ipo_org_market" offset="20">
<Annotation>
<Comment>see def. above</Comment>
</Annotation>
<TypeOrTypeRef typeName="MARKET_CENTER_P" typeKind="Typedef"/>
</DataMember>
<DataMember name="ipo_dst_market" offset="29">
<Annotation>
<Comment>not used for now: ALL implied</Comment>
</Annotation>
<TypeOrTypeRef typeName="MARKET_CENTER_P" typeKind="Typedef"/>
</DataMember>
<DataMember name="ipo_b_price" offset="40">
<Annotation>
<Comment>best buy price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ipo_o_price" offset="44">
<Annotation>
<Comment>best offer price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ipo_o_qty" offset="48">
<Annotation>
<Comment>Qty. Used for 2lk</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="INFO_DATA" size="240" cgen:file="/mnt/pos.shrb/include/events/SIGNAL_DATA.h">
<TypeOrTypeRef typeName="INFO_DATA" typeKind="Union"/>
</Typedef>
<Union name="INFO_DATA" size="240" discriminator="undefined" cgen:file="/mnt/pos.shrb/include/events/SIGNAL_DATA.h">
<Members>
<DataMember name="dummy" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="ALIGN" typeKind="Typedef"/>
</DataMember>
<DataMember name="info_buffer" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef>
<Symbol size="240" cgen:expression="MAX_MSG_INFO_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Union>
<NativeType name="int" size="4"/>
<Struct name="INTRNL_DATA_EXPANDED" size="14" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<Members>
<DataMember name="id_dupe_flag" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="id_post" offset="1">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="id_tee" offset="3">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="id_dev_type" offset="4">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="id_dev_num" offset="5">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="id_char_ptr" offset="6">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="id_principal_agency" offset="8">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="id_oldtype" offset="9">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="id_hundredths_secs" offset="11">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="id_filler" offset="13">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="INTRNL_DATA_EXPANDED" size="14" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<TypeOrTypeRef typeName="INTRNL_DATA_EXPANDED" typeKind="Struct"/>
</Typedef>
<Struct name="IS_HEAD" size="21" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Members>
<DataMember name="ih_stx" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ih_exch_id" offset="1">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ih_mtype" offset="2">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ih_time" offset="4">
<TypeOrTypeRef>
<Symbol size="6"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ih_poss_dupe" offset="10">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ih_post" offset="11">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ih_tee" offset="13">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ih_devtype" offset="14">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ih_devnum" offset="15">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ih_spare" offset="16">
<TypeOrTypeRef>
<Symbol size="5"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="IS_HEAD" size="21" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<TypeOrTypeRef typeName="IS_HEAD" typeKind="Struct"/>
</Typedef>
<Struct name="ITS_ADMIN_DATA" size="201" cgen:file="/mnt/pos.shrb/include/events/ITS_ADMIN_DATA.h">
<Members>
<DataMember name="m_textHeader" offset="0">
<TypeOrTypeRef typeName="ITS_TEXT_HEADER" typeKind="Struct"/>
</DataMember>
<DataMember name="m_brokerID" offset="17">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="ITS_BROKER_ID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_security" offset="21">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="ITS_STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_destination" offset="32">
<TypeOrTypeRef>
<Symbol size="3" cgen:expression="ITS_AD_DESTINATION_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_destBrokerID" offset="35">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="ITS_BROKER_ID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_textLength" offset="39">
<TypeOrTypeRef>
<Symbol size="3" cgen:expression="ITS_AD_TEXT_LENGTH_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_text" offset="42">
<TypeOrTypeRef>
<Symbol size="159" cgen:expression="ITS_AD_TEXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_AWO_RSP" size="12" cgen:file="/mnt/pos.shrb/include/events/ITS_AWO_RSP.h">
<Members>
<DataMember name="iar_cid" offset="0">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="iar_tanum" offset="5">
<Annotation>
<Comment>PSS's ta# for AWO processing</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="iar_posdup" offset="11">
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="AWO_POSDUP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_BLOCK_MKT_MSG" size="1" cgen:file="/mnt/pos.shrb/include/misc/config.h">
<Members>
<DataMember name="ExchangeCode" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_CANCEL_DATA" size="21" cgen:file="/mnt/pos.shrb/include/events/ITS_CANCEL_DATA.h">
<Members>
<DataMember name="m_textHeader" offset="0">
<TypeOrTypeRef typeName="ITS_TEXT_HEADER" typeKind="Struct"/>
</DataMember>
<DataMember name="m_brokerID" offset="17">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="ITS_BROKER_ID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_CHANGE_EXP_TYPE_DATA" size="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/ITS_CHANGE_EXP_TYPE_DATA.h">
<Members>
<DataMember name="m_cItsExpType" offset="0">
<TypeOrTypeRef typeName="ItsExpirationType" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_COMMITMENT_DATA" size="126" cgen:file="/mnt/pos.shrb/include/events/ITS_COMMITMENT_DATA.h">
<Members>
<DataMember name="m_textHeader" offset="0">
<TypeOrTypeRef typeName="ITS_TEXT_HEADER" typeKind="Struct"/>
</DataMember>
<DataMember name="m_security" offset="17">
<Annotation>
<Comment>stk name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="ITS_STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_expirationCode" offset="28">
<Annotation>
<Comment>always ITS_CD_1MIN_EXPIRATION</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_agencyCode" offset="29">
<Annotation>
<Comment>always ' '</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_blockTradeIndicator" offset="30">
<Annotation>
<Comment>one of ItsBlockTradeIndicator</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_brokerID" offset="31">
<Annotation>
<Comment>broker id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="ITS_BROKER_ID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_tradeData" offset="35">
<TypeOrTypeRef typeName="ITS_TRADE_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="m_numGiveups" offset="59">
<Annotation>
<Comment>always '01'</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="ITS_NUM_GIVEUPS_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_giveups" offset="61">
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="ITS_CD_MAX_GIVEUPS">
<TypeOrTypeRef typeName="ITS_GIVEUP_DATA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_CXL_RSP" size="5" cgen:file="/mnt/pos.shrb/include/events/ITS_CXL_RSP.h">
<Members>
<DataMember name="ic_cid" offset="0">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_EXE_REJ_DATA" size="2" cgen:file="/mnt/pos.shrb/include/events/ITS_EXE_REJ_DATA.h">
<Members>
<DataMember name="m_error" offset="0">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_EXE_REQ_DATA" size="112" cgen:file="/mnt/pos.shrb/include/events/ITS_EXE_REQ_DATA.h">
<Members>
<DataMember name="m_flags" offset="0">
<Annotation>
<Comment>a combination of IER_FILE_AND_ELECT, IER_BLOCKING, or none</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="IER_BLOCKING"/>
<Bit constantName="IER_FILE_AND_ELECT"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_cid" offset="2">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_price" offset="8">
<Annotation>
<Comment>Price at which to execute</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_qty" offset="12">
<Annotation>
<Comment>The qty of the commitment to execute.</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_printQty" offset="16">
<Annotation>
<Comment>The quantity to print to Tape.</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_badge" offset="20">
<Annotation>
<Comment>The Broker's badge i.d.</Comment>
</Annotation>
<TypeOrTypeRef typeName="BADGEID" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_giveUpsCount" offset="22">
<Annotation>
<Comment>The # of give-ups in m_gv</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_giveUps" offset="24">
<Annotation>
<Comment>The contra give-ups</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="IER_MAX_GIVE_UPS">
<TypeOrTypeRef typeName="GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_prinAct" offset="84">
<Annotation>
<Comment>Principal activity info for AWO.</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRIN_ACT_P" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_EXECUTION_DATA" size="112" cgen:file="/mnt/pos.shrb/include/events/ITS_EXECUTION_DATA.h">
<Members>
<DataMember name="m_textHeader" offset="0">
<TypeOrTypeRef typeName="ITS_TEXT_HEADER" typeKind="Struct"/>
</DataMember>
<DataMember name="m_brokerID" offset="17">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="ITS_BROKER_ID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_tradeData" offset="21">
<TypeOrTypeRef typeName="ITS_TRADE_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="m_numGiveups" offset="45">
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="ITS_NUM_GIVEUPS_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_giveups" offset="47">
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="ITS_ED_MAX_GIVEUPS">
<TypeOrTypeRef typeName="ITS_GIVEUP_DATA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_GIVEUP_DATA" size="13" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Members>
<DataMember name="m_name" offset="0">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="ITS_GIVEUP_NAME_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_size" offset="4">
<TypeOrTypeRef>
<Symbol size="9" cgen:expression="ITS_SIZE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_NA_RSP" size="5" cgen:file="/mnt/pos.shrb/include/events/ITS_NA_RSP.h">
<Members>
<DataMember name="ia_cid" offset="0">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_NAME_CHANGE_DATA" size="470" cgen:file="/mnt/pos.shrb/include/events/ITS_NAME_CHANGE_DATA.h">
<Members>
<DataMember name="m_textHeader" offset="0">
<TypeOrTypeRef typeName="ITS_TEXT_HEADER" typeKind="Struct"/>
</DataMember>
<DataMember name="m_security" offset="17">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="ITS_STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_tradeData" offset="28">
<TypeOrTypeRef typeName="ITS_TRADE_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="m_numGiveups" offset="52">
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="ITS_NUM_GIVEUPS_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_giveups" offset="54">
<TypeOrTypeRef>
<Array numElements="32" cgen:expression="ITS_NCD_MAX_GIVEUPS">
<TypeOrTypeRef typeName="ITS_GIVEUP_DATA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_NC_REQ_DATA" size="120" cgen:file="/mnt/pos.shrb/include/events/ITS_NC_REQ_DATA.h">
<Members>
<DataMember name="m_cid" offset="0">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_giveUpsCount" offset="6">
<Annotation>
<Comment>The # of give-ups in m_gv</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_giveUps" offset="8">
<Annotation>
<Comment>The contra give-ups</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="INR_MAX_GIVE_UPS">
<TypeOrTypeRef typeName="GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_prinAct" offset="92">
<Annotation>
<Comment>Principal activity for AWO or NC admin.</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRIN_ACT_P" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_OPENING_RPT_DATA" size="91" cgen:file="/mnt/pos.shrb/include/events/ITS_OPENING_RPT_DATA.h">
<Members>
<DataMember name="m_textHeader" offset="0">
<TypeOrTypeRef typeName="ITS_TEXT_HEADER" typeKind="Struct"/>
</DataMember>
<DataMember name="m_security" offset="17">
<Annotation>
<Comment>stk name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="ITS_STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_agencyCode" offset="28">
<Annotation>
<Comment>always ' '</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_commitmentBrokerID" offset="29">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="ITS_BROKER_ID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_executionBrokerID" offset="33">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="ITS_BROKER_ID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_tradeData" offset="37">
<TypeOrTypeRef typeName="ITS_TRADE_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="m_numCommitmentGiveups" offset="61">
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="ITS_NUM_GIVEUPS_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_commitmentGiveup" offset="63">
<TypeOrTypeRef typeName="ITS_GIVEUP_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="m_numExecutionGiveups" offset="76">
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="ITS_NUM_GIVEUPS_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_executionGiveup" offset="78">
<TypeOrTypeRef typeName="ITS_GIVEUP_DATA" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_SP_FIRMS" size="9" cgen:file="/mnt/pos.shrb/include/events/ITS_SP_FIRMS.h">
<Members>
<DataMember name="isf_flags" offset="0">
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="WS_AWO_ON"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="isf_trd_spsym" offset="1">
<Annotation>
<Comment>specialist trade firm</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="isf_clr_spsym" offset="5">
<Annotation>
<Comment>specialist clearing firm</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_SYNC_REQ_DATA" size="8" cgen:file="/mnt/pos.shrb/include/events/ITS_SYNC_REQ_DATA.h">
<Members>
<DataMember name="m_side" offset="0">
<Annotation>
<Comment>BUY or SELL, the side that BOOK is on</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_price" offset="4">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_SYNC_RSP_DATA" size="4" cgen:file="/mnt/pos.shrb/include/events/ITS_SYNC_RSP_DATA.h">
<Members>
<DataMember name="m_bookQty" offset="0">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_TEXT_HEADER" size="17" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Members>
<DataMember name="m_type" offset="0">
<Annotation>
<Comment>One of ItsMessageType</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_subtype" offset="1">
<Annotation>
<Comment>One of ItsMessageSubtype</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_length" offset="2">
<Annotation>
<Comment>byte length of message</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="3" cgen:expression="ITS_TH_LENGTH_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_id" offset="5">
<Annotation>
<Comment>Admin ID or Commitment ID</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="ITS_ID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_destinationMCID" offset="10">
<Annotation>
<Comment>One of ItsMarketCenterID</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_reserved" offset="11">
<Annotation>
<Comment>reserved space, always blanks</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="ITS_TH_RESERVED_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_TRADE_DATA" size="24" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Members>
<DataMember name="m_action" offset="0">
<Annotation>
<Comment>One of ItsAction</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_reserved" offset="1">
<Annotation>
<Comment>reserved, always '0'</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_size" offset="2">
<Annotation>
<Comment>size of the trade in shares</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="9" cgen:expression="ITS_SIZE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_priceDenominator" offset="11">
<Annotation>
<Comment>One of ItsPriceDenominator</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_price" offset="12">
<Annotation>
<Comment>price of the trade</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="12" cgen:expression="ITS_PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_VALIDATE_EXE_NL_REJ_DATA" size="2" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_NL_REJ_DATA.h">
<Members>
<DataMember name="m_error" offset="0">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_VALIDATE_EXE_REJ_DATA" size="2" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_REJ_DATA.h">
<Members>
<DataMember name="m_error" offset="0">
<Annotation>
<Comment>One of IVER_COMMITMENT_NOT_OPEN or IVER_BETTER_STOPPED</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_VALIDATE_EXE_REQ_DATA" size="16" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_REQ_DATA.h">
<Members>
<DataMember name="m_cid" offset="0">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_price" offset="8">
<Annotation>
<Comment>Price at which to execute</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_bookQty" offset="12">
<Annotation>
<Comment>The BOOK giveup qty, if any.</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_VALIDATE_EXE_RSP_DATA" size="24" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_RSP_DATA.h">
<Members>
<DataMember name="m_prompt_data" offset="0">
<TypeOrTypeRef typeName="PROMPT_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="m_warnings" offset="20">
<Annotation>
<Comment>Any combination of IVER_Warning</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="IVER_ELECTED_STPS_OPEN"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_VALIDATE_NC_REJ_DATA" size="2" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_NC_REJ_DATA.h">
<Members>
<DataMember name="m_error" offset="0">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_VALIDATE_NC_REQ_DATA" size="8" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_NC_REQ_DATA.h">
<Members>
<DataMember name="m_cid" offset="0">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_bookQty" offset="6">
<Annotation>
<Comment>The BOOK giveup qty, if any.</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="ITS_VALIDATE_NC_RSP_DATA" size="2" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_NC_RSP_DATA.h">
<Members>
<DataMember name="m_warnings" offset="0">
<Annotation>
<Comment>Any combination of IVNR_Warning</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="IVNR_ELECTED_STPS_OPEN"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Enumeration name="ItsExpirationType" size="4" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<EnumeratorRef name="ITS_EXPIRATION_30SEC"/>
<EnumeratorRef name="ITS_EXPIRATION_1MIN"/>
<EnumeratorRef name="ITS_EXPIRATION_2MIN"/>
</Enumeration>
<Typedef name="JDATE" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Struct name="KEY_STRUCT" size="4" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Members>
<DataMember name="ks_key" offset="0">
<Annotation>
<Comment>key typed eg: s1, s2, s3</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ks_func" offset="1">
<Annotation>
<Comment>function type eg: EXPAND, DELETE</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ks_data" offset="2">
<Annotation>
<Comment>data if any!</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="LAST_SALE_ADJUST" size="20" cgen:file="/mnt/pos.shrb/include/events/LAST_SALE_ADJUST.h">
<Members>
<DataMember name="lsa_tick" offset="0">
<Annotation>
<Comment>'+' or '-' or ' '</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="lsa_price" offset="4">
<Annotation>
<Comment>in 64ths</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="lsa_asof_date" offset="8">
<Annotation>
<Comment>julean date</Comment>
</Annotation>
<TypeOrTypeRef typeName="JDATE" typeKind="Typedef"/>
</DataMember>
<DataMember name="lsa_asof_time" offset="12">
<Annotation>
<Comment>hundreths/sec after 12 Midnight</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="lsa_flags" offset="16">
<Annotation>
<Comment>unfile, file ticks only</Comment>
</Annotation>
<TypeOrTypeRef typeName="FILE_ELECT_FLAGS" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="LAST_SALE_MSG" size="56" cgen:file="/mnt/pos.shrb/include/events/LAST_SALE_MSG.h">
<Members>
<DataMember name="lsm_first_trade" offset="0">
<Annotation>
<Comment>1 iff 1st trade, otherwise 0 (eligible for last sale)</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="lsm_last_price" offset="8">
<Annotation>
<Comment>the published last sale price</Comment>
</Annotation>
<TypeOrTypeRef typeName="MMP_PRICE" typeKind="Struct"/>
</DataMember>
<DataMember name="lsm_last_tick" offset="24">
<Annotation>
<Comment>tick for the last sale price</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="lsm_closing_price" offset="32">
<Annotation>
<Comment>Yesterday's closing price</Comment>
</Annotation>
<TypeOrTypeRef typeName="MMP_PRICE" typeKind="Struct"/>
</DataMember>
<DataMember name="lsm_closing_tick" offset="48">
<Annotation>
<Comment>tick for the close price</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="LASTSALE" size="12" cgen:file="/mnt/pos.shrb/include/events/LASTSALE.h">
<Members>
<DataMember name="ls_tick" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ls_price" offset="4">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ls_source" offset="8">
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="LS_STK" value="0"/>
<Enumerator name="LS_MDD" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="LS_STK"/>
<EnumeratorRef name="LS_MDD"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Enumeration name="late_to_close_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="ltc_on"/>
<EnumeratorRef name="ltc_off"/>
</Enumeration>
<Struct name="LATE_TO_CLOSE_TIMER_DATA" size="34" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/LATE_TO_CLOSE_TIMER_DATA.h">
<Members>
<DataMember name="m_sPostingTime" offset="0">
<TypeOrTypeRef>
<Symbol size="12" cgen:expression="ASCII_TIME_LENGTH"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_sExpectedArrivalTime" offset="12">
<TypeOrTypeRef>
<Symbol size="12" cgen:expression="ASCII_TIME_LENGTH"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_sExpectedArrivalDate" offset="24">
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="ASCII_DATE_LENGTH"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="LINKNO" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Struct name="LMT_DATA" size="704" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Members>
<DataMember name="ld_cnt" offset="0">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ld_flags" offset="2">
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="LD_BL_MORE"/>
<Bit constantName="LD_AB_MORE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ld_type_hilite" offset="4">
<TypeOrTypeRef>
<Mask name="" size="">
<Bit constantName="PT_LMT_HI"/>
<Bit constantName="PT_LOC_HI"/>
<Bit constantName="PT_OPG_HI"/>
<Bit constantName="PT_AON_HI"/>
<Bit constantName="PT_SL_HI"/>
<Bit constantName="PT_STP_HI"/>
<Bit constantName="PT_TICK_HI"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ld_best_prices" offset="8">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="BEST_PRICES" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ld_xpress_prices" offset="48">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ld_bp_prices" offset="56">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="PRICE_TOTS" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ld_prices" offset="128">
<TypeOrTypeRef>
<Array numElements="16" cgen:expression="MAX_PRI_CNT">
<TypeOrTypeRef typeName="PRICE_TOTS" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="LMT_DATA" size="704" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<TypeOrTypeRef typeName="LMT_DATA" typeKind="Struct"/>
</Typedef>
<Struct name="LMT_MSG" size="">
<Members/>
</Struct>
<Struct name="LMT_REPORT_DATA" size="436" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/LMT_REPORT_DATA.h">
<Members>
<DataMember name="m_actNo" offset="0">
<Annotation>
<Comment>DBK Activity Number</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_seqNo" offset="4">
<Annotation>
<Comment>PSS Sequence Number</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_dbkReport" offset="8">
<TypeOrTypeRef typeName="DBK_REPORT" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="LMT_RPT_DATA" size="264" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Members>
<DataMember name="lrd_ta" offset="0">
<Annotation>
<Comment>1 - 25 ta numbers involved</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="25" cgen:expression="LRD_MAX_TA">
<TypeOrTypeRef typeName="LMT_TA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="lrd_write_in_time" offset="250">
<Annotation>
<Comment>for principal activity</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="lrd_comment_code" offset="252">
<Annotation>
<Comment>for principal activity</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="LRD_COMMENT_CODE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="lrd_comment" offset="254">
<Annotation>
<Comment>for principal activity</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="LRD_COMMENT"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="LMT_TA" size="10" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Members>
<DataMember name="lt_name" offset="0">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="lt_qty" offset="6">
<Annotation>
<Comment>qty executed for this TA #, for doublecheck</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="lt_dbk_linkage" offset="8">
<Annotation>
<Comment>used to link rpt with (optional) AWO</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="LOCK_MSG" size="4" cgen:file="/mnt/pos.shrb/include/events/LOCK_MSG.h">
<Members>
<DataMember name="scr" offset="0">
<Annotation>
<Comment>screen nbr (see Lock.h)</Comment>
</Annotation>
<TypeOrTypeRef typeName="screen" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<NativeType name="long long" size="8"/>
<NativeType name="long" size="4"/>
<Typedef name="MARKET_CENTER_P" size="9" cgen:file="/mnt/pos.shrb/include/events/MARKET_CENTER.h">
<TypeOrTypeRef typeName="MARKET_CENTER" typeKind="Struct"/>
</Typedef>
<Struct name="MARKET_CENTER" size="9" cgen:file="/mnt/pos.shrb/include/events/MARKET_CENTER.h">
<Members>
<DataMember name="mc_mnemonic" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="mc_terminal_nbr" offset="1">
<TypeOrTypeRef>
<Symbol size="3"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="mc_badge" offset="4">
<Annotation>
<Comment>badge numbered entered</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="mc_acc_type" offset="8">
<Annotation>
<Comment>'A' - Agent, 'P' - Principal, 'X' - x-Firm</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="MASK" size="2" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_params.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Struct name="MDD_STATUS" size="8" cgen:file="/mnt/pos.shrb/include/events/MDD_STATUS.h">
<Members>
<DataMember name="ms_msgType" offset="0">
<Annotation>
<Comment>0 - permanent, 1 - temporary</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ms_mddLaState" offset="4">
<Annotation>
<Comment>is MDD/LA available ( 1 or 0 )</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="ms_permanent" value="0"/>
<Enumerator name="ms_temporary" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="ms_permanent"/>
<EnumeratorRef name="ms_temporary"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Enumeration name="MDS_DEPTH_INDICATION" size="4" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<EnumeratorRef name="MDS_DEPTH_IND_NONE"/>
<EnumeratorRef name="MDS_DEPTH_IND_BID"/>
<EnumeratorRef name="MDS_DEPTH_IND_ASK"/>
<EnumeratorRef name="MDS_DEPTH_IND_BOTH"/>
<EnumeratorRef name="MDS_DEPTH_IND_NULL"/>
</Enumeration>
<Typedef name="MDS_DEPTH_INDICATION" size="4" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<TypeOrTypeRef typeName="MDS_DEPTH_INDICATION" typeKind="Enumeration"/>
</Typedef>
<Typedef name="MDS_RPT_DATA" size="28" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<TypeOrTypeRef typeName="_mds_data" typeKind="Union"/>
</Typedef>
<Struct name="MDS_RPT" size="60" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<Members>
<DataMember name="md_act_no" offset="0">
<Annotation>
<Comment>activity #</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_flag" offset="2">
<Annotation>
<Comment>msg type. see values below</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_post" offset="3">
<Annotation>
<Comment>binary. 1-14</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_tee" offset="4">
<Annotation>
<Comment>A-Z</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_stock" offset="5">
<Annotation>
<Comment>stock name for DDS</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="md_denominator" offset="16">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_mpv" offset="20">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_denom_code" offset="24">
<Annotation>
<Comment>nominator code(ex: 3 for 8-th)</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_curr_ind" offset="26">
<Annotation>
<Comment>Currency indicator</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="md_max_price" offset="28">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="md_u" offset="32">
<TypeOrTypeRef typeName="MDS_RPT_DATA" typeKind="Typedef"/>
</DataMember>
<Constants>
<Enumerator name="MD_QUOTE" value="0" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<Annotation>
<Comment>values of md_flag</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MD_TRADE" value="1"/>
<Enumerator name="MD_STATUS" value="2"/>
<Enumerator name="MD_DEPTH_IND" value="3" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<Annotation>
<Comment>indicates Depth Indication Report</Comment>
</Annotation>
</Enumerator>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="MD_QUOTE"/>
<EnumeratorRef name="MD_TRADE"/>
<EnumeratorRef name="MD_STATUS"/>
<EnumeratorRef name="MD_DEPTH_IND"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Typedef name="MILLITIME" size="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Typedef name="MISC_AWO_DATA_P" size="16" cgen:file="/mnt/pos.shrb/include/events/MISC_AWO_DATA.h">
<TypeOrTypeRef typeName="MISC_AWO_DATA" typeKind="Struct"/>
</Typedef>
<Struct name="MISC_AWO_DATA" size="16" cgen:file="/mnt/pos.shrb/include/events/MISC_AWO_DATA.h">
<Members>
<DataMember name="mad_dc_trd_spsym" offset="0">
<Annotation>
<Comment>specialist firm trading name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="mad_hp_firmid" offset="4">
<Annotation>
<Comment>order entry spec firm id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="PWD_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="mad_ssno" offset="12">
<Annotation>
<Comment>substation sending the entry</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="mad_sd_tr_unit" offset="14">
<Annotation>
<Comment>tr_unit for this stock</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="MKT_DATA" size="104" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<TypeOrTypeRef typeName="MKT_DATA" typeKind="Union"/>
</Typedef>
<Union name="MKT_DATA" size="104" discriminator="undefined" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Members>
<DataMember name="mk_update" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="MKT_UPDATE" typeKind="Struct"/>
</DataMember>
<DataMember name="mk_side" offset="0" discriminatorCase="undefined">
<Annotation>
<Comment>buy, sell sides</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="MKT_SIDE" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Union>
<Struct name="MKT_ORDER_IMBAL_EXIT_MSG" size="2" cgen:file="/mnt/pos.shrb/include/events/MKT_ORDER_IMBAL_EXIT_MSG.h">
<Members>
<DataMember name="moie_type" offset="0">
<Annotation>
<Comment>valid values are: MOI_MOO, MOI_MOC</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="MOI_MOC"/>
<Bit constantName="MOI_MOO"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="MOI_MOO" value="0"/>
<Enumerator name="MOI_MOC" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="MOI_MOO"/>
<EnumeratorRef name="MOI_MOC"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="MKT_ORDER_IMBAL_MSG" size="16" cgen:file="/mnt/pos.shrb/include/events/MKT_ORDER_IMBAL_MSG.h">
<Members>
<DataMember name="moi_type" offset="0">
<Annotation>
<Comment>valid values are: MOI_MOO, MOI_MOC</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="MOI_MOC"/>
<Bit constantName="MOI_MOO"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="moi_data" offset="4">
<TypeOrTypeRef typeName="MktOrderImbalData" typeKind="Struct"/>
</DataMember>
<Constants>
<Enumerator name="MOI_MOO" value="0"/>
<Enumerator name="MOI_MOC" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="MOI_MOO"/>
<EnumeratorRef name="MOI_MOC"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="MKT_SIDE" size="52" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Members>
<DataMember name="ms_flags" offset="0">
<Annotation>
<Comment>BUY or SELL see param.h or below</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ms_elected_flags" offset="1">
<Annotation>
<Comment>If bit i is on ms_mkts[i] is elected stps</Comment>
</Annotation>
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="ms_stp_price" offset="4">
<Annotation>
<Comment>stopped market price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ms_st_mkt_qty" offset="8">
<Annotation>
<Comment>stopped market quantity</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="ms_mkt_qty" offset="12">
<Annotation>
<Comment>market quantity (total)</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="ms_reserved" offset="16">
<Annotation>
<Comment>this field reserved for future use</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="ms_mkts" offset="20">
<Annotation>
<Comment>individual market order qtys</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="8" cgen:expression="MKT_CNT">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="MKT_TRADE" size="16" cgen:file="/mnt/pos.shrb/include/events/MKT_TRADE.h">
<Members>
<DataMember name="mt_qty" offset="0">
<Annotation>
<Comment>amount to print</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="mt_price" offset="4">
<Annotation>
<Comment>price of trade</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="mt_id" offset="8">
<Annotation>
<Comment>badge # 1-9999 (1 is default)</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="mt_cond" offset="10">
<Annotation>
<Comment>condition (see db2.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="MT_CASH"/>
<Bit constantName="MT_ND"/>
<Bit constantName="MT_SLD"/>
<Bit constantName="MT_OPD"/>
<Bit constantName="MT_127"/>
<Bit constantName="MT_SELLER"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="mt_seller" offset="12">
<Annotation>
<Comment>numeric in SELLERxx condition</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="MKT_UPDATE" size="8" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Members>
<DataMember name="mu_flags" offset="0">
<Annotation>
<Comment>BUY, SELL see param.h or below</Comment>
</Annotation>
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="mu_newmkt" offset="2">
<Annotation>
<Comment>new market order</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="mu_mkt_qty" offset="4">
<Annotation>
<Comment>non stopped mkt qty total for side</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="MktOrderImbalData" size="12" cgen:file="/mnt/pos.shrb/include/events/MKT_ORDER_IMBAL_MSG.h">
<Members>
<DataMember name="moi_imbal" offset="0">
<Annotation>
<Comment>market order imbalance amount</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="moi_side" offset="4">
<Annotation>
<Comment>imbalance side: valid values are: MOI_BUY_IMBALANCE, MOI_SELL_IMBALANCE, MOI_NO_IMBALANCE</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="MOI_NO_IMBALANCE"/>
<Bit constantName="MOI_SELL_IMBALANCE"/>
<Bit constantName="MOI_BUY_IMBALANCE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="moi_badge_id" offset="6">
<Annotation>
<Comment>badge-id</Comment>
</Annotation>
<TypeOrTypeRef typeName="BADGEID" typeKind="Typedef"/>
</DataMember>
<DataMember name="moi_timestamp" offset="8">
<Annotation>
<Comment>timestamp</Comment>
</Annotation>
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<Constants>
<Enumerator name="MOI_BUY_IMBALANCE" value="0"/>
<Enumerator name="MOI_SELL_IMBALANCE" value="1"/>
<Enumerator name="MOI_NO_IMBALANCE" value="2"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="MOI_BUY_IMBALANCE"/>
<EnumeratorRef name="MOI_SELL_IMBALANCE"/>
<EnumeratorRef name="MOI_NO_IMBALANCE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="MMI_NEWS_TIMER" size="8" cgen:file="/mnt/pos.shrb/include/events/MMI_NEWS_TIMER.h">
<Members>
<DataMember name="mnt_stk_id" offset="0">
<Annotation>
<Comment>stk_id of the stock who send this message</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="mnt_news_count" offset="4">
<Annotation>
<Comment>number of news alerts received</Comment>
</Annotation>
<TypeOrTypeRef typeName="ULONG" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="MMI_QUOTE_CONDITION_DATA" size="2" cgen:file="/mnt/pos.shrb/include/events/MMI_QUOTE_CONDITION_DATA.h">
<Members>
<DataMember name="m_quoteConditions" offset="0">
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="MMP_DATE" size="4" cgen:file="/mnt/pos.shrb/include/events/MMP_DATE.h">
<Members>
<DataMember name="md_day" offset="0">
<Annotation>
<Comment>value 1 - 31</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_month" offset="1">
<Annotation>
<Comment>value 1 - 12</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_year" offset="2">
<Annotation>
<Comment>ccyy format</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="MMP_PRICE" size="16" cgen:file="/mnt/pos.shrb/include/events/MMP_PRICE.h">
<Members>
<DataMember name="mp_wholePart" offset="0">
<Annotation>
<Comment>whole part of a MMP price</Comment>
</Annotation>
<TypeOrTypeRef typeName="long long" typeKind="NativeType"/>
</DataMember>
<DataMember name="mp_numerator" offset="8">
<Annotation>
<Comment>numerator of fractional part</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="mp_denominator" offset="12">
<Annotation>
<Comment>denominator of fractional part</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Enumeration name="mmp_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="mmp_on"/>
<EnumeratorRef name="mmp_off"/>
<EnumeratorRef name="mmp_news"/>
<EnumeratorRef name="mmp_news_clearbit"/>
<EnumeratorRef name="mmp_best_away_quote"/>
<EnumeratorRef name="mmp_buy_better_away_mkt"/>
<EnumeratorRef name="mmp_sell_better_away_mkt"/>
<EnumeratorRef name="mmp_buy_clearbit"/>
<EnumeratorRef name="mmp_sell_clearbit"/>
<EnumeratorRef name="mmp_its_eligible"/>
</Enumeration>
<Struct name="MMP_TIME" size="4" cgen:file="/mnt/pos.shrb/include/events/MMP_TIME.h">
<Members>
<DataMember name="mt_hours" offset="0">
<Annotation>
<Comment>value 0 - 23</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="mt_minutes" offset="1">
<Annotation>
<Comment>value 0 - 59</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="mt_seconds" offset="2">
<Annotation>
<Comment>value 0 - 59</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="mt_cseconds" offset="3">
<Annotation>
<Comment>value 0 - 99 in hundredth seconds</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="MONEY" size="8" cgen:file="/mnt/pos.shrb/include/misc/money.h">
<TypeOrTypeRef typeName="long long" typeKind="NativeType"/>
</Typedef>
<Struct name="MSG_DELETE_REQ" size="6" cgen:file="/mnt/pos.shrb/include/events/MSG_DELETE_REQ.h">
<Members>
<DataMember name="md_mode" offset="0">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_task_id" offset="2">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="md_msg_id" offset="4">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="REQ_TO_DEL_MSG" value="0"/>
<Enumerator name="REQ_TO_DEL_TASK_MSGS" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="REQ_TO_DEL_MSG"/>
<EnumeratorRef name="REQ_TO_DEL_TASK_MSGS"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="MSG_REQ" size="10" cgen:file="/mnt/pos.shrb/include/events/MSG_REQ.h">
<Members>
<DataMember name="mr_rsp_qid" offset="0">
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="mr_msg_position" offset="2">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="REQ_FOR_NEXT_ARCH"/>
<Bit constantName="REQ_FOR_PREVIOUS_ARCH"/>
<Bit constantName="REQ_FOR_FIRST_ARCH"/>
<Bit constantName="REQ_FOR_NEXT_PAGE"/>
<Bit constantName="REQ_FOR_PREVIOUS_PAGE"/>
<Bit constantName="REQ_FOR_FIRST_PAGE"/>
<Bit constantName="REQ_FOR_NEXT_MSG"/>
<Bit constantName="REQ_FOR_PREVIOUS_MSG"/>
<Bit constantName="REQ_FOR_FIRST_MSG"/>
<Bit constantName="REQ_FOR_THIS_MSG"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="mr_task_id" offset="4">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="mr_msg_id" offset="6">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="mr_rsp_msgtype" offset="8">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="MSGS_IN_Q" size="24" cgen:file="/mnt/pos.shrb/include/events/MSGS_IN_Q.h">
<Members>
<DataMember name="miq_stkcnt" offset="0">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="miq_stk_msgs" offset="4">
<TypeOrTypeRef typeName="MSGS_PER_STK" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="MSGS_PER_STK" size="20" cgen:file="/mnt/pos.shrb/include/events/MSGS_PER_STK.h">
<Members>
<DataMember name="mps_flag" offset="0">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="mps_stk_sym" offset="2">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="mps_n" offset="16">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="MtProcAddress" size="60" cgen:file="/mnt/pos.shrb/include/mgt/Mt/Mt.h">
<Members>
<DataMember name="Type" offset="0">
<TypeOrTypeRef typeName="MtType" typeKind="Typedef"/>
</DataMember>
<DataMember name="Version" offset="4">
<TypeOrTypeRef typeName="MtVersion" typeKind="Typedef"/>
</DataMember>
<DataMember name="ManagerAddress" offset="8">
<TypeOrTypeRef typeName="SOCKADDR" typeKind="Typedef"/>
</DataMember>
<DataMember name="ProcPid" offset="24">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ProcName" offset="28">
<TypeOrTypeRef>
<Symbol size="16"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ProcGroup" offset="44">
<TypeOrTypeRef>
<Symbol size="16"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="MtProcAddress" size="60" cgen:file="/mnt/pos.shrb/include/mgt/Mt/Mt.h">
<TypeOrTypeRef typeName="MtProcAddress" typeKind="Struct"/>
</Typedef>
<Typedef name="MtType" size="4" cgen:file="/mnt/pos.shrb/include/mgt/Mt/Mt.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Typedef name="MtVersion" size="4" cgen:file="/mnt/pos.shrb/include/mgt/Mt/Mt.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Typedef name="MW_SS_MASK" size="4" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SS.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Struct name="NDONE_DATA" size="16" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Members>
<DataMember name="nd_ta_number" offset="0">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="nd_text_code" offset="6">
<Annotation>
<Comment>(see above for values)</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="nd_price" offset="8">
<Annotation>
<Comment>note 4 byte alignment!!</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="nd_shrs_ahead" offset="12">
<Annotation>
<Comment>use char array due to padding</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="NDONE_TXN" size="8" cgen:file="/mnt/pos.shrb/include/events/NDONE_TXN.h">
<Members>
<DataMember name="nt_lprice" offset="0">
<Annotation>
<Comment>low price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="nt_hprice" offset="4">
<Annotation>
<Comment>high price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="NEWS_UPDATE_MSG" size="10" cgen:file="/mnt/pos.shrb/include/events/NEWS_UPDATE_MSG.h">
<Members>
<DataMember name="num_newsAlertTime" offset="0">
<Annotation>
<Comment>time of latest news alert</Comment>
</Annotation>
<TypeOrTypeRef typeName="MMP_TIME" typeKind="Struct"/>
</DataMember>
<DataMember name="num_newsAlertDate" offset="4">
<Annotation>
<Comment>date of latest news alert</Comment>
</Annotation>
<TypeOrTypeRef typeName="MMP_DATE" typeKind="Struct"/>
</DataMember>
<DataMember name="num_hotNews" offset="8">
<Annotation>
<Comment>important news ( 1 or 0 )</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="NX_TO_BOOK_DATA" size="6" cgen:file="/mnt/pos.shrb/include/events/NX_TO_BOOK_DATA.h">
<Members>
<DataMember name="nx_tanum" offset="0">
<Annotation>
<Comment>ta#</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="O_EXT" size="11" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<Members>
<DataMember name="oe_stk_sfx" offset="0">
<Annotation>
<Comment>stock name &amp; suffix</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="O_EXT" size="11" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<TypeOrTypeRef typeName="O_EXT" typeKind="Struct"/>
</Typedef>
<Struct name="O_KEY" size="12" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<Members>
<DataMember name="ok_lmt_price" offset="0">
<Annotation>
<Comment>order's lmt price otherwise 0 for unlimited orders (e.g., MKT, STP)</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ok_stp_price" offset="4">
<Annotation>
<Comment>order's stp price (STP OR STP_LMT)</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ok_cxl_lv_qty" offset="8">
<Annotation>
<Comment>cancel leaves quantity</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="O_KEY" size="12" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<TypeOrTypeRef typeName="O_KEY" typeKind="Struct"/>
</Typedef>
<Typedef name="O_MAIN" size="68" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<TypeOrTypeRef typeName="_o_main" typeKind="Struct"/>
</Typedef>
<Struct name="O_TXT" size="1810" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<Members>
<DataMember name="ot_textlen" offset="0">
<Annotation>
<Comment>length of following text</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ot_text" offset="2">
<Annotation>
<Comment>limit size of msg sent between tasks</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="1808" cgen:expression="PO_TEXT_LEN"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="O_TXT" size="1810" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<TypeOrTypeRef typeName="O_TXT" typeKind="Struct"/>
</Typedef>
<Struct name="OARS_ADMIN_REQ" size="8" cgen:file="/mnt/pos.shrb/include/events/OARS_ADMIN_REQ.h">
<Members>
<DataMember name="of_function" offset="0">
<Annotation>
<Comment>function requested</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="OA_SIDECAR"/>
<Bit constantName="OA_PRI_OK"/>
<Bit constantName="OA_PR_CORR"/>
<Bit constantName="OA_FRZ"/>
<Bit constantName="OA_MOC"/>
<Bit constantName="OA_OARS_ON"/>
<Bit constantName="OA_ND"/>
<Bit constantName="OA_SIDECAR"/>
<Bit constantName="OA_STAT_REQ"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="of_price" offset="4">
<Annotation>
<Comment>for price correction</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="OARS_RPT" size="28" cgen:file="/mnt/pos.shrb/include/events/OARS_RPT.h">
<Members>
<DataMember name="oa_act_no" offset="0">
<Annotation>
<Comment>activity number of execution</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="oa_tanum" offset="2">
<Annotation>
<Comment>oars turnaround # in ascii</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oa_conds" offset="8">
<Annotation>
<Comment>oars conds (see param.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="OA_MOC"/>
<Bit constantName="OA_STAT_REQ"/>
<Bit constantName="OA_ND"/>
<Bit constantName="OA_PR_CORR"/>
<Bit constantName="OA_PRI_OK"/>
<Bit constantName="OA_SIDECAR"/>
<Bit constantName="OA_UNFRZ"/>
<Bit constantName="OA_FRZ"/>
<Bit constantName="OA_OARS_ON"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oa_price" offset="12">
<Annotation>
<Comment>oars price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="oa_stock" offset="16">
<Annotation>
<Comment>oars stock &amp; suffix name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="OBJNAME" size="16" cgen:file="/mnt/pos.shrb/include/mgt/mman/mman.h">
<TypeOrTypeRef typeName="_objname" typeKind="Struct"/>
</Typedef>
<Typedef name="OC_INTERVAL" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Struct name="OD_HIST" size="52" cgen:file="/mnt/pos.shrb/include/events/OD_MSG.h">
<Members>
<DataMember name="hi_time" offset="0">
<Annotation>
<Comment>time of event</Comment>
</Annotation>
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="hi_actno" offset="2">
<Annotation>
<Comment>display book activity # of event</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="hi_txn_type" offset="4">
<Annotation>
<Comment>RPRT, CCXL, STPSTK. see db2.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="hi_flags" offset="5">
<Annotation>
<Comment>see OD_HIST_CONSTS</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="HI_1ST"/>
<Bit constantName="HI_CONT"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="hi_detail" offset="8">
<Annotation>
<Comment>see OrderMod.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="DET_VAR" typeKind="Union"/>
</DataMember>
</Members>
</Struct>
<Struct name="OD_MSG" size="216" cgen:file="/mnt/pos.shrb/include/events/OD_MSG.h">
<Members>
<DataMember name="om_flags" offset="0">
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="om_n_hists" offset="4">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="om_data" offset="8">
<TypeOrTypeRef typeName="OM_DATA" typeKind="Union"/>
</DataMember>
</Members>
</Struct>
<Struct name="OD_REQ" size="16" cgen:file="/mnt/pos.shrb/include/events/OD_REQ.h">
<Members>
<DataMember name="odr_tanum" offset="0">
<Annotation>
<Comment>ta of requested order</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="odr_price" offset="8">
<Annotation>
<Comment>price if priced</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="odr_type" offset="12">
<Annotation>
<Comment>order type, BUY, SELL</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="OC"/>
<Bit constantName="LMT_OPG"/>
<Bit constantName="OVR_NITE"/>
<Bit constantName="SS_EXEMPT"/>
<Bit constantName="SELL_SHORT"/>
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="OD_SUMM" size="68" cgen:file="/mnt/pos.shrb/include/events/OD_MSG.h">
<Members>
<DataMember name="od_fbs" offset="0">
<Annotation>
<Comment>firm, branch, sequence</Comment>
</Annotation>
<TypeOrTypeRef typeName="FBS_P" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_ordtype" offset="12">
<Annotation>
<Comment>order type &amp; side. value: see param.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="OrderTypeMask" size="4">
<Bit constantName="OC"/>
<Bit constantName="LMT_OPG"/>
<Bit constantName="OVR_NITE"/>
<Bit constantName="SS_EXEMPT"/>
<Bit constantName="SELL_SHORT"/>
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_AUTOEX"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="od_conds" offset="16">
<Annotation>
<Comment>other conds &amp; tif: see param.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="OrderCondMask" size="4">
<Bit constantName="EFF_SEQ_ON"/>
<Bit constantName="NOT_REDUCED"/>
<Bit constantName="ELECTED"/>
<Bit constantName="OC_XPR"/>
<Bit constantName="OC_NXX"/>
<Bit constantName="OC_NXX"/>
<Bit constantName="OC_NX"/>
<Bit constantName="T_FILED"/>
<Bit constantName="P_FILED"/>
<Bit constantName="PRI_INSERT"/>
<Bit constantName="STP_AON"/>
<Bit constantName="TTS"/>
<Bit constantName="DNI"/>
<Bit constantName="DNR"/>
<Bit constantName="OB"/>
<Bit constantName="REP_CXL"/>
<Bit constantName="O_DUP"/>
<Bit constantName="OPG"/>
<Bit constantName="GTC"/>
<Bit constantName="DAY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="od_oqty" offset="20">
<Annotation>
<Comment>original qty in SHARES (w/round lots)</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_price" offset="24">
<Annotation>
<Comment>price by which order is filed in book</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_aux_price" offset="28">
<Annotation>
<Comment>limit price for STP_LMT orders.</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_date" offset="32">
<Annotation>
<Comment>date when filter recieved order</Comment>
</Annotation>
<TypeOrTypeRef typeName="DATE" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_time" offset="34">
<Annotation>
<Comment>time when filter received order</Comment>
</Annotation>
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_es_date" offset="36">
<Annotation>
<Comment>effective sequence date</Comment>
</Annotation>
<TypeOrTypeRef typeName="JDATE" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_es_time" offset="40">
<Annotation>
<Comment>effective sequence time (hundredths of sec.) ** **</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_qty" offset="44">
<Annotation>
<Comment>current open qty in round lots</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_strtqty" offset="46">
<Annotation>
<Comment>open qty at bod (comm base)</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_ahead" offset="48">
<Annotation>
<Comment># shares ahead at this price</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_tanum" offset="52">
<Annotation>
<Comment>turnaround #</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="od_cxl_qty" offset="58">
<Annotation>
<Comment>qty canceled today</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_pcxl_qty" offset="60">
<Annotation>
<Comment>previous cxl qty</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_exe_qty" offset="62">
<Annotation>
<Comment>qty executed today. details will follow</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="od_pexe_qty" offset="64">
<Annotation>
<Comment>previously executed qty</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="odOCInterval" offset="66">
<Annotation>
<Comment>expire interval of an self-canceling order</Comment>
</Annotation>
<TypeOrTypeRef typeName="OC_INTERVAL" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="OE_AWO" size="148" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<Members>
<DataMember name="oa_version" offset="0">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="OE_VERSION_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oa_crowd" offset="4">
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="CROWD_SIZE">
<TypeOrTypeRef typeName="CROWD_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oa_cid" offset="95">
<Annotation>
<Comment>size of its committment id</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="CID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oa_prin" offset="100">
<TypeOrTypeRef typeName="PRIN_ACT" typeKind="Struct"/>
</DataMember>
<DataMember name="oa_dbk_exec_time" offset="126">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="OE_EXEC_TIME_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oa_csh_nd_slr" offset="134">
<TypeOrTypeRef>
<Symbol size="3" cgen:expression="OE_CSH_ND_SLR_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oa_filler" offset="137">
<TypeOrTypeRef>
<Symbol size="11"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="OE_AWO" size="148" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<TypeOrTypeRef typeName="OE_AWO" typeKind="Struct"/>
</Typedef>
<Struct name="OE_DISP_FIELDS" size="4" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<Members>
<DataMember name="oed_quantity" offset="0">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="OE_DISP_FIELDS" size="4" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<TypeOrTypeRef typeName="OE_DISP_FIELDS" typeKind="Struct"/>
</Typedef>
<Struct name="OE_MSG_HEADER_EXPANDED" size="24" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<Members>
<DataMember name="oeh_stx_field" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="oeh_exch" offset="1">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="oeh_type" offset="2">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oeh_input_time" offset="4">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="OE_INPUT_TIME_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oeh_internal_data" offset="10">
<TypeOrTypeRef typeName="INTRNL_DATA_EXPANDED" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="OE_PSS_HEADER" size="12" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<Members>
<DataMember name="oph_password" offset="0">
<TypeOrTypeRef>
<Symbol size="8"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oph_quantity" offset="8">
<Annotation>
<Comment>order entry.</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="OE_SL_PRICE_EXPANDED" size="13">
<Members>
<DataMember name="oep_price_type" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="oep_integer" offset="1">
<TypeOrTypeRef>
<Symbol size="9"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oep_fraction" offset="10">
<TypeOrTypeRef>
<Symbol size="3"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="OE_SL_PRICE_EXPANDED" size="13">
<TypeOrTypeRef typeName="OE_SL_PRICE_EXPANDED" typeKind="Struct"/>
</Typedef>
<Struct name="OE_TEMPLATE_A_EXPANDED" size="56" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<Members>
<DataMember name="oea_firm" offset="0">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oea_branch" offset="4">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oea_seq_no" offset="8">
<TypeOrTypeRef>
<Symbol size="5"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oea_lot_type" offset="13">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="oea_firm_poss_dupe" offset="14">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="oea_cancel_indicator" offset="15">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="oea_order_instruction" offset="16">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="oea_order_type" offset="17">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="oea_time_in_force" offset="18">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="oea_security" offset="19">
<TypeOrTypeRef>
<Symbol size="11"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oea_quantity" offset="30">
<TypeOrTypeRef>
<Symbol size="7"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oea_price" offset="37">
<TypeOrTypeRef typeName="OE_SL_PRICE_EXPANDED" typeKind="Struct"/>
</DataMember>
<DataMember name="oea_product_type" offset="50">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oea_acc_type" offset="52">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="oea_filler" offset="53">
<TypeOrTypeRef>
<Symbol size="3"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="OE_TEMPLATE_A_EXPANDED" size="56" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<TypeOrTypeRef typeName="OE_TEMPLATE_A_EXPANDED" typeKind="Struct"/>
</Typedef>
<Typedef name="OLA_QTY" size="4" cgen:file="/mnt/pos.shrb/include/events/IN_OLA.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Typedef name="OLA_SIGN" size="2" cgen:file="/mnt/pos.shrb/include/events/IN_OLA.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Union name="OM_DATA" size="208" discriminator="undefined" cgen:file="/mnt/pos.shrb/include/events/OD_MSG.h">
<Members>
<DataMember name="od_summ" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="OD_SUMM" typeKind="Struct"/>
</DataMember>
<DataMember name="od_hist" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef>
<Array numElements="4" cgen:expression="N_HISTS">
<TypeOrTypeRef typeName="OD_HIST" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Union>
<Struct name="ON_KEY" size="34" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Members>
<DataMember name="ok_cnt" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ok_key" offset="2">
<TypeOrTypeRef>
<Array numElements="8" cgen:expression="MAX_KEY">
<TypeOrTypeRef typeName="KEY_STRUCT" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="ON_KEY" size="34" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<TypeOrTypeRef typeName="ON_KEY" typeKind="Struct"/>
</Typedef>
<Struct name="ON_RECEIPT" size="6" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Members>
<DataMember name="or_timer" offset="0">
<Annotation>
<Comment>if set start timer!</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="or_timer_val" offset="2">
<Annotation>
<Comment>timer value</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="or_timer_type" offset="4">
<Annotation>
<Comment>timer msg type</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="ON_RECEIPT" size="6" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<TypeOrTypeRef typeName="ON_RECEIPT" typeKind="Struct"/>
</Typedef>
<Struct name="ON_TIMEOUT" size="14" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<Members>
<DataMember name="ot_enabled" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ot_signal" offset="1">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ot_signal_flgs" offset="2">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ot_signal_type" offset="4">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ot_delete" offset="6">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ot_attrib" offset="7">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ot_attrib_type" offset="8">
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ot_timer" offset="9">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="ot_timer_val" offset="10">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ot_timer_type" offset="12">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="ON_TIMEOUT" size="14" cgen:file="/mnt/pos.shrb/include/events/CLASS_REGISTRATION.h">
<TypeOrTypeRef typeName="ON_TIMEOUT" typeKind="Struct"/>
</Typedef>
<Struct name="OPEN_BOOK_DETAIL_DATA" size="12" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_UPDATE_DATA.h">
<Members>
<DataMember name="m_price" offset="0">
<Annotation>
<Comment>A limit price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_qty" offset="4">
<Annotation>
<Comment>Total voluem at above price</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_count" offset="8">
<Annotation>
<Comment>Total number of orders at above price</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="OPEN_BOOK_HEADER_DATA" size="56" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_UPDATE_DATA.h">
<Members>
<DataMember name="m_full_update_seq" offset="0">
<Annotation>
<Comment>The full update number (origin 1)</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_delta_update_seq" offset="4">
<Annotation>
<Comment>The delta since last full update number. Zero if this is a full update</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_packet_seq" offset="8">
<Annotation>
<Comment>The packet number of this message.</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_packet_count" offset="12">
<Annotation>
<Comment>The total number of packets (msgs) in entire update.</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_firm" offset="16">
<Annotation>
<Comment>The specialist firm name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_symbol" offset="20">
<Annotation>
<Comment>The stock name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_tr_unit" offset="32">
<Annotation>
<Comment>Unit of trade (shares per round lot)</Comment>
</Annotation>
<TypeOrTypeRef typeName="TRADE_UNIT" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_last_sale" offset="36">
<Annotation>
<Comment>The stock's last sale.</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_mpv" offset="40">
<Annotation>
<Comment>The stock's min price variation</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_denominator" offset="44">
<Annotation>
<Comment>The stock's price denominator</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE_DENOM" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_stock_cond" offset="48">
<Annotation>
<Comment>Condition bits describing the stock's state</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_num_buy_recs" offset="50">
<Annotation>
<Comment>The number of records of buy side data in m_data (possibly zero). The buy data originates at m_data[0]</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_num_sell_recs" offset="52">
<Annotation>
<Comment>The number of records of sell side data in m_data (possibly zero). The sell data originates at m_data[N_OPEN_BOOK_DETAIL_DATA-1]</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="OPEN_BOOK_PUMP_HEADER" size="37" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_PUMP_HEADER.h">
<Members>
<DataMember name="m_product_id" offset="0">
<Annotation>
<Comment>Product ID.</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="INT_LEN"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_version_id" offset="4">
<Annotation>
<Comment>Version ID to identify message format/revision</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="INT_LEN"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_msg_type" offset="8">
<Annotation>
<Comment>messsge type of message body</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="INT_LEN"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_retrans_flag" offset="12">
<Annotation>
<Comment>retransmission flag</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="INT_LEN"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_timestamp" offset="16">
<Annotation>
<Comment>message creation time</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="17" cgen:expression="TIMESTAMP_LEN"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_msg_size" offset="33">
<Annotation>
<Comment>size of the message body</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="INT_LEN"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="OPEN_BOOK_PUMP_MSG" size="8192" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_PUMP_MSG.h">
<Members>
<DataMember name="m_header" offset="0">
<Annotation>
<Comment>message header</Comment>
</Annotation>
<TypeOrTypeRef typeName="OPEN_BOOK_PUMP_HEADER" typeKind="Struct"/>
</DataMember>
<DataMember name="m_body" offset="37">
<TypeOrTypeRef>
<Symbol size="8155" cgen:expression="MAX_DATA_LEN"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="OPEN_BOOK_REFRESH_REQ_DATA" size="11" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_REFRESH_REQ_DATA.h">
<Members>
<DataMember name="m_symbol" offset="0">
<Annotation>
<Comment>A stock name or '*' (all stocks)</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="OPEN_BOOK_UPDATE_DATA" size="7100" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/OPEN_BOOK_UPDATE_DATA.h">
<Members>
<DataMember name="m_header" offset="0">
<TypeOrTypeRef typeName="OPEN_BOOK_HEADER_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="m_data" offset="56">
<TypeOrTypeRef>
<Array numElements="587" cgen:expression="N_OPEN_BOOK_DETAIL_DATA-1">
<TypeOrTypeRef typeName="OPEN_BOOK_DETAIL_DATA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Enumeration name="openclose_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="closed"/>
<EnumeratorRef name="stk_open"/>
</Enumeration>
<Typedef name="OrderCondMask" size="4" cgen:file="/mnt/pos.shrb/include/misc/OrderMasks.h">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</Typedef>
<Struct name="ORDER" size="116" cgen:file="/mnt/pos.shrb/include/events/IN_ORDER.h">
<Members>
<DataMember name="omain" offset="0">
<TypeOrTypeRef typeName="O_MAIN" typeKind="Typedef"/>
</DataMember>
<DataMember name="okey" offset="68">
<TypeOrTypeRef typeName="O_KEY" typeKind="Struct"/>
</DataMember>
<DataMember name="oext" offset="80">
<TypeOrTypeRef typeName="O_EXT" typeKind="Struct"/>
</DataMember>
<DataMember name="in_pri_time" offset="91">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="TIME_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="in_pri_date" offset="99">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="DATE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="in_pri_ta" offset="107">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="OrderTypeMask" size="4" cgen:file="/mnt/pos.shrb/include/misc/OrderMasks.h">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</Typedef>
<Struct name="PEEK_INFO" size="620" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h">
<Members>
<DataMember name="pi_seq_num" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="pi_symbol" offset="4">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pi_flags" offset="15">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pi_mkts" offset="16">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="PEEK_MKT_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pi_lmts" offset="40">
<TypeOrTypeRef typeName="PEEK_LMT_INFO" typeKind="Struct"/>
</DataMember>
<Constants>
<Enumerator name="PI_HAS_PG" value="0"/>
<Enumerator name="PI_CONTINUE" value="1"/>
<Enumerator name="PI_NO_STOCK" value="2"/>
<Enumerator name="MIN_PRI_PEEK_CNT" value="3"/>
<Enumerator name="MAX_PRI_PEEK_CNT" value="4"/>
<Enumerator name="TOTAL_PEEK_CNT" value="5"/>
</Constants>
<NestedType>
<Typedef name="PEEK_MKT_INFO" size="12">
<TypeOrTypeRef typeName="PEEK_MKT_INFO" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Typedef name="PEEK_LMT_INFO" size="580">
<TypeOrTypeRef typeName="PEEK_LMT_INFO" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="PI_HAS_PG"/>
<EnumeratorRef name="PI_CONTINUE"/>
<EnumeratorRef name="PI_NO_STOCK"/>
<EnumeratorRef name="MIN_PRI_PEEK_CNT"/>
<EnumeratorRef name="MAX_PRI_PEEK_CNT"/>
<EnumeratorRef name="TOTAL_PEEK_CNT"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="PEEK_LMT_INFO" size="580" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h">
<Members>
<DataMember name="pl_buy_cnt" offset="0">
<Annotation>
<Comment># of buy PRICE_TOTS in following array</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pl_sell_cnt" offset="2">
<Annotation>
<Comment># of sell PRICE_TOTS in following array</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pl_price_tots" offset="4">
<TypeOrTypeRef>
<Array numElements="16" cgen:expression="TOTAL_PEEK_CNT">
<TypeOrTypeRef typeName="PRICE_TOTS" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="PEEK_LMT_INFO" size="580" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h">
<TypeOrTypeRef typeName="PEEK_LMT_INFO" typeKind="Struct"/>
</Typedef>
<Struct name="PEEK_MKT_INFO" size="12" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h">
<Members>
<DataMember name="pm_side" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pm_st_mkt_qty" offset="4">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pm_mkt_qty" offset="8">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="PEEK_MKT_INFO" size="12" cgen:file="/mnt/pos.shrb/include/events/PEEK_INFO.h">
<TypeOrTypeRef typeName="PEEK_MKT_INFO" typeKind="Struct"/>
</Typedef>
<Struct name="PEEK_REQ" size="8" cgen:file="/mnt/pos.shrb/include/events/PEEK_REQ.h">
<Members>
<DataMember name="pr_seq_num" offset="0">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="pr_num_prices" offset="4">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pr_rtn_qid" offset="6">
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="pid_t" size="4">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</Typedef>
<Struct name="PLAIN_TEXT" size="2048" cgen:file="/mnt/pos.shrb/include/events/PLAIN_TEXT.h">
<Members>
<DataMember name="text" offset="0">
<TypeOrTypeRef>
<Symbol size="2048" cgen:expression="MAX_LENGTH"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_ACTIVITY_TA_DATA" size="812" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_ACTIVITY_TA_DATA.h">
<Members>
<DataMember name="m_time" offset="0">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_linkno" offset="4">
<TypeOrTypeRef typeName="LINKNO" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_contraTaList" offset="8">
<TypeOrTypeRef typeName="PM_CONTRA_TA_LIST" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_ACTIVITY_UPDATE_DATA" size="932" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_ACTIVITY_UPDATE_DATA.h">
<Members>
<DataMember name="m_flags" offset="0">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="PM_IS_LAST_SALE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_qty" offset="4">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_price" offset="8">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_linkno" offset="12">
<TypeOrTypeRef typeName="LINKNO" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_lastTick" offset="14">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_tick" offset="15">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_time" offset="16">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_writeInTime" offset="20">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_comment1" offset="24">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_comment2" offset="25">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_freeComm" offset="26">
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="FC_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_settlement" offset="36">
<TypeOrTypeRef typeName="SETTLEMENTTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="m_sellerDays" offset="40">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_num_contras" offset="42">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_contras" offset="44">
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="MAX_U_GV">
<TypeOrTypeRef typeName="GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_contraTaList" offset="128">
<TypeOrTypeRef typeName="PM_CONTRA_TA_LIST" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_CLIENT_REGISTER_DATA" size="8" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_CLIENT_REGISTER_DATA.h">
<Members>
<DataMember name="pmc_client_type" offset="0">
<Annotation>
<Comment>Type of client registering</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_CLIENT_TYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="pmc_qid" offset="4">
<Annotation>
<Comment>MMAN QID of client queue</Comment>
</Annotation>
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmc_wants_update" offset="6">
<Annotation>
<Comment>1 if client wants response, 0 otherwise</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_CONTRA_TA_LIST" size="804" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_CONTRA_TA_LIST.h">
<Members>
<DataMember name="m_flags" offset="0">
<Annotation>
<Comment>PM_IS_CONTINUED</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="PM_IS_CONTINUED"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_numContraTa" offset="2">
<Annotation>
<Comment>1 to PM_MAX_CONTRA_TA</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_contraTa" offset="4">
<TypeOrTypeRef>
<Array numElements="50" cgen:expression="PM_MAX_CONTRA_TA">
<TypeOrTypeRef typeName="PM_CONTRA_TA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_CONTRA_TA" size="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_CONTRA_TA.h">
<Members>
<DataMember name="m_qty" offset="0">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_giveUpName" offset="4">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_ta" offset="8">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_DETAIL_REC" size="20" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_DETAIL_REC.h">
<Members>
<DataMember name="pmd_tick" offset="0">
<Annotation>
<Comment>The tick, 0 = no tick, 1 = '0-', 2 = '0+', 3 = '-', 4 = '+'</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmd_comment1" offset="1">
<Annotation>
<Comment>Canned comment</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmd_comment2" offset="2">
<Annotation>
<Comment>Canned comment</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmd_free_form_comment" offset="3">
<Annotation>
<Comment>Free form comment</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="FC_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmd_time" offset="16">
<Annotation>
<Comment>The record's time</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_DLL_ACTIVITY_DATA" size="116" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_ACTIVITY_DATA.h">
<Members>
<DataMember name="pda_exec_price" offset="0">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pda_exe_time_milli" offset="4">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="pda_write_in_time" offset="8">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="pda_side" offset="12">
<Annotation>
<Comment>BUY or SELL (param.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pda_ordtype" offset="14">
<Annotation>
<Comment>MKT or LMT (param.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="LMT"/>
<Bit constantName="MKT"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pda_flags" offset="16">
<Annotation>
<Comment>see enums above</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="DLL_OLA_UPDATE"/>
<Bit constantName="DLL_MANUAL_TRADE"/>
<Bit constantName="DLL_PRIN_EXEC"/>
<Bit constantName="DLL_PRIN_TO_BLOCK"/>
<Bit constantName="DLL_ITS_NAME_CHG"/>
<Bit constantName="DLL_PRIN_TO_OPEN"/>
<Bit constantName="DLL_ITS_REPORT"/>
<Bit constantName="DLL_PRIN_TO_CROWD"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pda_dbk_linkno" offset="18">
<Annotation>
<Comment>link #</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="pda_settle_type" offset="20">
<Annotation>
<Comment>enum SETTLEMENTTYPE</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="pda_seller_days" offset="22">
<Annotation>
<Comment>=0 if not SELLERS_OPTION type</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="pda_contra_count" offset="24">
<Annotation>
<Comment>&lt;= N_CONTRA</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="pda_contra" offset="28">
<Annotation>
<Comment>(= 5 times)</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="5" cgen:expression="N_CONTRA">
<TypeOrTypeRef typeName="GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pda_tick" offset="88">
<Annotation>
<Comment>8 bit binary</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pda_tanum" offset="89">
<Annotation>
<Comment>6 char ascii TA #</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pda_firm" offset="95">
<Annotation>
<Comment>4 char ascii</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="FIRM_TXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pda_canned_cmt_1" offset="99">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pda_canned_cmt_2" offset="100">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pda_cmt_freeform" offset="101">
<Annotation>
<Comment>10 char comment</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="L_COMMENT"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pda_clearing_firm" offset="111">
<Annotation>
<Comment>Clearing firm</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="FIRM_TXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_DLL_BLOCKED_ACTIVITY_DATA" size="1976" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_BLOCKED_ACTIVITY_DATA.h">
<Members>
<DataMember name="pmb_activity_count" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmb_activity" offset="4">
<Annotation>
<Comment>limit size of msg sent between tasks</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="17" cgen:expression=" N_DLL_ACTIVITY ">
<TypeOrTypeRef typeName="PM_DLL_ACTIVITY_DATA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_DLL_START_DATA" size="24" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_DLL_START_DATA.h">
<Members>
<DataMember name="pmd_yday_close" offset="0">
<Annotation>
<Comment>Yesterdays closing last sale</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmd_position" offset="4">
<Annotation>
<Comment>Start position (in round-lots)</Comment>
</Annotation>
<TypeOrTypeRef typeName="SIGNED_QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmd_trd_spsym" offset="8">
<Annotation>
<Comment>4 char specialist trade firm name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmd_clr_spsym" offset="12">
<Annotation>
<Comment>specialist clearing firm</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmd_specialist_unit_num" offset="16">
<Annotation>
<Comment>specialist unit number</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmd_clearing_num" offset="18">
<Annotation>
<Comment>specialist clearing firm number</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmd_post" offset="20">
<Annotation>
<Comment>8 bit binary</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmd_tee" offset="21">
<Annotation>
<Comment>1 char ascii</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_DROP_STOCK_DATA" size="28" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_DROP_STOCK_DATA.h">
<Members>
<DataMember name="sp_routing" offset="0">
<Annotation>
<Comment>routing info: firm, stock, book</Comment>
</Annotation>
<TypeOrTypeRef typeName="SP_ROUTING_DATA" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_EOD_END_DATA" size="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_EOD_END_DATA.h">
<Members>
<DataMember name="pm_endStatus" offset="0">
<Annotation>
<Comment>eod filing complete status</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="PM_MRO_COMPLETE"/>
<Bit constantName="PM_POSITION_UPLOAD_COMPLETE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_FIND_REQ_DATA" size="40" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_FIND_REQ_DATA.h">
<Members>
<DataMember name="pmf_recs_per_update" offset="0">
<Annotation>
<Comment>Number of trade detail recs client wants in response</Comment>
</Annotation>
<TypeOrTypeRef typeName="size_t" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmf_type" offset="4">
<Annotation>
<Comment>The type of find, see above</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_FIND_TYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="pmf_side" offset="8">
<Annotation>
<Comment>The side (BUY and/or SELL), see param.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmf_price" offset="12">
<Annotation>
<Comment>The price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmf_firm" offset="16">
<Annotation>
<Comment>A contra</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmf_badge" offset="20">
<Annotation>
<Comment>A badge id</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmf_start_time" offset="24">
<Annotation>
<Comment>Begining time</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmf_end_time" offset="28">
<Annotation>
<Comment>Ending time</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmf_sort_type" offset="32">
<Annotation>
<Comment>Sort by, see above</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_SORTTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="pmf_sort_order" offset="36">
<Annotation>
<Comment>Sort order, see above</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_SORTORDER" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_ITS_NAME_CHANGE_DATA" size="32" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_ITS_NAME_CHANGE_DATA.h">
<Members>
<DataMember name="m_qty" offset="0">
<Annotation>
<Comment>The qty</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_linkno" offset="4">
<Annotation>
<Comment>The link number</Comment>
</Annotation>
<TypeOrTypeRef typeName="LINKNO" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_tick" offset="6">
<Annotation>
<Comment>0-4</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_time" offset="8">
<Annotation>
<Comment>The time of the manual trade</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_writeInTime" offset="12">
<Annotation>
<Comment>The write in time or MILLITIME_MAX</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_comment1" offset="16">
<Annotation>
<Comment>A canned comment code</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_comment2" offset="17">
<Annotation>
<Comment>A canned comment code</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_freeComm" offset="18">
<Annotation>
<Comment>A free form comment</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="FC_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_contraName" offset="28">
<Annotation>
<Comment>Contra give-up name for an ITS market center</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_MANUAL_TRADE_DATA" size="48" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_MANUAL_TRADE_DATA.h">
<Members>
<DataMember name="pmm_side" offset="0">
<Annotation>
<Comment>The side</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmm_qty" offset="4">
<Annotation>
<Comment>The qty in shares</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmm_price" offset="8">
<Annotation>
<Comment>The price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmm_time" offset="12">
<Annotation>
<Comment>The time of the manual trade</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmm_write_in_time" offset="16">
<Annotation>
<Comment>The write in time or 0 (for insertion purposes)</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmm_giveup" offset="20">
<Annotation>
<Comment>A giveup in the trade</Comment>
</Annotation>
<TypeOrTypeRef typeName="GIVEUP_SHRS" typeKind="Struct"/>
</DataMember>
<DataMember name="pmm_tick" offset="32">
<Annotation>
<Comment>A tick code: '0' - '4'</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmm_comment1" offset="33">
<Annotation>
<Comment>A canned comment</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmm_comment2" offset="34">
<Annotation>
<Comment>Another canned comment</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmm_free_comm" offset="35">
<Annotation>
<Comment>A free form comment</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="FC_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_MSG_REJECT_DATA" size="8" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_MSG_REJECT_DATA.h">
<Members>
<DataMember name="m_msg_type" offset="0">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_reason" offset="4">
<TypeOrTypeRef typeName="PM_MSG_REJECT_REASON" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_ODD_LOT_LIST_REC" size="24" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_ODD_LOT_UPDATE_DATA.h">
<Members>
<DataMember name="pmr_stkid" offset="0">
<Annotation>
<Comment>The stock's id</Comment>
</Annotation>
<TypeOrTypeRef typeName="STKID" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_bought" offset="4">
<Annotation>
<Comment>Num prin bought</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_sold" offset="8">
<Annotation>
<Comment>Num prin sold</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_net_chg_pos" offset="12">
<Annotation>
<Comment>Change in prin's position</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSITION" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_odd_pmr_bought" offset="16">
<Annotation>
<Comment>Number of odd lots prin bought (in lots)</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_odd_pmr_sold" offset="20">
<Annotation>
<Comment>Number of odd lots prin</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_ODD_LOT_REQ_DATA" size="60" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_ODD_LOT_REQ_DATA.h">
<Members>
<DataMember name="pml_recs_per_update" offset="0">
<Annotation>
<Comment>How many stocks per update (1-N_STOCKS)</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pml_num_stocks" offset="2">
<Annotation>
<Comment>Zero or number of stocks in pml_stocks</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pml_stocks" offset="4">
<Annotation>
<Comment>Optionally used to restrict stocks to subset of workstation</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="28" cgen:expression="N_STOCKS">
<TypeOrTypeRef typeName="STKID" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_ODD_LOT_UPDATE_DATA" size="720" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_ODD_LOT_UPDATE_DATA.h">
<Members>
<DataMember name="pmo_handle" offset="0">
<Annotation>
<Comment>Client's screen handle</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmo_long_value" offset="8">
<Annotation>
<Comment>Prin's total long value</Comment>
</Annotation>
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmo_short_value" offset="16">
<Annotation>
<Comment>Prin's total short value</Comment>
</Annotation>
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmo_net_value" offset="24">
<Annotation>
<Comment>Prin's net value</Comment>
</Annotation>
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmo_p_and_l" offset="32">
<Annotation>
<Comment>Prin's total P&amp;L</Comment>
</Annotation>
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmo_flags" offset="40">
<Annotation>
<Comment>More above, below. See pos_types.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="PM_MORE_BELOW"/>
<Bit constantName="PM_MORE_ABOVE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmo_num_recs" offset="42">
<Annotation>
<Comment>Number of records in pmo_records</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmo_records" offset="44">
<Annotation>
<Comment>Records, see above</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="28" cgen:expression="N_STOCKS">
<TypeOrTypeRef typeName="PM_ODD_LOT_LIST_REC" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_OFF_SCREEN_DATA" size="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_OFF_SCREEN_DATA.h">
<Members>
<DataMember name="pmo_handle" offset="0">
<Annotation>
<Comment>Screen's handle</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_POSITION_UPLOAD_DATA" size="388" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_POSITION_UPLOAD_DATA.h">
<Members>
<DataMember name="pmc_symbol" offset="0">
<Annotation>
<Comment>routing symbol</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmc_filler1" offset="11">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmc_version" offset="12">
<Annotation>
<Comment>"CP01"=CLOSING POSITION VERSION 01</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="VERSION_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmc_rec_len" offset="16">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="RECORD_LENGTH_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmc_filler2" offset="22">
<TypeOrTypeRef>
<Symbol size="5"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmc_stk_count" offset="27">
<Annotation>
<Comment>Binary 8</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmc_records" offset="28">
<TypeOrTypeRef>
<Array numElements="20" cgen:expression="MAX_STK_RECORD">
<TypeOrTypeRef typeName="PM_STOCK_CLOSING_POSITION_DATA" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_PRIN_UPDATE_DATA" size="8" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PRIN_UPDATE_DATA.h">
<Members>
<DataMember name="pmp_handle" offset="0">
<Annotation>
<Comment>Handle of client's screen</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmp_position" offset="4">
<Annotation>
<Comment>Prin's new position</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSITION" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_PRINT_TRADE_LIST_REQ_DATA" size="68" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PRINT_TRADE_LIST_REQ_DATA.h">
<Members>
<DataMember name="ptr_handle" offset="0">
<Annotation>
<Comment>XClient handle</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ptr_printer_name" offset="2">
<Annotation>
<Comment>which printer to use, default if empty (""): NULL terminated c_str</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="65" cgen:expression="MAXHOSTNAMELEN + 1"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_PRINT_TRADE_LIST_UPDATE_DATA" size="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PRINT_TRADE_LIST_UPDATE_DATA.h">
<Members>
<DataMember name="pr_status" offset="0">
<Annotation>
<Comment>the printing request status</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_PRINT_TRADE_LIST_STATUS" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_PROXY_CONFIG_DATA" size="26" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PROXY_CONFIG_DATA.h">
<Members>
<DataMember name="m_firm" offset="0">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_stockname" offset="4">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_ws" offset="16">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_book" offset="18">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="NUM_ENTITY"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_PROXY_RESP_DATA" size="256" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PROXY_RESP_DATA.h">
<Members>
<DataMember name="m_handle" offset="0">
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_firm_name" offset="2">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_data_type" offset="8">
<TypeOrTypeRef typeName="SummaryDataType" typeKind="Enumeration"/>
</DataMember>
<DataMember name="m_position" offset="12">
<TypeOrTypeRef typeName="PositionSummaryData" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_REC_CANCEL_DATA" size="20" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_CANCEL_DATA.h">
<Members>
<DataMember name="pme_handle" offset="0">
<Annotation>
<Comment>Handle of screen driving cancel</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pme_key" offset="4">
<Annotation>
<Comment>Key of rec being canceled</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTKEY" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_REC_DETAIL_REQ_DATA" size="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_DETAIL_REQ_DATA.h">
<Members>
<DataMember name="pmr_key" offset="0">
<Annotation>
<Comment>The activity record's key</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTKEY" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_REC_DETAIL_UPDATE_DATA" size="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_DETAIL_UPDATE_DATA.h">
<Members>
<DataMember name="pmd_handle" offset="0">
<Annotation>
<Comment>Handle of detail screen</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_REC_EDIT_ABORT_DATA" size="20" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_ABORT_DATA.h">
<Members>
<DataMember name="pme_handle" offset="0">
<Annotation>
<Comment>Screen managing lock</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pme_key" offset="4">
<Annotation>
<Comment>Key of rec with lock</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTKEY" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_REC_EDIT_ACK_DATA" size="16" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_ACK_DATA.h">
<Members>
<DataMember name="pma_key" offset="0">
<Annotation>
<Comment>Key of record locked</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTKEY" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_REC_EDIT_NACK_DATA" size="20" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_NACK_DATA.h">
<Members>
<DataMember name="pmn_key" offset="0">
<Annotation>
<Comment>Key of record already locked</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTKEY" typeKind="Struct"/>
</DataMember>
<DataMember name="pmn_reason" offset="16">
<Annotation>
<Comment>Why edit request was nacked</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_REC_EDIT_NACK_REASON" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_REC_EDIT_REQ_DATA" size="40" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_REQ_DATA.h">
<Members>
<DataMember name="pme_handle" offset="0">
<Annotation>
<Comment>Screen requesting lock</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pme_key" offset="4">
<Annotation>
<Comment>Key of record to lock</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTKEY" typeKind="Struct"/>
</DataMember>
<DataMember name="pme_detail" offset="20">
<Annotation>
<Comment>record detail information</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_DETAIL_REC" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_REC_EDIT_SAVE_DATA" size="148" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h">
<Members>
<DataMember name="pme_handle" offset="0">
<Annotation>
<Comment>Screen sending update. (required)</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pme_change_mask" offset="4">
<Annotation>
<Comment>What changed, see above.</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="ULONG" size="4">
<Bit constantName="EDIT_CORRECTION"/>
<Bit constantName="EDIT_CONTRAS"/>
<Bit constantName="EDIT_FREE_FORM"/>
<Bit constantName="EDIT_COMM2"/>
<Bit constantName="EDIT_COMM1"/>
<Bit constantName="EDIT_TIME"/>
<Bit constantName="EDIT_TICK"/>
<Bit constantName="EDIT_PRICE"/>
<Bit constantName="EDIT_SIDE"/>
<Bit constantName="EDIT_TYPE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pme_key" offset="8">
<Annotation>
<Comment>Key of record being changed. (required)</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTKEY" typeKind="Struct"/>
</DataMember>
<DataMember name="pme_type" offset="24">
<Annotation>
<Comment>New activity type if pme_change_mask &amp; EDIT_TYPE</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="pme_correction" offset="28">
<Annotation>
<Comment>New correction type if pme_change_mask &amp; EDIT_CORRECTION</Comment>
</Annotation>
<TypeOrTypeRef typeName="CORRECTIONTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="pme_side" offset="32">
<Annotation>
<Comment>New side if pme_change_mask &amp; EDIT_SIDE</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pme_price" offset="36">
<Annotation>
<Comment>New price if pme_change_mask &amp; EDIT_PRICE</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pme_tick" offset="40">
<Annotation>
<Comment>New tick (0-4) if pme_change_mask &amp; EDIT_TICK</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pme_write_in_time" offset="44">
<Annotation>
<Comment>New time if pme_change_mask &amp; EDIT_TIME</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="pme_comment1" offset="48">
<Annotation>
<Comment>New comment1 if pme_change_mask &amp; EDIT_COMM1</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pme_comment2" offset="49">
<Annotation>
<Comment>New comment2 if pme_change_mask &amp; EDIT_COMM2</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pme_free_form_comment" offset="50">
<Annotation>
<Comment>New free comm if pme_change_mask /* &amp; EDIT_FREE_FORM</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pme_num_contras" offset="60">
<Annotation>
<Comment>New contra count if pme_change_mask</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pme_contras" offset="64">
<Annotation>
<Comment>New contras if pme_change_mask</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="MAX_U_GV">
<TypeOrTypeRef typeName="GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_RPT_LAST_SALE_DATA" size="8" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_RPT_LAST_SALE_DATA.h">
<Members>
<DataMember name="prl_last_sale" offset="0">
<Annotation>
<Comment>price of last sale</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="prl_tick" offset="4">
<Annotation>
<Comment>tick of last sale</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_SAX_ACTIVITY_DATA" size="148" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_SAX_ACTIVITY_DATA.h">
<Members>
<DataMember name="psx_tanum" offset="0">
<Annotation>
<Comment>6 char ascii TA #</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="psx_entering_firm" offset="6">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="psx_side" offset="10">
<Annotation>
<Comment>BUY or SELL (param.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="psx_qty" offset="12">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="psx_exec_price" offset="16">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="psx_ordtype" offset="20">
<Annotation>
<Comment>MKT or LMT.</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_MKT"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="psx_settlement" offset="24">
<Annotation>
<Comment>cash, nd, or seller's option terms</Comment>
</Annotation>
<TypeOrTypeRef typeName="SETTLEMENTTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="psx_sellerDays" offset="28">
<Annotation>
<Comment># of days for seller's option</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="psx_xch_gu" offset="30">
<Annotation>
<Comment>Give up that is used with Cash/ND/Settlement orders</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="psx_erc" offset="34">
<Annotation>
<Comment>? charcters</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="9" cgen:expression="ERC_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="psx_flags" offset="44">
<Annotation>
<Comment>see enums above</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="PM_SDOT_LINKNO"/>
<Bit constantName="PM_DBK_LINKNO"/>
<Bit constantName="PM_ITS_MODIFICATION"/>
<Bit constantName="PM_AWO_MODIFICATION"/>
<Bit constantName="PM_PRIN_MODIFICATION"/>
<Bit constantName="PM_CONTRA_CORRECTION"/>
<Bit constantName="PM_PRICE_CORRECTION"/>
<Bit constantName="PM_SAX_EXEC"/>
<Bit constantName="PM_SAX_BUST"/>
<Bit constantName="PM_SAX_POS_DUPE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="psx_prin_qty" offset="48">
<Annotation>
<Comment>if 0, prin is being removed</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="psx_contra_count" offset="52">
<Annotation>
<Comment>&lt;= MAX_SAX_GV</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
<DataMember name="psx_contra" offset="56">
<Annotation>
<Comment>(= 7 times)</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="MAX_SAX_GV">
<TypeOrTypeRef typeName="GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="psx_exe_time_milli" offset="140">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="psx_linkno" offset="144">
<Annotation>
<Comment>link # (SDOT or DBK; see flags)</Comment>
</Annotation>
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_SCROLL_REQ_DATA" size="8" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_SCROLL_REQ_DATA.h">
<Members>
<DataMember name="pms_handle" offset="0">
<Annotation>
<Comment>Screen to scroll</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_num_recs" offset="2">
<Annotation>
<Comment>Number of records to scroll and return</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pms_dir" offset="4">
<Annotation>
<Comment>Firection of scroll, see pos_types.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="SCROLL_DIR" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_SDOT_DBK_REJECT_DATA" size="56" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_SDOT_DBK_REJECT_DATA.h">
<Members>
<DataMember name="psx_error_code" offset="0">
<TypeOrTypeRef>
<Symbol size="3" cgen:expression="PSDR_ERROR_CODE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="psx_tanum" offset="3">
<Annotation>
<Comment>6 char ascii TA #</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="psx_dbklinkno" offset="10">
<Annotation>
<Comment>link #</Comment>
</Annotation>
<TypeOrTypeRef typeName="LINKNO" typeKind="Typedef"/>
</DataMember>
<DataMember name="psx_time_milli" offset="12">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="psx_error_message" offset="16">
<TypeOrTypeRef>
<Symbol size="40" cgen:expression="PSDR_ERROR_MESSAGE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_SET_USER_SORT_CRITERIA_DATA" size="64" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_SET_USER_SORT_CRITERIA_DATA.h">
<Members>
<DataMember name="ps_handle" offset="0">
<Annotation>
<Comment>Handle of sort control</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ps_sort_spec_size" offset="2">
<Annotation>
<Comment>Size of spec array</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ps_sort_spec" offset="4">
<Annotation>
<Comment>StkIds in order user wants</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="28" cgen:expression="N_STOCKS">
<TypeOrTypeRef typeName="STKID" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ps_sort_order" offset="60">
<Annotation>
<Comment>Indication of ordering used to create ps_sort_spec</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_SORT_ORDER" typeKind="Enumeration"/>
</DataMember>
<Constants>
<Enumerator name="PM_ASCENDING" value="0"/>
<Enumerator name="PM_DESCENDING" value="1"/>
<Enumerator name="PM_CUSTOM" value="2"/>
</Constants>
<NestedType/>
</Members>
</Struct>
<Enumeration name="PM_SORT_ORDER" size="4" cgen:namespace="Pos::Msgs::PM_SET_USER_SORT_CRITERIA_DATA">
<EnumeratorRef name="PM_ASCENDING"/>
<EnumeratorRef name="PM_DESCENDING"/>
<EnumeratorRef name="PM_CUSTOM"/>
</Enumeration>
<Struct name="PM_STOCK_CLOSING_POSITION_DATA" size="18" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_POSITION_UPLOAD_DATA.h">
<Members>
<DataMember name="pms_symbol" offset="0">
<Annotation>
<Comment>stock symbol</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pms_filler1" offset="11">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pms_closing_position" offset="12">
<Annotation>
<Comment>Binary 32</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pms_filler2" offset="16">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_STOCK_CONFIG_DATA" size="1404" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_STOCK_CONFIG_DATA.h">
<Members>
<DataMember name="pms_num_stocks" offset="0">
<Annotation>
<Comment>Number of Stocks in pms_num_stocks</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pms_stkids" offset="2">
<Annotation>
<Comment>Stock Ids</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="28" cgen:expression="N_STOCKS">
<TypeOrTypeRef typeName="STKID" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pms_stocks" offset="60">
<Annotation>
<Comment>Stock info</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="28" cgen:expression="N_STOCKS">
<TypeOrTypeRef typeName="STK_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_STOCK_LIST_REC" size="32" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_STOCK_LIST_UPDATE_DATA.h">
<Members>
<DataMember name="pmr_stkid" offset="0">
<TypeOrTypeRef typeName="STKID" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_bought" offset="4">
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_sold" offset="8">
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_net_chg_pos" offset="12">
<TypeOrTypeRef typeName="POSITION" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_p_and_l" offset="16">
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_net_chg_price" offset="24">
<TypeOrTypeRef typeName="PRICE_DIFFERENCE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_STOCK_LIST_REQ_DATA" size="60" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_STOCK_LIST_REQ_DATA.h">
<Members>
<DataMember name="pml_recs_per_update" offset="0">
<Annotation>
<Comment>How many stocks per update (1-N_STOCKS)</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pml_num_stocks" offset="2">
<Annotation>
<Comment>Zero or number of stocks in pml_stocks</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pml_stocks" offset="4">
<Annotation>
<Comment>Optionally used to restrict stocks to subset of workstation</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="28" cgen:expression="N_STOCKS">
<TypeOrTypeRef typeName="STKID" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_STOCK_LIST_UPDATE_DATA" size="944" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_STOCK_LIST_UPDATE_DATA.h">
<Members>
<DataMember name="pml_handle" offset="0">
<Annotation>
<Comment>Client's screen handle</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pml_long_value" offset="8">
<Annotation>
<Comment>Prin's total long value</Comment>
</Annotation>
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pml_short_value" offset="16">
<Annotation>
<Comment>Prin's total short value</Comment>
</Annotation>
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pml_net_value" offset="24">
<Annotation>
<Comment>Prin's net value</Comment>
</Annotation>
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pml_p_and_l" offset="32">
<Annotation>
<Comment>Prin's total P&amp;L</Comment>
</Annotation>
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pml_flags" offset="40">
<Annotation>
<Comment>More above, below. See pos_types.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="PM_MORE_BELOW"/>
<Bit constantName="PM_MORE_ABOVE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pml_num_recs" offset="42">
<Annotation>
<Comment>Number of records in pml_records</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pml_records" offset="48">
<Annotation>
<Comment>Records, see above</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="28" cgen:expression="N_STOCKS">
<TypeOrTypeRef typeName="PM_STOCK_LIST_REC" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_STOCK_SUMMARY_REQ_DATA" size="1" cgen:file="/mnt/pos.shrb/include/events/PM_STOCK_SUMMARY_REQ_DATA.h">
<Members/>
</Struct>
<Struct name="PM_STOCK_SUMMARY_UPDATE_DATA" size="64" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_STOCK_SUMMARY_UPDATE_DATA.h">
<Members>
<DataMember name="pms_handle" offset="0">
<Annotation>
<Comment>Handle of screen</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_start_pos" offset="4">
<Annotation>
<Comment>Prin's start position in shares</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSITION" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_bought" offset="8">
<Annotation>
<Comment>Prin bought this many shares today</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_sold" offset="12">
<Annotation>
<Comment>Prin sold this many shares today</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_net_pos" offset="16">
<Annotation>
<Comment>Prin's net position in shares</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSITION" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_odd_lot_bought" offset="20">
<Annotation>
<Comment>Prin bought this many shares of</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_odd_lot_sold" offset="24">
<Annotation>
<Comment>Prin sold this many shares of</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_net_price_chg" offset="28">
<Annotation>
<Comment>Stock's net price change</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="pms_last_sale" offset="32">
<Annotation>
<Comment>The stock's regular way last sale</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_yday_close" offset="36">
<Annotation>
<Comment>The stock's yesterday close</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_tick" offset="40">
<Annotation>
<Comment>The stock's tick, '+', '-' or ' '</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pms_net_value" offset="48">
<Annotation>
<Comment>Prin's net equity in the stock</Comment>
</Annotation>
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pms_p_and_l" offset="56">
<Annotation>
<Comment>Prin's profit and loss to date</Comment>
</Annotation>
<TypeOrTypeRef typeName="MONEY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_TRADE_LIST_REC" size="152" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_TRADE_LIST_UPDATE_DATA.h">
<Members>
<DataMember name="pmr_key" offset="0">
<Annotation>
<Comment>The record's key</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTKEY" typeKind="Struct"/>
</DataMember>
<DataMember name="pmr_type" offset="16">
<Annotation>
<Comment>The record's type</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="pmr_correction" offset="20">
<Annotation>
<Comment>The record's correction type</Comment>
</Annotation>
<TypeOrTypeRef typeName="CORRECTIONTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="pmr_side" offset="24">
<Annotation>
<Comment>The record's side</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmr_price" offset="28">
<Annotation>
<Comment>The record's price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_qty" offset="32">
<Annotation>
<Comment>The record's qty in shares</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_net_position" offset="36">
<Annotation>
<Comment>Prin's net position at this time</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSITION" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmr_settlement" offset="40">
<Annotation>
<Comment>The record's settlment, see pos_types.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="SETTLEMENTTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="pmr_sellers_setl_option" offset="44">
<Annotation>
<Comment>1-60 days, if pmr_settlement == SELLERS</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmr_num_contras" offset="46">
<Annotation>
<Comment>The number of contras in pmr_num_contras</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmr_contras" offset="48">
<Annotation>
<Comment>The contras</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="MAX_U_GV">
<TypeOrTypeRef typeName="GIVEUP_SHRS" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmr_detail" offset="132">
<Annotation>
<Comment>record detail information</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_DETAIL_REC" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_TRADE_LIST_STALE_DATA" size="1" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_TRADE_LIST_STALE_DATA.h">
<Members>
<DataMember name="pmt_flags" offset="0">
<Annotation>
<Comment>More records above, below. See pos_types.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="PM_MORE_BELOW"/>
<Bit constantName="PM_MORE_ABOVE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_TRADE_LIST_UPDATE_DATA" size="4576" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_TRADE_LIST_UPDATE_DATA.h">
<Members>
<DataMember name="pmt_handle" offset="0">
<Annotation>
<Comment>The screen handle</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmt_start_position" offset="4">
<Annotation>
<Comment>Prin's starting position in stock</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSITION" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmt_this_page_num" offset="8">
<Annotation>
<Comment>This update is page this_page_num</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmt_last_page_num" offset="10">
<Annotation>
<Comment>of last_page_num pages</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmt_flags" offset="12">
<Annotation>
<Comment>More above, below. See pos_types.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="PM_MORE_BELOW"/>
<Bit constantName="PM_MORE_ABOVE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pmt_num_recs" offset="14">
<Annotation>
<Comment>The number of rexords in pmt_records</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="pmt_records" offset="16">
<Annotation>
<Comment>The records</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="30" cgen:expression="PM_TRADE_LIST_MAX_SIZE">
<TypeOrTypeRef typeName="PM_TRADE_LIST_REC" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PM_YDAY_CLOSE_SAVE_DATA" size="8" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_YDAY_CLOSE_SAVE_DATA.h">
<Members>
<DataMember name="pmy_handle" offset="0">
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmy_yesterday_close" offset="4">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="PM_YDAY_CLOSE_UPDATE_DATA" size="8" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_YDAY_CLOSE_UPDATE_DATA.h">
<Members>
<DataMember name="pmy_handle" offset="0">
<Annotation>
<Comment>Screen handle</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pmy_new_yesterday_close" offset="4">
<Annotation>
<Comment>New close</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="POSHANDLE" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Struct name="PositionSummaryData" size="243" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PositionSummaryData.h">
<Members>
<DataMember name="m_time_stamp" offset="0">
<TypeOrTypeRef>
<Symbol size="32" cgen:expression="TIMESTAMP_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_stock_name" offset="32">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_book" offset="43">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="NUM_ENTITY"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_share_bought" offset="51">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="SHARE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_share_sold" offset="67">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="SHARE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_odd_lot_bought" offset="83">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="SHARE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_odd_lot_sold" offset="99">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="SHARE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_prior_day_clo_price" offset="115">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_last_sale_price" offset="131">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="PRICE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_openning_position" offset="147">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="SHARE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_net_position" offset="163">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="SHARE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_day_profit_loss" offset="179">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="VALUE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_net_change" offset="195">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="VALUE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_net_value" offset="211">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="VALUE_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_trade_unit" offset="227">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="TRADE_UNIT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="POSITION" size="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</Typedef>
<Struct name="PR_BEGIN_PRINT_JOB_DATA" size="580" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PR_BEGIN_PRINT_JOB_DATA.h">
<Members>
<DataMember name="m_qid" offset="0">
<Annotation>
<Comment>The queue that posPrint will use to talk back to sender</Comment>
</Annotation>
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_msgtype" offset="2">
<Annotation>
<Comment>The message posPrint will use to request more print data from sender</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_end_msgtype" offset="4">
<Annotation>
<Comment>The message posPrint will use to signal the end of the print job</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_page_req_data_size" offset="8">
<Annotation>
<Comment>The size of some sender defined data that should be sent when posPrint sends m_msgtype to sender</Comment>
</Annotation>
<TypeOrTypeRef typeName="size_t" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_printer_name" offset="12">
<Annotation>
<Comment>which printer to use, default if empty (""): NULL terminated c_str</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="65" cgen:expression="MAXHOSTNAMELEN + 1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_page_req_data" offset="77">
<Annotation>
<Comment>The data sender wants sent back</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="500" cgen:expression="PR_MAX_REQ_DATA_MAX_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PR_CANCEL_PRINT_JOB_DATA" size="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PR_CANCEL_PRINT_JOB_DATA.h">
<Members>
<DataMember name="m_job_no" offset="0">
<Annotation>
<Comment>The job number to cancel</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="PR_END_JOB_RESPONSE_DATA" size="502" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PR_END_JOB_RESPONSE_DATA.h">
<Members>
<DataMember name="m_status" offset="0">
<Annotation>
<Comment>The status of the job when completed</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_page_req_data" offset="2">
<TypeOrTypeRef>
<Symbol size="500" cgen:expression="PR_MAX_REQ_DATA_MAX_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PR_END_PRINT_JOB_DATA" size="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PR_END_PRINT_JOB_DATA.h">
<Members>
<DataMember name="m_job_no" offset="0">
<Annotation>
<Comment>The job number that is complete</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="PR_JOB_ACK_DATA" size="502" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PR_JOB_ACK_DATA.h">
<Members>
<DataMember name="m_job_no" offset="0">
<Annotation>
<Comment>The job number assined by posPrint</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_page_req_data" offset="2">
<TypeOrTypeRef>
<Symbol size="500" cgen:expression="PR_MAX_REQ_DATA_MAX_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PR_JOB_NACK_DATA" size="502" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PR_JOB_NACK_DATA.h">
<Members>
<DataMember name="m_reason" offset="0">
<Annotation>
<Comment>The reason job was rejected</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_page_req_data" offset="2">
<TypeOrTypeRef>
<Symbol size="500" cgen:expression="PR_MAX_REQ_DATA_MAX_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PR_PRINT_PAGE_DATA" size="1008" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PR_PRINT_PAGE_DATA.h">
<Members>
<DataMember name="m_job_no" offset="0">
<Annotation>
<Comment>The job number that this data is for</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_more_for_page" offset="2">
<Annotation>
<Comment>bool: 0 if this is a full page, non 0 if more to come</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_page_text_size" offset="4">
<Annotation>
<Comment>Size of character page buffer</Comment>
</Annotation>
<TypeOrTypeRef typeName="size_t" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_page_text" offset="8">
<Annotation>
<Comment>Text to be streamed to printer</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="1000" cgen:expression="PR_MAX_PAGE_TEXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PRE_TEXT_ORDER_ENTRY" size="8" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Members>
<DataMember name="pt_oe_date" offset="0">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pt_oe_time" offset="2">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pt_filler" offset="6">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="PRE_TEXT_ORDER_ENTRY" size="8" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<TypeOrTypeRef typeName="PRE_TEXT_ORDER_ENTRY" typeKind="Struct"/>
</Typedef>
<Struct name="PRE_TEXT_TA" size="8" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Members>
<DataMember name="pt_alpha_ta" offset="0">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pt_number_ta" offset="4">
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="PRE_TEXT_TA" size="8" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<TypeOrTypeRef typeName="PRE_TEXT_TA" typeKind="Struct"/>
</Typedef>
<Struct name="PRE_TEXT" size="24" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Members>
<DataMember name="pt_crd_type" offset="0">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pt_ext_crd" offset="1">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pt_union" offset="2">
<TypeOrTypeRef typeName="PRE_TEXT::{unnamed.union.1}" typeKind=""/>
</DataMember>
<DataMember name="pt_post" offset="10">
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pt_tilde" offset="12">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pt_symbol" offset="13">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<Constants/>
<NestedType>
<Union size="8" discriminator="undefined">
<Members>
<Member name="pt_ta" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="PRE_TEXT_TA" typeKind="Struct"/>
</Member>
<Member name="pt_oe" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="PRE_TEXT_ORDER_ENTRY" typeKind="Struct"/>
</Member>
</Members>
</Union>
</NestedType>
</Members>
</Struct>
<Typedef name="PRE_TEXT" size="24" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<TypeOrTypeRef typeName="PRE_TEXT" typeKind="Struct"/>
</Typedef>
<Struct name="PREDEF_CLASS_INFO" size="8" cgen:file="/mnt/pos.shrb/include/events/PREDEF_CLASS_REG.h">
<Members>
<DataMember name="pc_index" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="pc_qid" offset="4">
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="PREDEF_CLASS_REG" size="248" cgen:file="/mnt/pos.shrb/include/events/PREDEF_CLASS_REG.h">
<Members>
<DataMember name="pcr_clone" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="pcr_count" offset="4">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="pcr_classes" offset="8">
<TypeOrTypeRef>
<Array numElements="30" cgen:expression="MAX_PREDEFINED_CLASSES">
<TypeOrTypeRef typeName="PREDEF_CLASS_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PRICE_BREAKS" size="12" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<Members>
<DataMember name="pb_bp" offset="0">
<TypeOrTypeRef>
<Array numElements="3">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="PRICE_BREAKS" size="12" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<TypeOrTypeRef typeName="PRICE_BREAKS" typeKind="Struct"/>
</Typedef>
<Typedef name="PRICE_DENOM" size="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Typedef name="PRICE_DIFFERENCE" size="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</Typedef>
<Typedef name="PRICE_INFO" size="12" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<TypeOrTypeRef typeName="PRICE_INFO" typeKind="Union"/>
</Typedef>
<Union name="PRICE_INFO" size="12" discriminator="undefined" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<Members>
<DataMember name="pi_price_breaks" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="PRICE_BREAKS" typeKind="Struct"/>
</DataMember>
<DataMember name="pi_foreign_ords" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="FOREIGN_ORDS" typeKind="Struct"/>
</DataMember>
</Members>
</Union>
<Struct name="PRICE_TOTS" size="36" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Members>
<DataMember name="pt_flags" offset="0">
<Annotation>
<Comment>bit mask. has side:(BUY, SELL), has highlight. (see above)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="PT_SP_HI_2"/>
<Bit constantName="PT_NEW_PRICE_HI"/>
<Bit constantName="PT_SL_HI"/>
<Bit constantName="PT_STP_HI"/>
<Bit constantName="PT_LOC_HI"/>
<Bit constantName="PT_OPG_HI"/>
<Bit constantName="PT_AON_HI"/>
<Bit constantName="PT_LMT_HI"/>
<Bit constantName="PT_TICK_HI"/>
<Bit constantName="PT_HI_2"/>
<Bit constantName="PT_TICK_BETTER"/>
<Bit constantName="PT_TICK_EXISTS"/>
<Bit constantName="PT_STOP_NE"/>
<Bit constantName="PT_LN_UPDATE"/>
<Bit constantName="PT_HI"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pt_price" offset="4">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="pt_lmtqty" offset="8">
<Annotation>
<Comment>limit quantity @price</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pt_aonqty" offset="12">
<Annotation>
<Comment>aon quantity @price (*)</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pt_stpqty" offset="16">
<Annotation>
<Comment>stop quantity @price (*)</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pt_slqty" offset="20">
<Annotation>
<Comment>stop limit quantity @price(*)</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pt_locqty" offset="24">
<Annotation>
<Comment>limit on close quantity @ price (*)</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pt_lopgqty" offset="28">
<Annotation>
<Comment>limit opg quantity @price</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="pt_aopgqty" offset="32">
<Annotation>
<Comment>AON opg quantity @price (*)</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<Constants>
<Enumerator name="PT_HI" value="0" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>entire line highlight</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_LN_UPDATE" value="1" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>line update, as opposed to part of summary screen</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_STOP_NE" value="2" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>there are stop limits with differing lmt &amp; stop prices</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_TICK_EXISTS" value="3" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>filed ticks exist at this price (and none better)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_TICK_BETTER" value="4" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>filed ticks exist at this or better pri; (may include market) skip 0x20 and 0x40 for BUY and SELL</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_HI_2" value="5" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>overrides PT_HI on side of PRICE_TOT</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_SP_HI_2" value="6"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="PT_HI"/>
<EnumeratorRef name="PT_LN_UPDATE"/>
<EnumeratorRef name="PT_STOP_NE"/>
<EnumeratorRef name="PT_TICK_EXISTS"/>
<EnumeratorRef name="PT_TICK_BETTER"/>
<EnumeratorRef name="PT_HI_2"/>
<EnumeratorRef name="PT_SP_HI_2"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Typedef name="PRICE" size="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Typedef name="PRIN_ACT_P" size="26" cgen:file="/mnt/pos.shrb/include/events/PRIN_ACT.h">
<TypeOrTypeRef typeName="PRIN_ACT" typeKind="Struct"/>
</Typedef>
<Struct name="PRIN_ACT" size="26" cgen:file="/mnt/pos.shrb/include/events/PRIN_ACT.h">
<Members>
<DataMember name="pa_write_in_time" offset="0">
<Annotation>
<Comment>HHMMSShh</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="WT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pa_tick" offset="8">
<Annotation>
<Comment>"0"=no tick,</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="pa_comm_code" offset="9">
<Annotation>
<Comment>two character code</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="CC_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pa_free_comm" offset="11">
<Annotation>
<Comment>free form comments</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="FC_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pa_dbk_linkage" offset="21">
<Annotation>
<Comment>linkage number for group rpt</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="5" cgen:expression="DBL_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="WT_SIZE" value="0"/>
<Enumerator name="CC_SIZE" value="1"/>
<Enumerator name="FC_SIZE" value="2"/>
<Enumerator name="DBL_SIZE" value="3"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="WT_SIZE"/>
<EnumeratorRef name="CC_SIZE"/>
<EnumeratorRef name="FC_SIZE"/>
<EnumeratorRef name="DBL_SIZE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="PRIN_TO_CROWD" size="244" cgen:file="/mnt/pos.shrb/include/events/PRIN_TO_CROWD.h">
<Members>
<DataMember name="pc_pss_header" offset="0">
<TypeOrTypeRef typeName="OE_PSS_HEADER" typeKind="Struct"/>
</DataMember>
<DataMember name="pc_msg_header" offset="12">
<TypeOrTypeRef typeName="OE_MSG_HEADER_EXPANDED" typeKind="Struct"/>
</DataMember>
<DataMember name="pc_template_a" offset="36">
<TypeOrTypeRef typeName="OE_TEMPLATE_A_EXPANDED" typeKind="Struct"/>
</DataMember>
<DataMember name="pc_awo" offset="92">
<TypeOrTypeRef typeName="OE_AWO" typeKind="Struct"/>
</DataMember>
<DataMember name="pc_disp_fields" offset="240">
<TypeOrTypeRef typeName="OE_DISP_FIELDS" typeKind="Struct"/>
</DataMember>
<Constants/>
<NestedType>
<Typedef name="OE_AWO" size="148">
<TypeOrTypeRef typeName="OE_AWO" typeKind="Struct"/>
</Typedef>
</NestedType>
</Members>
</Struct>
<Struct name="PROC_REG_MSG" size="64" cgen:file="/mnt/pos.shrb/include/events/GOV_REG_MSG.h">
<Members>
<DataMember name="mpa" offset="0">
<Annotation>
<Comment>as rcv'd from MtGetProcAddress()</Comment>
</Annotation>
<TypeOrTypeRef typeName="MtProcAddress" typeKind="Struct"/>
</DataMember>
<DataMember name="cc" offset="60">
<Annotation>
<Comment>process cmd-qid</Comment>
</Annotation>
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="ProcClass" size="4" cgen:file="/mnt/pos.shrb/include/events/gov.h">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</Typedef>
<Struct name="ProcIdentity" size="24" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/gov.h">
<Members>
<DataMember name="m_userValue" offset="0">
<TypeOrTypeRef typeName="UserValueType" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_class" offset="4">
<TypeOrTypeRef typeName="ProcClass" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_name" offset="8">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="NAMESIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="ProcReg" size="28" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/gov.h">
<Members>
<DataMember name="m_pid" offset="0">
<TypeOrTypeRef typeName="pid_t" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_qid" offset="4">
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_class" offset="8">
<TypeOrTypeRef typeName="ProcClass" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_name" offset="12">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="NAMESIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="PROMPT_DATA" size="20" cgen:file="/mnt/pos.shrb/include/events/PROMPT_DATA.h">
<Members>
<DataMember name="pd_prompt" offset="0">
<Annotation>
<Comment>Prompts: See PROMPT_DATA_XXXX above</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="PROMPT_DATA_SELL_MKT"/>
<Bit constantName="PROMPT_DATA_BUY_MKT"/>
<Bit constantName="PROMPT_DATA_SELL_STP"/>
<Bit constantName="PROMPT_DATA_BUY_STP"/>
<Bit constantName="PROMPT_DATA_STP_LMT"/>
<Bit constantName="PROMPT_DATA_TICK"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pd_stp_qty" offset="4">
<Annotation>
<Comment>Qty for PROMPT_DATA_BUY_STP and/or PROMPT_DATA_SELL_STP</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="pd_mkt_qty" offset="12">
<Annotation>
<Comment>Qty for PROMPT_DATA_BUY_MKT and/or PROMPT_DATA_SELL_MKT</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="Q_DEF" size="18" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h">
<Members>
<DataMember name="name" offset="0">
<Annotation>
<Comment>q_name &lt;--&gt;</Comment>
</Annotation>
<TypeOrTypeRef typeName="OBJNAME" typeKind="Typedef"/>
</DataMember>
<DataMember name="gqid" offset="16">
<Annotation>
<Comment>coresponding gqid</Comment>
</Annotation>
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="Q_XREF" size="18" cgen:file="/mnt/pos.shrb/include/events/Q_XREF.h">
<Members>
<DataMember name="qx_name" offset="0">
<TypeOrTypeRef>
<Symbol size="16"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qx_ident" offset="16">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="QID" size="2" cgen:file="/mnt/pos.shrb/include/mgt/mman/mman.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Typedef name="QTY" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Struct name="QUOTE_ASSIST_CEASE_TIMESTAMP_DATA" size="332" cgen:file="/mnt/pos.shrb/include/events/QUOTE_ASSIST_CEASE_TIMESTAMP_DATA.h">
<Members>
<DataMember name="qt_date" offset="0">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="YYYYMMDD_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qt_time" offset="8">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="HHMMSSSS_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qt_symbol" offset="16">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="SYMBOL_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qt_reason" offset="28">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="qt_num_ta" offset="30">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="qt_ta_list" offset="32">
<TypeOrTypeRef>
<Array numElements="50" cgen:expression="MAX_NUM_QA_TS_TAS">
<TypeOrTypeRef>
<Symbol size="6"/>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="QUOTE_ASSIST_TIMESTAMP_DATA" size="52" cgen:file="/mnt/pos.shrb/include/events/QUOTE_ASSIST_TIMESTAMP_DATA.h">
<Members>
<DataMember name="qt_order_indicator" offset="0">
<Annotation>
<Comment>Q(uotable), M(arketable), U(ntimed)</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="qt_date" offset="1">
<Annotation>
<Comment>Date</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="YYYYMMDD_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qt_time" offset="9">
<Annotation>
<Comment>Time</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="HHMMSSSS_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qt_symbol" offset="17">
<Annotation>
<Comment>Stock Symbol</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="SYMBOL_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qt_ta" offset="28">
<Annotation>
<Comment>Ta number</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qt_lock_indicator" offset="34">
<Annotation>
<Comment>B(ook lock), P(rojected Quote Lock), ' '(Not locked)</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="qt_shares" offset="36">
<Annotation>
<Comment>Total shares in the order (quantity + odd lot)</Comment>
</Annotation>
<TypeOrTypeRef typeName="SHARES" typeKind="Typedef"/>
</DataMember>
<DataMember name="qt_type" offset="40">
<Annotation>
<Comment>Order type mask</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="OC"/>
<Bit constantName="LMT_OPG"/>
<Bit constantName="OVR_NITE"/>
<Bit constantName="SS_EXEMPT"/>
<Bit constantName="SELL_SHORT"/>
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qt_price" offset="44">
<Annotation>
<Comment>Limit or File Price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="qt_reason" offset="48">
<Annotation>
<Comment>?? Need table</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Enumeration name="QUOTE_DEPTH" size="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_REQ_DATA.h">
<EnumeratorRef name="DEPTH_NONE"/>
<EnumeratorRef name="DEPTH_BID"/>
<EnumeratorRef name="DEPTH_OFFER"/>
<EnumeratorRef name="DEPTH_BOTH"/>
</Enumeration>
<Enumeration name="quote_hi_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="quote_hilite_off"/>
<EnumeratorRef name="quote_hilite_on"/>
</Enumeration>
<Typedef name="QUOTE_INFO_P" size="8" cgen:file="/mnt/pos.shrb/include/events/QUOTE_INFO.h">
<TypeOrTypeRef typeName="QUOTE_INFO" typeKind="Struct"/>
</Typedef>
<Struct name="QUOTE_INFO" size="8" cgen:file="/mnt/pos.shrb/include/events/QUOTE_INFO.h">
<Members>
<DataMember name="qi_price" offset="0">
<Annotation>
<Comment>auto stp stk reporting</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="qi_qty" offset="4">
<Annotation>
<Comment>units of trade</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="QUOTE_INIT_RSP_DATA" size="8" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/QUOTE_INIT_RSP_DATA.h">
<Members>
<DataMember name="qir_depth" offset="0">
<Annotation>
<Comment>the depth of the quote</Comment>
</Annotation>
<TypeOrTypeRef typeName="QUOTE_DEPTH" typeKind="Enumeration"/>
</DataMember>
<DataMember name="qir_parityDivisor" offset="4">
<Annotation>
<Comment>bid and offer parity divisors</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="QUOTE_MSG" size="56" cgen:file="/mnt/pos.shrb/include/events/QUOTE_MSG.h">
<Members>
<DataMember name="qm_bidCond" offset="0">
<Annotation>
<Comment>bid condition</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="qm_askCond" offset="1">
<Annotation>
<Comment>ask condition</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="qm_exch" offset="2">
<Annotation>
<Comment>away market exchange</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="qm_bidPrice" offset="8">
<Annotation>
<Comment>bid price</Comment>
</Annotation>
<TypeOrTypeRef typeName="MMP_PRICE" typeKind="Struct"/>
</DataMember>
<DataMember name="qm_bidSize" offset="24">
<Annotation>
<Comment>number of units desired</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="qm_bidBetterThanNyse" offset="28">
<Annotation>
<Comment>bid is better than nyse bid (1 or 0 )</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="qm_askPrice" offset="32">
<Annotation>
<Comment>asking price</Comment>
</Annotation>
<TypeOrTypeRef typeName="MMP_PRICE" typeKind="Struct"/>
</DataMember>
<DataMember name="qm_askSize" offset="48">
<Annotation>
<Comment>number of units offered</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="qm_askBetterThanNyse" offset="52">
<Annotation>
<Comment>ask is better than nyse bid ( 1 or 0 )</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="QUOTE_REQ_DATA" size="2" cgen:file="/mnt/pos.shrb/include/events/QUOTE_REQ_DATA.h">
<Members>
<DataMember name="qr_flags" offset="0">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="QRF_GET_QUOTE_REDUCE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="QR_BEST_BOOK_AFTER_REDUCE" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="QR_BEST_BOOK_AFTER_REDUCE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="QUOTE_RSP_DATA" size="32" cgen:file="/mnt/pos.shrb/include/events/QUOTE_RSP_DATA.h">
<Members>
<DataMember name="qr_quote_info" offset="0">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="QUOTE_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qr_quote_reduce_info" offset="16">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="QUOTE_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="QUOTE_TIMER" size="36" cgen:file="/mnt/pos.shrb/include/events/QUOTE_TIMER.h">
<Members>
<DataMember name="driving_ta_" offset="0">
<Annotation>
<Comment>TA of original timed order</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="7" cgen:expression="TA_SIZE+1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="posting_time_" offset="7">
<Annotation>
<Comment>ascii rep of time timer was posted</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="9" cgen:expression="ASCII_TIME_LEN+1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="timer_secs_" offset="16">
<Annotation>
<Comment>ascii rep of num secs timer was out</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="3" cgen:expression="ASCII_SEC_LEN+1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="expected_arrival_time_" offset="19">
<Annotation>
<Comment>ascii rep of time expected back</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="9" cgen:expression="ASCII_TIME_LEN+1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="eqa_info_" offset="28">
<Annotation>
<Comment>Contains three fields seperated by spaces indiacting EQA state when timer went out: Q or M or U (unset) - EQA locked_or_inverted flag when timer went out P1 or P2 - priority S1 or S2 - stage of timer</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="EQA_INFO_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="QUOTE" size="20" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Members>
<DataMember name="qu_mode" offset="0">
<Annotation>
<Comment>quote_mode</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="QM_AQ_CANCEL"/>
<Bit constantName="QM_AQ_DIRECT"/>
<Bit constantName="QM_ASSIST"/>
<Bit constantName="QM_RPT"/>
<Bit constantName="QM_NF"/>
<Bit constantName="QM_FT"/>
<Bit constantName="QM_DD"/>
<Bit constantName="QM_DO"/>
<Bit constantName="QM_DB"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="qu_quote" offset="4">
<Annotation>
<Comment>bid and offer price and size</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="QUOTE_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="QM_DB" value="0" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>depth bid</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_DO" value="1" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>depth offer</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_DD" value="2" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>depth bid - depth offer</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_FT" value="3" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>fast</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_NF" value="4" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>non-firm</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_RPT" value="5" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>quote from rpt</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_ASSIST" value="6" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>Assisted quote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_AQ_DIRECT" value="7" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>Direct+ AutoQuote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_AQ_CANCEL" value="8" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>Direct+ Cancel AutoQuote</Comment>
</Annotation>
</Enumerator>
<Enumerator name="QM_AQ_XPRESS" value="9" cgen:file="/mnt/pos.shrb/include/events/QUOTE.h">
<Annotation>
<Comment>XPress AutoQuote</Comment>
</Annotation>
</Enumerator>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="QM_DB"/>
<EnumeratorRef name="QM_DO"/>
<EnumeratorRef name="QM_DD"/>
<EnumeratorRef name="QM_FT"/>
<EnumeratorRef name="QM_NF"/>
<EnumeratorRef name="QM_RPT"/>
<EnumeratorRef name="QM_ASSIST"/>
<EnumeratorRef name="QM_AQ_DIRECT"/>
<EnumeratorRef name="QM_AQ_CANCEL"/>
<EnumeratorRef name="QM_AQ_XPRESS"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="REAL_NAMES_REJ_DATA" size="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_REJ_DATA.h">
<Members>
<DataMember name="rnj_error" offset="0">
<Annotation>
<Comment>see enum for Real Names in PosDefs.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="RPR_RNP_OFFER"/>
<Bit constantName="RPR_RNP_BID"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="REAL_NAMES_REQ_DATA" size="204" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_REQ_DATA.h">
<Members>
<DataMember name="rn_side" offset="0">
<Annotation>
<Comment>BUY, SELL (bitmask in param.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_cond" offset="2">
<Annotation>
<Comment>see above for conditions</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="RN_WITH_QUOTE_OVERLAY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_giveup_count" offset="4">
<Annotation>
<Comment>number of giveups for both side</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_crowd_giveups" offset="8">
<Annotation>
<Comment>Max number of giveups in a Real Names</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef>
<Array numElements="6">
<TypeOrTypeRef typeName="GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_quote" offset="152">
<Annotation>
<Comment>Quote and parity divisor</Comment>
</Annotation>
<TypeOrTypeRef typeName="RPT_QUOTE_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="rn_prin_act" offset="176">
<Annotation>
<Comment>Comments</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRIN_ACT" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="REAL_NAMES_SYNC_RSP_DATA" size="28" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_SYNC_RSP_DATA.h">
<Members>
<DataMember name="rn_side" offset="0">
<Annotation>
<Comment>BUY, SELL (bitmask in param.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_pending_price" offset="4">
<Annotation>
<Comment>pending price for Buy &amp; Sell side</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_pending_qty" offset="12">
<Annotation>
<Comment>pending qty for Buy &amp; Sell Side</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_book_qty" offset="20">
<Annotation>
<Comment>Book qty for the Buy &amp; Sell Side</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="REAL_NAMES_VALIDATE_REJ_DATA" size="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_VALIDATE_REJ_DATA.h">
<Members>
<DataMember name="rn_side" offset="0">
<Annotation>
<Comment>BUY, SELL (bitmask in param.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_error" offset="2">
<Annotation>
<Comment>see above for reject reasons</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="RN_VIOLATE_STOP_PRICE"/>
<Bit constantName="RN_INSUFFICIENT_CAP"/>
<Bit constantName="RN_INSUFFICIENT_AON"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="REAL_NAMES_VALIDATE_REQ_DATA" size="152" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_VALIDATE_REQ_DATA.h">
<Members>
<DataMember name="rn_side" offset="0">
<Annotation>
<Comment>BUY, SELL (bitmask in param.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_giveup_count" offset="2">
<Annotation>
<Comment>number of giveups for both side</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_crowd_giveups" offset="8">
<Annotation>
<Comment>Max number of giveups in a Real Names The crossing giveups for both the buy side and sell side of the Real Names transaction.</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef>
<Array numElements="6">
<TypeOrTypeRef typeName="GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="REAL_NAMES_VALIDATE_RSP_DATA" size="6" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_VALIDATE_RSP_DATA.h">
<Members>
<DataMember name="rn_side" offset="0">
<Annotation>
<Comment>BUY, SELL (bitmask in param.h)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rn_warning" offset="2">
<Annotation>
<Comment>see above for warning messages</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="" size="">
<Bit constantName="RN_PRIN_WITH_BETTER_AON"/>
<Bit constantName="RN_PARTIAL_AON"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Enumeration name="Reason" size="4" cgen:namespace="REJECT1" cgen:file="/mnt/pos.shrb/include/events/REJECT1.h">
<EnumeratorRef name="no_reason"/>
<EnumeratorRef name="multi_usr_lock"/>
<EnumeratorRef name="only_drop_del"/>
<EnumeratorRef name="not_dlld_yet"/>
<EnumeratorRef name="its_multi_usr"/>
<EnumeratorRef name="summary_rpt_lock"/>
</Enumeration>
<Struct name="REGISTRATION_MSG" size="116" cgen:file="/mnt/pos.shrb/include/events/REGISTRATION_MSG.h">
<Members>
<DataMember name="tm_time" offset="0">
<TypeOrTypeRef typeName="TIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="tm_ws" offset="2">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="tm_ss" offset="4">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="tm_stkid" offset="6">
<TypeOrTypeRef typeName="STKID" typeKind="Typedef"/>
</DataMember>
<DataMember name="tm_qid" offset="8">
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="tm_type" offset="10">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="tm_flags" offset="12">
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="tm_data_size" offset="14">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="tm_data" offset="16">
<TypeOrTypeRef>
<Symbol size="100" cgen:expression="REGISTRATION_MSG_MAX_DATA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="REJECT_REPORT" size="24" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Members>
<DataMember name="rr_reason" offset="0">
<Annotation>
<Comment>see values above</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="REJ_DROP"/>
<Bit constantName="REJ_ERROR"/>
<Bit constantName="REJ_U_COMBINATION"/>
<Bit constantName="REJ_X_TICK_4"/>
<Bit constantName="REJ_X_TICK_3"/>
<Bit constantName="REJ_X_TICK_2"/>
<Bit constantName="REJ_X_TICK_1"/>
<Bit constantName="REJ_STP_M_PRI"/>
<Bit constantName="REJ_XMKT_BRK"/>
<Bit constantName="REJ_MKT_BRK"/>
<Bit constantName="REJ_XQTY"/>
<Bit constantName="REJ_QTY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rr_cross_index" offset="2">
<Annotation>
<Comment>for REJ_XQTY, tells which giveup errs of AON, STP, DOT or LMT or TICK</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="rr_prompt" offset="4">
<Annotation>
<Comment>prompting info for Open Block Only</Comment>
</Annotation>
<TypeOrTypeRef typeName="PROMPT_DATA" typeKind="Struct"/>
</DataMember>
<Constants>
<Enumerator name="REJ_OK" value="0" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>no error</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_QTY" value="1" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>not enough qty avail to report.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_XQTY" value="2" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>reject cross qty.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_MKT_BRK" value="3" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>would cause a partial rpt on mkt order.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_XMKT_BRK" value="4" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>would cause partial rpt on xed mktorder.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_STP_M_PRI" value="5" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Report price worse than MKT stopped pri.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_X_TICK_1" value="6" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Can't use TICK with this template</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_X_TICK_2" value="7" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Can't use TICK to cross w/filed orders</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_X_TICK_3" value="8" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Can't cross filed LMT orders w/TICK</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_X_TICK_4" value="9" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Can't use LMT &amp; TICK w/filed orders</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_U_COMBINATION" value="10" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Invalid Contra Combination</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_ERROR" value="11" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>Report Not Sent- ask Floor Mgr</Comment>
</Annotation>
</Enumerator>
<Enumerator name="REJ_DROP" value="12" cgen:file="/mnt/pos.shrb/include/events/REJECT_REPORT.h">
<Annotation>
<Comment>confirm drop</Comment>
</Annotation>
</Enumerator>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="REJ_OK"/>
<EnumeratorRef name="REJ_QTY"/>
<EnumeratorRef name="REJ_XQTY"/>
<EnumeratorRef name="REJ_MKT_BRK"/>
<EnumeratorRef name="REJ_XMKT_BRK"/>
<EnumeratorRef name="REJ_STP_M_PRI"/>
<EnumeratorRef name="REJ_X_TICK_1"/>
<EnumeratorRef name="REJ_X_TICK_2"/>
<EnumeratorRef name="REJ_X_TICK_3"/>
<EnumeratorRef name="REJ_X_TICK_4"/>
<EnumeratorRef name="REJ_U_COMBINATION"/>
<EnumeratorRef name="REJ_ERROR"/>
<EnumeratorRef name="REJ_DROP"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="REJECT1" size="4" cgen:file="/mnt/pos.shrb/include/events/REJECT1.h">
<Members>
<DataMember name="reason" offset="0">
<TypeOrTypeRef typeName="Reason" typeKind="Enumeration"/>
</DataMember>
<Constants>
<Enumerator name="no_reason" value="0"/>
<Enumerator name="multi_usr_lock" value="1"/>
<Enumerator name="only_drop_del" value="2"/>
<Enumerator name="not_dlld_yet" value="3"/>
<Enumerator name="its_multi_usr" value="4"/>
<Enumerator name="summary_rpt_lock" value="5"/>
</Constants>
<NestedType>
<Enumeration name="Reason" size="4" cgen:namespace="REJECT1">
<EnumeratorRef name="no_reason"/>
<EnumeratorRef name="multi_usr_lock"/>
<EnumeratorRef name="only_drop_del"/>
<EnumeratorRef name="not_dlld_yet"/>
<EnumeratorRef name="its_multi_usr"/>
<EnumeratorRef name="summary_rpt_lock"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="REPORT_CORRECTION_DATA" size="440" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/REPORT_CORRECTION_DATA.h">
<Members>
<DataMember name="m_actNo" offset="0">
<Annotation>
<Comment>DBK Activity Number</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_seqNo" offset="4">
<Annotation>
<Comment>PSS Sequence Number</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_dbkReportCorr" offset="8">
<TypeOrTypeRef typeName="DBK_REPORT_CORRECTION" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="REQ_AOB_LMTS" size="12" cgen:file="/mnt/pos.shrb/include/events/REQ_AOB_LMTS.h">
<Members>
<DataMember name="rl_price" offset="0">
<Annotation>
<Comment>price to request aob qtys, and imbal.</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="rl_crowd" offset="4">
<Annotation>
<Comment>actually, crowd + princ on "paired" side</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="REQ_AOB_STPS" size="12" cgen:file="/mnt/pos.shrb/include/events/REQ_AOB_STPS.h">
<Members>
<DataMember name="ra_type" offset="0">
<Annotation>
<Comment>order type</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ra_at_pri" offset="4">
<Annotation>
<Comment>at price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ra_stp_pri" offset="8">
<Annotation>
<Comment>stp price from block stop template</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="REQ_DETAIL" size="1" cgen:file="/mnt/pos.shrb/include/events/REQ_DETAIL.h">
<Members>
<DataMember name="rd_flag" offset="0">
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="DP_REQ_NEXT_PAGE"/>
<Bit constantName="DP_REQ_PRVE_PAGE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Enumeration name="rnp_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="rnp_off"/>
<EnumeratorRef name="rnp_on"/>
</Enumeration>
<Struct name="RPT_COMMON" size="124" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Members>
<DataMember name="rc_symbol" offset="0">
<Annotation>
<Comment>stock symbol</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rc_rec_num" offset="11">
<Annotation>
<Comment>this record number w/i trans (0,1,2...)</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="rc_tick" offset="12">
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="rc_contra_cnt" offset="13">
<Annotation>
<Comment>total contra count</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="rc_ta_cnt" offset="14">
<Annotation>
<Comment>total number of TA #'s on executing side</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="rc_exe_price" offset="16">
<Annotation>
<Comment>exec price expresed in denom units</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="rc_exe_time" offset="20">
<Annotation>
<Comment>time of exe : 2 sec incs</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="rc_lvs_qty" offset="22">
<Annotation>
<Comment>qty remaining in last TA # on executing side</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="rc_rec_id" offset="24">
<Annotation>
<Comment>record id bits defined in LMT_RPT.h</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="L_DROP_ADM"/>
<Bit constantName="L_ITS_NC_ADM"/>
<Bit constantName="L_TICK_ADM"/>
<Bit constantName="L_EFF_SEQ_ADM"/>
<Bit constantName="L_BUST"/>
<Bit constantName="L_TTC_MOD"/>
<Bit constantName="L_PROK"/>
<Bit constantName="L_UNBUNDLE"/>
<Bit constantName="L_END_BLKRPT"/>
<Bit constantName="L_DEL"/>
<Bit constantName="L_NDONE"/>
<Bit constantName="L_PRCOR"/>
<Bit constantName="L_STPOPG"/>
<Bit constantName="L_STPSTK"/>
<Bit constantName="L_TLTC"/>
<Bit constantName="L_CXL"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rc_sp_conds" offset="26">
<Annotation>
<Comment>special conds defined below</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="L_OLD_FMT"/>
<Bit constantName="L_RPT"/>
<Bit constantName="L_BILLING_ADMIN"/>
<Bit constantName="L_NML"/>
<Bit constantName="L_USE_SDOT_LINKNO"/>
<Bit constantName="L_COMMISSION"/>
<Bit constantName="L_NO_RANGE_CHK"/>
<Bit constantName="L_NDONE_TEXT"/>
<Bit constantName="L_XCH"/>
<Bit constantName="L_PRDEF"/>
<Bit constantName="L_DRPT"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rc_post" offset="28">
<Annotation>
<Comment>post of given stock</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="rc_tee" offset="29">
<Annotation>
<Comment>tee of given stock</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="rc_supp_trade_num" offset="30">
<Annotation>
<Comment>supplimentary trade number</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="rc_names" offset="32">
<Annotation>
<Comment>max 7 4 char contra names</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="RC_MAX_GV">
<TypeOrTypeRef typeName="CTR_NAMES" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rc_qtys" offset="60">
<Annotation>
<Comment>max 7 contra quantities</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="RC_MAX_GV">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rc_contra_badges" offset="88">
<Annotation>
<Comment>max 7 contra badge ids</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="RC_MAX_GV">
<TypeOrTypeRef typeName="BADGEID" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rc_exe_time2" offset="102">
<Annotation>
<Comment>same time as above, expressed in hundredths of seconds</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="sizeof(MILLITIME)"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rc_filler" offset="106">
<Annotation>
<Comment>dummy field</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rc_xname" offset="110">
<Annotation>
<Comment>cross side contra = 'LMT' or nothing?</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rc_xqty" offset="114">
<Annotation>
<Comment>cross side quantity</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rc_xbadge" offset="118">
<Annotation>
<Comment>-dr-</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="rc_xlvs_qty" offset="120">
<Annotation>
<Comment>lvs qty on last crossed order</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="rc_xta_cnt" offset="122">
<Annotation>
<Comment>count of cross TA #'s</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="RPT_EXEC_SYNC_REJ_DATA" size="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/RPT_EXEC_SYNC_REJ_DATA.h">
<Members>
<DataMember name="error" offset="0">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="RPT_MSG" size="396" cgen:file="/mnt/pos.shrb/include/events/RPT_MSG.h">
<Members>
<DataMember name="rm_act_no" offset="0">
<Annotation>
<Comment>activity # -- transaction</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="rm_seqno" offset="4">
<Annotation>
<Comment>sequence # will be put here by FMT</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="rm_rpt" offset="8">
<TypeOrTypeRef typeName="RPT" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="RPT_QUOTE_DATA" size="24" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/RPT_QUOTE_DATA.h">
<Members>
<DataMember name="rq_quote" offset="0">
<Annotation>
<Comment>bid and offer price and size</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="QUOTE_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rq_depth" offset="16">
<Annotation>
<Comment>the depth of the quote</Comment>
</Annotation>
<TypeOrTypeRef typeName="QUOTE_DEPTH" typeKind="Enumeration"/>
</DataMember>
<DataMember name="rq_parityDivisor" offset="20">
<Annotation>
<Comment>bid and offer parity divisors</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="RPT_QUOTE_REJ_DATA" size="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/RPT_QUOTE_REJ_DATA.h">
<Members>
<DataMember name="rpr_error" offset="0">
<Annotation>
<Comment>see above for reject reasons</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="RPR_RNP_OFFER"/>
<Bit constantName="RPR_RNP_BID"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="RPT_TYPE" size="2" cgen:file="/mnt/pos.shrb/include/events/RPT_TYPE.h">
<Members>
<DataMember name="rt_pgtype" offset="0">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="OC"/>
<Bit constantName="LMT_OPG"/>
<Bit constantName="OVR_NITE"/>
<Bit constantName="SS_EXEMPT"/>
<Bit constantName="SELL_SHORT"/>
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="RPT" size="388" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Members>
<DataMember name="r_rc" offset="0">
<TypeOrTypeRef typeName="RPT_COMMON" typeKind="Struct"/>
</DataMember>
<DataMember name="r_union" offset="124">
<TypeOrTypeRef typeName="RPT::{unnamed.union.1}" typeKind=""/>
</DataMember>
<Constants/>
<NestedType>
<Union size="264" discriminator="undefined">
<Members>
<Member name="r_lrd" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="LMT_RPT_DATA" typeKind="Struct"/>
</Member>
<Member name="r_nd" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="NDONE_DATA" typeKind="Struct"/>
</Member>
<Member name="r_eard" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="EOD_ADM_RPT_DATA" typeKind="Struct"/>
</Member>
<Member name="r_esard" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="EFF_SEQ_ADM_RPT_DATA" typeKind="Struct"/>
</Member>
<Member name="r_cbd" offset="0" discriminatorCase="undefined">
<TypeOrTypeRef typeName="COMM_BILLING_DATA" typeKind="Struct"/>
</Member>
</Members>
</Union>
</NestedType>
</Members>
</Struct>
<Struct name="RPTSTS_INFO" size="56" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_INFO.h">
<Members>
<DataMember name="ri_stkid" offset="0">
<Annotation>
<Comment>stock ident</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ri_fbs" offset="2">
<Annotation>
<Comment>firm-branch-sequence</Comment>
</Annotation>
<TypeOrTypeRef typeName="FBS" typeKind="Struct"/>
</DataMember>
<DataMember name="ri_ordtype" offset="14">
<Annotation>
<Comment>order type</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="OC"/>
<Bit constantName="LMT_OPG"/>
<Bit constantName="OVR_NITE"/>
<Bit constantName="SS_EXEMPT"/>
<Bit constantName="SELL_SHORT"/>
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ri_orig_qty" offset="16">
<Annotation>
<Comment>original order qty</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="ri_stk_name" offset="18">
<Annotation>
<Comment>stock name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ri_price" offset="32">
<Annotation>
<Comment>order price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ri_open_qty" offset="36">
<Annotation>
<Comment>open order qty</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="ri_tanum" offset="38">
<Annotation>
<Comment>ta number</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ri_shrs_ahead" offset="44">
<Annotation>
<Comment>shrs ahead (in rlots!)</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="ri_text_code" offset="48">
<Annotation>
<Comment>see LMT_RPT::TextCode</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ri_cond_code" offset="50">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ri_clear_key" offset="52">
<Annotation>
<Comment>user hit clear key</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="RI_INTERNAL_ERROR" value="0"/>
<Enumerator name="RI_ORDER_DROPPED" value="1"/>
<Enumerator name="RI_ORDER_CLOSED" value="2"/>
<Enumerator name="RI_BETTER_LIMITS" value="3"/>
<Enumerator name="RI_MSG_NOT_FOUND" value="4"/>
<Enumerator name="RI_ORDER_NOT_FILED" value="5"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="RI_INTERNAL_ERROR"/>
<EnumeratorRef name="RI_ORDER_DROPPED"/>
<EnumeratorRef name="RI_ORDER_CLOSED"/>
<EnumeratorRef name="RI_BETTER_LIMITS"/>
<EnumeratorRef name="RI_MSG_NOT_FOUND"/>
<EnumeratorRef name="RI_ORDER_NOT_FILED"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="RPTSTS_SETUP" size="12" cgen:file="/mnt/pos.shrb/include/events/RPTSTS_SETUP.h">
<Members>
<DataMember name="rs_flags" offset="0">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="RS_AUTO_MODE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="rs_crowd_buy" offset="4">
<Annotation>
<Comment>report status crowd buy amount</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="rs_crowd_sell" offset="8">
<Annotation>
<Comment>report status crowd sell amount</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<Constants>
<Enumerator name="RS_AUTO_MODE" value="0"/>
<Enumerator name="MAX_RPTSTS_SHRS_AHEAD" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="RS_AUTO_MODE"/>
<EnumeratorRef name="MAX_RPTSTS_SHRS_AHEAD"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Enumeration name="screen" size="4" cgen:file="/mnt/pos.shrb/include/events/LOCK_MSG.h">
<EnumeratorRef name="nolock_bit"/>
<EnumeratorRef name="block_bit"/>
<EnumeratorRef name="blockS_bit"/>
<EnumeratorRef name="rptS_bit"/>
<EnumeratorRef name="selectS_bit"/>
<EnumeratorRef name="stp_mkt_rqst_bit"/>
<EnumeratorRef name="tick_fileS_bit"/>
<EnumeratorRef name="oars_adm_bit"/>
<EnumeratorRef name="last_sale_bit"/>
<EnumeratorRef name="stk_setup_bit"/>
<EnumeratorRef name="quote_setup_bit"/>
<EnumeratorRef name="rpt_stat_setup_bit"/>
<EnumeratorRef name="rpt_stat_bit"/>
<EnumeratorRef name="its_bit"/>
<EnumeratorRef name="univS_bit"/>
<EnumeratorRef name="srS_bit"/>
<EnumeratorRef name="sidecar_bit"/>
<EnumeratorRef name="moo_imbalance_bit"/>
<EnumeratorRef name="moc_imbalance_bit"/>
<EnumeratorRef name="its_one_step_bit"/>
<EnumeratorRef name="real_names_bit"/>
</Enumeration>
<Typedef name="screen" size="4" cgen:file="/mnt/pos.shrb/include/events/LOCK_MSG.h">
<TypeOrTypeRef typeName="screen" typeKind="Enumeration"/>
</Typedef>
<Struct name="SCROLL" size="2" cgen:file="/mnt/pos.shrb/include/events/SCROLL.h">
<Members>
<DataMember name="sc_screen" offset="0">
<Annotation>
<Comment>screen type</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="sc_dir" offset="1">
<Annotation>
<Comment>direction</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="SC_SUMM" value="0"/>
<Enumerator name="SC_PAGE" value="1"/>
<Enumerator name="SC_UP" value="2"/>
<Enumerator name="SC_DOWN" value="3"/>
<Enumerator name="SC_RESET" value="4"/>
<Enumerator name="SC_BADGE_PAGE" value="5"/>
<Enumerator name="SC_SMART_FIND" value="6"/>
<Enumerator name="SC_SUMMARY_RPT" value="7"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="SC_SUMM"/>
<EnumeratorRef name="SC_PAGE"/>
<EnumeratorRef name="SC_UP"/>
<EnumeratorRef name="SC_DOWN"/>
<EnumeratorRef name="SC_RESET"/>
<EnumeratorRef name="SC_BADGE_PAGE"/>
<EnumeratorRef name="SC_SMART_FIND"/>
<EnumeratorRef name="SC_SUMMARY_RPT"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="SELF_CANCEL_TIMER_IN_DATA" size="36" cgen:file="/mnt/pos.shrb/include/events/SELF_CANCEL_TIMER_IN_DATA.h">
<Members>
<DataMember name="oc_orderEntryTime" offset="0">
<Annotation>
<Comment>ascii representation of order entry timer for which the timer was sent for</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="12" cgen:expression="MILTIME_ASCII_LEN_COL+1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oc_postTime" offset="12">
<Annotation>
<Comment>ascii representation of the time when the timer was posted</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="12" cgen:expression="MILTIME_ASCII_LEN_COL+1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oc_TimerSec" offset="24">
<Annotation>
<Comment>timer time in ascii</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="OC_INTERVAL_LEN+1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="oc_expirationTime" offset="28">
<Annotation>
<Comment>time expected back</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="oc_interval" offset="32">
<Annotation>
<Comment>the self-canceling time interval of the order</Comment>
</Annotation>
<TypeOrTypeRef typeName="OC_INTERVAL" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="SEQNO" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Typedef name="SHARES" size="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Typedef name="SHORT_PRICE" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<NativeType name="short" size="2"/>
<Struct name="SIDECAR_RPT_MSG" size="24" cgen:file="/mnt/pos.shrb/include/events/SIDECAR_RPT_MSG.h">
<Members>
<DataMember name="scr_flags" offset="0">
<Annotation>
<Comment>status flag</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SC_SIDECAR_ALREADY_REPORTED"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="scr_tanum" offset="2">
<Annotation>
<Comment>Sidecar TA #</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="scr_paired" offset="8">
<Annotation>
<Comment>paired quantity</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="scr_imbal" offset="12">
<Annotation>
<Comment>Sidecar imbalance</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="scr_side" offset="16">
<Annotation>
<Comment>imbalance side: valid values are: BUY, SELL (defined in &lt;misc/param.h&gt;)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="scr_price" offset="20">
<Annotation>
<Comment>execution price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<Constants>
<Enumerator name="SC_SIDECAR_ALREADY_REPORTED" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="SC_SIDECAR_ALREADY_REPORTED"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="SIGNAL_DATA" size="252" cgen:file="/mnt/pos.shrb/include/events/SIGNAL_DATA.h">
<Members>
<DataMember name="sd_flags" offset="0">
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="SD_MSG_NOT_FOUND"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sd_class" offset="2">
<Annotation>
<Comment>msg class</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="sd_task_id" offset="4">
<Annotation>
<Comment>msg. identifier</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="sd_msg_id" offset="6">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="sd_info_size" offset="8">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="sd_info" offset="12">
<TypeOrTypeRef typeName="INFO_DATA" typeKind="Typedef"/>
</DataMember>
<Constants>
<Enumerator name="SD_MSG_NOT_FOUND" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="SD_MSG_NOT_FOUND"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Typedef name="SIGNED_QTY" size="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</Typedef>
<Typedef name="size_t" size="4">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Struct name="SMART_FIND_RSP" size="180" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h">
<Members>
<DataMember name="sf_flags" offset="0">
<TypeOrTypeRef>
<Mask name="unsigned char" size="1">
<Bit constantName="SFR_NO_QUOTE"/>
<Bit constantName="SFR_PAGES_BELOW"/>
<Bit constantName="SFR_PAGES_ABOVE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sf_suborder_count" offset="2">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="sf_suborders" offset="4">
<TypeOrTypeRef>
<Array numElements="11" cgen:expression="SFR_MAX_SUBORDERS_ON_PAGE">
<TypeOrTypeRef typeName="SMART_FIND_SUB_ORDER" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="SFR_PAGES_ABOVE" value="0" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h">
<Annotation>
<Comment>scroll-up indication</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SFR_PAGES_BELOW" value="1" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h">
<Annotation>
<Comment>scroll-down indication</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SFR_NO_QUOTE" value="2" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h">
<Annotation>
<Comment>if there are zero suborders: SFR_NO_QUOTE set: "no quote" condition. SFR_NO_QUOTE cleared: "no orders" condition</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SFR_MAX_SUBORDERS_ON_PAGE" value="3"/>
</Constants>
<NestedType>
<Enumeration name="sf_flag_values" size="4" cgen:namespace="SMART_FIND_RSP">
<EnumeratorRef name="SFR_PAGES_ABOVE"/>
<EnumeratorRef name="SFR_PAGES_BELOW"/>
<EnumeratorRef name="SFR_NO_QUOTE"/>
<EnumeratorRef name="SFR_MAX_SUBORDERS_ON_PAGE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="SMART_FIND_SUB_ORDER" size="16" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h">
<Members>
<DataMember name="sf_open_qty" offset="0">
<Annotation>
<Comment>open order qty</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="sf_price" offset="4">
<Annotation>
<Comment>price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sf_order_type" offset="8">
<Annotation>
<Comment>order type (BUY,SELL,MKT,LMT,AON,LOC,TICK_S, STP,STP_LMT,SELL_SHORT,SS_EXEMPT, LMT_OPG,OVR_NITE) BUY MINUS = BUY | TICK_S SELL PLUS = SELL | TICK_S SELL SHORT = SELL | SELL_SHORT | TICK_S</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="OrderTypeMask" size="4">
<Bit constantName="OC"/>
<Bit constantName="LMT_OPG"/>
<Bit constantName="OVR_NITE"/>
<Bit constantName="SS_EXEMPT"/>
<Bit constantName="SELL_SHORT"/>
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sf_condition_flags" offset="12">
<Annotation>
<Comment>copy of om_conds mask (OPG,GTC,DAY,OC_XPR,T_FILED,P_FILED,O_DUP, DLL_TICK_ORDER,REP_CXL)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="OrderCondMask" size="4">
<Bit constantName="EFF_SEQ_ON"/>
<Bit constantName="NOT_REDUCED"/>
<Bit constantName="ELECTED"/>
<Bit constantName="T_FILED"/>
<Bit constantName="P_FILED"/>
<Bit constantName="PRI_INSERT"/>
<Bit constantName="STP_AON"/>
<Bit constantName="TTS"/>
<Bit constantName="DNI"/>
<Bit constantName="DNR"/>
<Bit constantName="OB"/>
<Bit constantName="REP_CXL"/>
<Bit constantName="O_DUP"/>
<Bit constantName="OPG"/>
<Bit constantName="GTC"/>
<Bit constantName="DAY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="sockaddr_in" size="16">
<Members>
<DataMember name="sin_family" offset="0">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="sin_port" offset="2">
<TypeOrTypeRef typeName="u_short" typeKind="Typedef"/>
</DataMember>
<DataMember name="sin_addr" offset="4">
<TypeOrTypeRef typeName="in_addr" typeKind="Struct"/>
</DataMember>
<DataMember name="sin_zero" offset="8">
<TypeOrTypeRef>
<Symbol size="8"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="SOCKADDR" size="16" cgen:file="/mnt/pos.shrb/include/mgt/Mt/Mt.h">
<TypeOrTypeRef typeName="sockaddr_in" typeKind="Struct"/>
</Typedef>
<Struct name="SP_CONFIG_FIRM_DATA" size="8" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_CONFIG_FIRM_DATA.h">
<Members>
<DataMember name="sp_msgId" offset="0">
<Annotation>
<Comment>msg id</Comment>
</Annotation>
<TypeOrTypeRef typeName="ULONG" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_name" offset="4">
<Annotation>
<Comment>firm name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="FIRMNAME_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="SP_DETAIL_REC" size="28" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_DETAIL_REC.h">
<Members>
<DataMember name="sp_tick" offset="0">
<Annotation>
<Comment>The tick, 0 = no tick, 1 = '0-', 2 = '0+', 3 = '-', 4 = '+'</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="sp_comment1" offset="1">
<Annotation>
<Comment>Canned comment</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="SP_CAN_COM_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_comment2" offset="7">
<Annotation>
<Comment>Canned comment</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="SP_CAN_COM_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_free_form_comment" offset="13">
<Annotation>
<Comment>Free form comment</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="10" cgen:expression="FC_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_time" offset="24">
<Annotation>
<Comment>The record's time</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_DROP_FIRM_DATA" size="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_DROP_FIRM_DATA.h">
<Members>
<DataMember name="sp_firmName" offset="0">
<Annotation>
<Comment>firm name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="FIRMNAME_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="SP_FIND_REQ_DATA" size="68" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_FIND_REQ_DATA.h">
<Members>
<DataMember name="sp_msg_id" offset="0">
<Annotation>
<Comment>The SPF message id genreated by TDP</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="sp_recs_per_update" offset="4">
<Annotation>
<Comment>Number of trade detail recs client wants in response</Comment>
</Annotation>
<TypeOrTypeRef typeName="size_t" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_type" offset="8">
<Annotation>
<Comment>The type of find, see PM_FIND_REQ_DATA.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_FIND_TYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="sp_side" offset="12">
<Annotation>
<Comment>The side (BUY and/or SELL), see param.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_firm" offset="14">
<Annotation>
<Comment>The firm mnemonic</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_stock_symbol" offset="18">
<Annotation>
<Comment>The stock symbol in ascii</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="L_STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_price" offset="29">
<Annotation>
<Comment>The price in ascii</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="15" cgen:expression="SP_PRICE_TXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_contra" offset="44">
<Annotation>
<Comment>A contra</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_badge" offset="48">
<Annotation>
<Comment>A badge id</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="sp_start_time" offset="52">
<Annotation>
<Comment>Begining time</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_end_time" offset="56">
<Annotation>
<Comment>Ending time</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_sort_type" offset="60">
<Annotation>
<Comment>Sort by, see PM_FIND_REQ_DATA.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_SORTTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="sp_sort_order" offset="64">
<Annotation>
<Comment>Sort order, see PM_FIND_REQ_DATA.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="PM_SORTORDER" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_GOV_NOTIFY_DATA" size="32" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_GOV_NOTIFY_DATA.h">
<Members>
<DataMember name="sp_pid" offset="0">
<Annotation>
<Comment>process id</Comment>
</Annotation>
<TypeOrTypeRef typeName="pid_t" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_tid" offset="4">
<Annotation>
<Comment>process task id</Comment>
</Annotation>
<TypeOrTypeRef typeName="TID" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_qid" offset="6">
<Annotation>
<Comment>process reply queue id</Comment>
</Annotation>
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_name" offset="8">
<Annotation>
<Comment>process published name</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="NAMESIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_class" offset="24">
<Annotation>
<Comment>process class</Comment>
</Annotation>
<TypeOrTypeRef typeName="ProcClass" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_userValue" offset="28">
<Annotation>
<Comment>user's value specified in its registration with gov</Comment>
</Annotation>
<TypeOrTypeRef typeName="UserValueType" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_GOV_REGISTER_DATA" size="" cgen:namespace="Pos::Msgs">
<Members/>
</Struct>
<Struct name="SP_PROC_DATA" size="516" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_PROC_DATA.h">
<Members>
<DataMember name="sp_tid" offset="0">
<Annotation>
<Comment>process's mman task id</Comment>
</Annotation>
<TypeOrTypeRef typeName="TID" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_reg" offset="4">
<Annotation>
<Comment>process registration</Comment>
</Annotation>
<TypeOrTypeRef typeName="SP_GOV_REGISTER_DATA" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_PROXY_CONFIG_DATA" size="64" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_PROXY_CONFIG_DATA.h">
<Members>
<DataMember name="m_firm" offset="0">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_stockname" offset="4">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_ws" offset="16">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_book" offset="18">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="NUM_ENTITY"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_net_openning_position" offset="26">
<TypeOrTypeRef>
<Symbol size="16" cgen:expression="OPENING_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_proxy_gqid" offset="44">
<TypeOrTypeRef typeName="GQID" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_PROXY_IAMALIVE_DATA" size="44" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_PROXY_IAMALIVE_DATA.h">
<Members>
<DataMember name="m_seqNum" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_gqid" offset="4">
<TypeOrTypeRef typeName="GQID" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_spfHostName" offset="24">
<TypeOrTypeRef>
<Symbol size="17" cgen:expression="HOSTNAME_SIZE+1"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="SP_PROXY_REFRESH_DATA" size="24" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_PROXY_REFRESH_DATA.h">
<Members>
<DataMember name="m_handle" offset="0">
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_firm" offset="2">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_stockname" offset="6">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_data_type" offset="20">
<TypeOrTypeRef typeName="SummaryDataType" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_PROXY_START_DATA" size="20" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_PROXY_START_DATA.h">
<Members>
<DataMember name="m_firm" offset="0">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_stockname" offset="4">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_data_type" offset="16">
<TypeOrTypeRef typeName="SummaryDataType" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_PROXY_STOP_DATA" size="24" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_PROXY_STOP_DATA.h">
<Members>
<DataMember name="m_handle" offset="0">
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_firm" offset="2">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_stockname" offset="6">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_data_type" offset="20">
<TypeOrTypeRef typeName="SummaryDataType" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_ROUTER_REFRESH_DATA" size="20" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_ROUTER_REFRESH_DATA.h">
<Members>
<DataMember name="m_firm" offset="0">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_stockname" offset="4">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_data_type" offset="16">
<TypeOrTypeRef typeName="SummaryDataType" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_ROUTER_RESTART_DATA" size="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_ROUTER_RESTART_DATA.h">
<Members>
<DataMember name="m_firm" offset="0">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="SP_ROUTING_DATA" size="28" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_ROUTING_DATA.h">
<Members>
<DataMember name="sp_msg_id" offset="0">
<Annotation>
<Comment>Message id</Comment>
</Annotation>
<TypeOrTypeRef typeName="ULONG" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_firm_name" offset="4">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_stock_symbol" offset="8">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="L_STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_book_name" offset="19">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="NUM_ENTITY"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="SP_SCROLL_REQ_DATA" size="12" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_SCROLL_REQ_DATA.h">
<Members>
<DataMember name="sp_msg_id" offset="0">
<Annotation>
<Comment>The SPF message id generated by TDP</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="sp_handle" offset="4">
<Annotation>
<Comment>Screen to scroll</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_num_recs" offset="6">
<Annotation>
<Comment>Number of records to scroll and return</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="sp_dir" offset="8">
<Annotation>
<Comment>Firection of scroll, see pos_types.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="SCROLL_DIR" typeKind="Enumeration"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_STK_CONFIG_DATA" size="48" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_STK_CONFIG_DATA.h">
<Members>
<DataMember name="sp_routing" offset="0">
<Annotation>
<Comment>routing info</Comment>
</Annotation>
<TypeOrTypeRef typeName="SP_ROUTING_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="sp_gqid" offset="28">
<Annotation>
<Comment>global queue id</Comment>
</Annotation>
<TypeOrTypeRef typeName="GQID" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_STK_POS_UPD_DATA" size="272" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_STK_POS_UPD_DATA.h">
<Members>
<DataMember name="sp_routing" offset="0">
<Annotation>
<Comment>routing info</Comment>
</Annotation>
<TypeOrTypeRef typeName="SP_ROUTING_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="sp_position" offset="28">
<TypeOrTypeRef typeName="PositionSummaryData" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_TRADE_LIST_REC" size="152" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_TRADE_LIST_UPDATE_DATA.h">
<Members>
<DataMember name="sp_type" offset="0">
<Annotation>
<Comment>The record's type</Comment>
</Annotation>
<TypeOrTypeRef typeName="ACTTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="sp_correction" offset="4">
<Annotation>
<Comment>The record's correction type</Comment>
</Annotation>
<TypeOrTypeRef typeName="CORRECTIONTYPE" typeKind="Enumeration"/>
</DataMember>
<DataMember name="sp_side" offset="8">
<Annotation>
<Comment>The record's side</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_price" offset="10">
<Annotation>
<Comment>The record's price in ascii</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="15" cgen:expression="SP_PRICE_TXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_qty" offset="28">
<Annotation>
<Comment>The record's qty in lots</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_net_position" offset="32">
<Annotation>
<Comment>Prin's net position at this time</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSITION" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_settlement" offset="36">
<Annotation>
<Comment>The record's settlment: ' C', 'ND', or 'nn'</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2" cgen:expression="SP_SETTLEMENT_TXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_num_contras" offset="38">
<Annotation>
<Comment>The number of contras in sp_num_contras</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="sp_contras" offset="40">
<Annotation>
<Comment>The contras</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="7" cgen:expression="MAX_U_GV">
<TypeOrTypeRef typeName="GIVEUP_SHRS" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sp_detail" offset="124">
<Annotation>
<Comment>record detail information</Comment>
</Annotation>
<TypeOrTypeRef typeName="SP_DETAIL_REC" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="SP_TRADE_LIST_UPDATE_DATA" size="4608" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/SP_TRADE_LIST_UPDATE_DATA.h">
<Members>
<DataMember name="sp_routing" offset="0">
<Annotation>
<Comment>routing info</Comment>
</Annotation>
<TypeOrTypeRef typeName="SP_ROUTING_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="sp_timestamp" offset="28">
<Annotation>
<Comment>The timestamp of the PMP query</Comment>
</Annotation>
<TypeOrTypeRef typeName="time_t" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_trade_unit" offset="32">
<Annotation>
<Comment>The trade unit</Comment>
</Annotation>
<TypeOrTypeRef typeName="TRADE_UNIT" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_handle" offset="36">
<Annotation>
<Comment>The screen handle</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSHANDLE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_start_position" offset="40">
<Annotation>
<Comment>Prin's starting position in stock</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSITION" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_flags" offset="44">
<Annotation>
<Comment>More above, below. See pos_types.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="sp_num_recs" offset="46">
<Annotation>
<Comment>The number of rexords in sp_records</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="sp_records" offset="48">
<Annotation>
<Comment>The records</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="30" cgen:expression="SP_TRADE_LIST_MAX_SIZE">
<TypeOrTypeRef typeName="SP_TRADE_LIST_REC" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="SR_MKT_TRADE" size="36">
<Members>
<DataMember name="smt_tape_cnt" offset="0">
<Annotation>
<Comment>print tape count</Comment>
</Annotation>
<TypeOrTypeRef typeName="ushort" typeKind="Typedef"/>
</DataMember>
<DataMember name="smt_qty" offset="4">
<Annotation>
<Comment>amounts to print</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="4">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="smt_id" offset="20">
<Annotation>
<Comment>badge # 1-9999 (1 is default)</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="4">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="smt_price" offset="28">
<Annotation>
<Comment>price of trade</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="smt_cond" offset="32">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="MT_ND"/>
<Bit constantName="MT_CASH"/>
<Bit constantName="MT_SELLER"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="smt_seller" offset="34">
<Annotation>
<Comment>numeric in SELLERxx condition</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="MAX_MKT_TRADES" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="MAX_MKT_TRADES"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="SR_QTYS" size="16" cgen:file="/mnt/pos.shrb/include/events/SR_SYNC_RSP_DATA.h">
<Members>
<DataMember name="sr_user_book" offset="0">
<Annotation>
<Comment>book entered by the user and passed in the request</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_default_book" offset="4">
<Annotation>
<Comment>book qty available for exection as</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_lvs" offset="8">
<Annotation>
<Comment>total qty left if current smart</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_action" offset="12">
<Annotation>
<Comment>the qty of leaves orders that are</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="SR_RPT_REJ_DATA" size="2" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_REJ_DATA.h">
<Members>
<DataMember name="sr_reason" offset="0">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SR_REJ_RNP_OFFER"/>
<Bit constantName="SR_REJ_RNP_BID"/>
<Bit constantName="SR_REJ_QTY_CAP"/>
<Bit constantName="SR_REJ_BETTER_STOPPED"/>
<Bit constantName="SR_REJ_QTY_AON"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="SR_REJ_QTY_AON" value="0"/>
<Enumerator name="SR_REJ_BETTER_STOPPED" value="1"/>
<Enumerator name="SR_REJ_QTY_CAP" value="2"/>
<Enumerator name="SR_REJ_RNP_BID" value="3"/>
<Enumerator name="SR_REJ_RNP_OFFER" value="4"/>
<Enumerator name="SR_REJ_XPRESS_PENDING_BID" value="5"/>
<Enumerator name="SR_REJ_XPRESS_PENDING_OFFER" value="6"/>
<Enumerator name="SR_REJ_XPRESS_CANCEL_LOCKOUT_BID" value="7"/>
<Enumerator name="SR_REJ_XPRESS_CANCEL_LOCKOUT_OFFER" value="8"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="SR_REJ_QTY_AON"/>
<EnumeratorRef name="SR_REJ_BETTER_STOPPED"/>
<EnumeratorRef name="SR_REJ_QTY_CAP"/>
<EnumeratorRef name="SR_REJ_RNP_BID"/>
<EnumeratorRef name="SR_REJ_RNP_OFFER"/>
<EnumeratorRef name="SR_REJ_XPRESS_PENDING_BID"/>
<EnumeratorRef name="SR_REJ_XPRESS_PENDING_OFFER"/>
<EnumeratorRef name="SR_REJ_XPRESS_CANCEL_LOCKOUT_BID"/>
<EnumeratorRef name="SR_REJ_XPRESS_CANCEL_LOCKOUT_OFFER"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="SR_RPT_REQ_DATA" size="228" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_REQ_DATA.h">
<Members>
<DataMember name="sr_flags" offset="0">
<Annotation>
<Comment>(eg: EXE_VALIDATE_ONLY)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SRF_TRADE_UPDATE"/>
<Bit constantName="SRF_NON_BLOCKING"/>
<Bit constantName="SRF_VALIDATE_ONLY"/>
<Bit constantName="SRF_QUOTE_UPDATE"/>
<Bit constantName="SRF_FILE_AND_ELECT"/>
<Bit constantName="SRF_LSALE_UPDATE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_exprice" offset="4">
<Annotation>
<Comment>execution (at) price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_book_gv" offset="8">
<Annotation>
<Comment>array of book and crowd giveups - BUY/SELL</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_crowd_gv_cnt" offset="16">
<Annotation>
<Comment>gv count per side</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="ushort" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_crowd_gv" offset="20">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef>
<Array numElements="5">
<TypeOrTypeRef typeName="GIVEUP_P" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_prin_act" offset="140">
<Annotation>
<Comment>TICK/TIME/COMM for PRIN</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRIN_ACT" typeKind="Struct"/>
</DataMember>
<DataMember name="sr_mkt_trade" offset="168">
<Annotation>
<Comment>market trade report info for mds</Comment>
</Annotation>
<TypeOrTypeRef typeName="SR_MKT_TRADE" typeKind="Struct"/>
</DataMember>
<DataMember name="sr_quote_info" offset="204">
<Annotation>
<Comment>Quote for each side</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="QUOTE_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_quote_depth" offset="220">
<Annotation>
<Comment>depth of the quote</Comment>
</Annotation>
<TypeOrTypeRef typeName="QUOTE_DEPTH" typeKind="Enumeration"/>
</DataMember>
<DataMember name="sr_parity_divisor" offset="224">
<Annotation>
<Comment>bid and offer parity divisors</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="2"/>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="SRF_LSALE_UPDATE" value="0"/>
<Enumerator name="SRF_FILE_AND_ELECT" value="1"/>
<Enumerator name="SRF_QUOTE_UPDATE" value="2"/>
<Enumerator name="SRF_VALIDATE_ONLY" value="3"/>
<Enumerator name="SRF_NON_BLOCKING" value="4"/>
<Enumerator name="SRF_TRADE_UPDATE" value="5"/>
<Enumerator name="MAX_SR_GV" value="6"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="SRF_LSALE_UPDATE"/>
<EnumeratorRef name="SRF_FILE_AND_ELECT"/>
<EnumeratorRef name="SRF_QUOTE_UPDATE"/>
<EnumeratorRef name="SRF_VALIDATE_ONLY"/>
<EnumeratorRef name="SRF_NON_BLOCKING"/>
<EnumeratorRef name="SRF_TRADE_UPDATE"/>
<EnumeratorRef name="MAX_SR_GV"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="SR_RPT_RSP_DATA" size="24" cgen:file="/mnt/pos.shrb/include/events/SR_RPT_RSP_DATA.h">
<Members>
<DataMember name="sr_warn" offset="0">
<Annotation>
<Comment>Warnings: see SR_RSP_XXXX above</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SR_RSP_NON_BLOCK_NACK"/>
<Bit constantName="SR_RSP_PRIN_WITH_BETTER_AON"/>
<Bit constantName="SR_RSP_PART_RPT_AON"/>
<Bit constantName="SR_RSP_ELECT_STPS_OPN"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_prompt" offset="4">
<Annotation>
<Comment>prompting info</Comment>
</Annotation>
<TypeOrTypeRef typeName="PROMPT_DATA" typeKind="Struct"/>
</DataMember>
</Members>
</Struct>
<Struct name="SR_SYNC_REQ_DATA" size="24" cgen:file="/mnt/pos.shrb/include/events/SR_SYNC_REQ_DATA.h">
<Members>
<DataMember name="sr_flags" offset="0">
<Annotation>
<Comment>see above enum</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SRF_USE_DEFAULT_BOOK"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_price" offset="4">
<Annotation>
<Comment>execution price: last sale or user input</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_book_qty" offset="8">
<Annotation>
<Comment>buy and sell book totals sent to the book</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_gv_qty" offset="16">
<Annotation>
<Comment>buy and sell giveup totals sent to the book</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="SRF_USE_DEFAULT_BOOK" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="SRF_USE_DEFAULT_BOOK"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="SR_SYNC_RSP_DATA" size="44" cgen:file="/mnt/pos.shrb/include/events/SR_SYNC_RSP_DATA.h">
<Members>
<DataMember name="sr_exe_price" offset="0">
<Annotation>
<Comment>Same as the price sent in the request</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_qtys" offset="4">
<Annotation>
<Comment>buy and sell qtys for book, lvs,</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="SR_QTYS" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sr_min_stk_price" offset="36">
<Annotation>
<Comment>Minimum price in the stk database for all priced orders</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sr_max_stk_price" offset="40">
<Annotation>
<Comment>Maximum price in the stk database for all priced orders</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="SSR_DATA" size="28" cgen:file="/mnt/pos.shrb/include/events/SSR_DATA.h">
<Members>
<DataMember name="sd_mode" offset="0">
<Annotation>
<Comment>See "SR_MODE..." values below.</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="SR_MODE_EXE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sd_side" offset="1">
<Annotation>
<Comment>BUY or SELL.</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sd_shares" offset="4">
<Annotation>
<Comment>Eligible shares stopped.</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="sd_security" offset="8">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sd_stopped_pri" offset="20">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sd_inel_shares" offset="24">
<Annotation>
<Comment>Ineligible shares stopped. char sd_tick;</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<Constants>
<Enumerator name="SR_MODE_WARNING" value="0"/>
<Enumerator name="SR_MODE_EXE" value="1"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="SR_MODE_WARNING"/>
<EnumeratorRef name="SR_MODE_EXE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="STK_INACTIVE_INFO" size="2" cgen:file="/mnt/pos.shrb/include/events/STK_INACTIVE_INFO.h">
<Members>
<DataMember name="si_bits" offset="0">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SI_SWITCH_STK"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="SI_SWITCH_STK" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="SI_SWITCH_STK"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="STK_INFO" size="48" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<Members>
<DataMember name="si_symbol" offset="0">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="si_grp_ta" offset="11">
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="si_ssr_flag" offset="17">
<Annotation>
<Comment>auto stp stk reporting</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned char" typeKind="NativeType"/>
</DataMember>
<DataMember name="si_tr_unit" offset="18">
<Annotation>
<Comment>units of trade</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="si_price_type" offset="20">
<Annotation>
<Comment>above enum</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="si_price_info" offset="24">
<Annotation>
<Comment>priceing info</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE_INFO" typeKind="Typedef"/>
</DataMember>
<DataMember name="si_denominator" offset="36">
<Annotation>
<Comment>translation from FOREIGN_ORDS price_unit</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE_DENOM" typeKind="Typedef"/>
</DataMember>
<DataMember name="si_max_price" offset="40">
<Annotation>
<Comment>max price based on denominator</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="si_has_odd_lot_position" offset="44">
<Annotation>
<Comment>stock has an odd lot position</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="si_itsOutExpType" offset="45">
<Annotation>
<Comment>Expiration type for ITS outgoing commitments</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="STK_QUEUE_REGISTRATION_DATA" size="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/STK_QUEUE_REGISTRATION_DATA.h">
<Members>
<DataMember name="m_QID" offset="0">
<Annotation>
<Comment>QID of the direct Filter to STK queue</Comment>
</Annotation>
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="STK_STATE" size="188" cgen:file="/mnt/pos.shrb/include/events/STK_STATE.h">
<Members>
<DataMember name="ss_which" offset="0">
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="auto_exec"/>
<Bit constantName="rnp"/>
<Bit constantName="autoquote"/>
<Bit constantName="flash_card"/>
<Bit constantName="open_cap"/>
<Bit constantName="mmp"/>
<Bit constantName="eqa"/>
<Bit constantName="quote_hi"/>
<Bit constantName="rptsts"/>
<Bit constantName="freeze"/>
<Bit constantName="quote"/>
<Bit constantName="lastsale"/>
<Bit constantName="open"/>
<Bit constantName="dll"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ss_dll" offset="4">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ss_open" offset="8">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ss_frozen" offset="12">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ss_ddd" offset="16">
<TypeOrTypeRef typeName="DSP_DLL_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="ss_ls" offset="36">
<TypeOrTypeRef typeName="LASTSALE" typeKind="Struct"/>
</DataMember>
<DataMember name="ss_qi" offset="48">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="QUOTE_INFO" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ss_rptsts_setup" offset="64">
<TypeOrTypeRef typeName="RPTSTS_SETUP" typeKind="Struct"/>
</DataMember>
<DataMember name="ss_high_price" offset="76">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ss_low_price" offset="80">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ss_quote_hi" offset="84">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ss_eqa" offset="88">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ss_mmp" offset="92">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ss_best_away_mkt_quote" offset="96">
<TypeOrTypeRef typeName="BEST_AWAY_MKT_QUOTE" typeKind="Struct"/>
</DataMember>
<DataMember name="ss_calc_its_best_quote" offset="120">
<TypeOrTypeRef typeName="BEST_AWAY_MKT_QUOTE" typeKind="Struct"/>
</DataMember>
<DataMember name="ss_mmp_news_alerts" offset="144">
<TypeOrTypeRef typeName="BYTE" typeKind="Typedef"/>
</DataMember>
<DataMember name="ss_open_cap_orders" offset="146">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ss_open_cap_qty" offset="152">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ss_cap_flash_card_qty" offset="160">
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ss_autoquote" offset="168">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ss_auto_exec" offset="172">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ss_rnp" offset="176">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ss_xpress_quote" offset="180">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="ss_late_to_close" offset="184">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="none" value="0"/>
<Enumerator name="dll" value="1"/>
<Enumerator name="open" value="2"/>
<Enumerator name="lastsale" value="3"/>
<Enumerator name="quote" value="4"/>
<Enumerator name="freeze" value="5"/>
<Enumerator name="rptsts" value="6"/>
<Enumerator name="quote_hi" value="7"/>
<Enumerator name="eqa" value="8"/>
<Enumerator name="mmp" value="9"/>
<Enumerator name="open_cap" value="10"/>
<Enumerator name="flash_card" value="11"/>
<Enumerator name="autoquote" value="12"/>
<Enumerator name="rnp" value="13"/>
<Enumerator name="auto_exec" value="14"/>
<Enumerator name="xpress_quote" value="15"/>
<Enumerator name="late_to_close" value="16"/>
<Enumerator name="not_dlled" value="0"/>
<Enumerator name="dll_on" value="1"/>
<Enumerator name="dlled" value="2"/>
<Enumerator name="dll_aborted" value="3"/>
<Enumerator name="closed" value="0"/>
<Enumerator name="stk_open" value="1"/>
<Enumerator name="quote_hilite_off" value="0"/>
<Enumerator name="quote_hilite_on" value="1"/>
<Enumerator name="notfrozen" value="0"/>
<Enumerator name="frozen" value="1"/>
<Enumerator name="frozen_blink" value="2"/>
<Enumerator name="frozen_rpt_blink" value="3"/>
<Enumerator name="unfreeze_rpt_blink" value="4"/>
<Enumerator name="auto_quote_none" value="0"/>
<Enumerator name="auto_quote_s1" value="1"/>
<Enumerator name="auto_quote_s2" value="2"/>
<Enumerator name="auto_quote_s3" value="3"/>
<Enumerator name="auto_quote_clear" value="4"/>
<Enumerator name="eqa_on" value="0"/>
<Enumerator name="eqa_assisted_quote" value="1"/>
<Enumerator name="eqa_prio1" value="2"/>
<Enumerator name="eqa_prio2" value="3"/>
<Enumerator name="eqa_stage1" value="4"/>
<Enumerator name="eqa_stage2" value="5"/>
<Enumerator name="mmp_on" value="0"/>
<Enumerator name="mmp_off" value="1"/>
<Enumerator name="mmp_news" value="2"/>
<Enumerator name="mmp_news_clearbit" value="3"/>
<Enumerator name="mmp_best_away_quote" value="4"/>
<Enumerator name="mmp_buy_better_away_mkt" value="5"/>
<Enumerator name="mmp_sell_better_away_mkt" value="6"/>
<Enumerator name="mmp_buy_clearbit" value="7"/>
<Enumerator name="mmp_sell_clearbit" value="8"/>
<Enumerator name="mmp_its_eligible" value="9"/>
<Enumerator name="mmp_news_alert1" value="0"/>
<Enumerator name="mmp_news_alert2" value="1"/>
<Enumerator name="mmp_news_alert3" value="2"/>
<Enumerator name="mmp_news_hot1" value="3"/>
<Enumerator name="mmp_news_hot2" value="4"/>
<Enumerator name="mmp_news_hot3" value="5"/>
<Enumerator name="one_rlot_buy" value="0"/>
<Enumerator name="one_rlot_sell" value="1"/>
<Enumerator name="aq_autoquote" value="2"/>
<Enumerator name="auto_exec_off" value="0"/>
<Enumerator name="auto_exec_on" value="1"/>
<Enumerator name="rnp_off" value="0"/>
<Enumerator name="rnp_on" value="1"/>
<Enumerator name="xpress_buy" value="0"/>
<Enumerator name="xpress_sell" value="1"/>
<Enumerator name="ltc_on" value="0"/>
<Enumerator name="ltc_off" value="1"/>
</Constants>
<NestedType>
<Enumeration name="field" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="none"/>
<EnumeratorRef name="dll"/>
<EnumeratorRef name="open"/>
<EnumeratorRef name="lastsale"/>
<EnumeratorRef name="quote"/>
<EnumeratorRef name="freeze"/>
<EnumeratorRef name="rptsts"/>
<EnumeratorRef name="quote_hi"/>
<EnumeratorRef name="eqa"/>
<EnumeratorRef name="mmp"/>
<EnumeratorRef name="open_cap"/>
<EnumeratorRef name="flash_card"/>
<EnumeratorRef name="autoquote"/>
<EnumeratorRef name="rnp"/>
<EnumeratorRef name="auto_exec"/>
<EnumeratorRef name="xpress_quote"/>
<EnumeratorRef name="late_to_close"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="dll_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="not_dlled"/>
<EnumeratorRef name="dll_on"/>
<EnumeratorRef name="dlled"/>
<EnumeratorRef name="dll_aborted"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="openclose_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="closed"/>
<EnumeratorRef name="stk_open"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="quote_hi_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="quote_hilite_off"/>
<EnumeratorRef name="quote_hilite_on"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="frozen_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="notfrozen"/>
<EnumeratorRef name="frozen"/>
<EnumeratorRef name="frozen_blink"/>
<EnumeratorRef name="frozen_rpt_blink"/>
<EnumeratorRef name="unfreeze_rpt_blink"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="auto_quote_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="auto_quote_none"/>
<EnumeratorRef name="auto_quote_s1"/>
<EnumeratorRef name="auto_quote_s2"/>
<EnumeratorRef name="auto_quote_s3"/>
<EnumeratorRef name="auto_quote_clear"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="eqa_state" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="eqa_on"/>
<EnumeratorRef name="eqa_assisted_quote"/>
<EnumeratorRef name="eqa_prio1"/>
<EnumeratorRef name="eqa_prio2"/>
<EnumeratorRef name="eqa_stage1"/>
<EnumeratorRef name="eqa_stage2"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="mmp_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="mmp_on"/>
<EnumeratorRef name="mmp_off"/>
<EnumeratorRef name="mmp_news"/>
<EnumeratorRef name="mmp_news_clearbit"/>
<EnumeratorRef name="mmp_best_away_quote"/>
<EnumeratorRef name="mmp_buy_better_away_mkt"/>
<EnumeratorRef name="mmp_sell_better_away_mkt"/>
<EnumeratorRef name="mmp_buy_clearbit"/>
<EnumeratorRef name="mmp_sell_clearbit"/>
<EnumeratorRef name="mmp_its_eligible"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="mmp_news_alert1"/>
<EnumeratorRef name="mmp_news_alert2"/>
<EnumeratorRef name="mmp_news_alert3"/>
<EnumeratorRef name="mmp_news_hot1"/>
<EnumeratorRef name="mmp_news_hot2"/>
<EnumeratorRef name="mmp_news_hot3"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="autoquote_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="one_rlot_buy"/>
<EnumeratorRef name="one_rlot_sell"/>
<EnumeratorRef name="aq_autoquote"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="auto_exec_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="auto_exec_off"/>
<EnumeratorRef name="auto_exec_on"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="rnp_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="rnp_off"/>
<EnumeratorRef name="rnp_on"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="xpress_quote_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="xpress_buy"/>
<EnumeratorRef name="xpress_sell"/>
</Enumeration>
</NestedType>
<NestedType>
<Enumeration name="late_to_close_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="ltc_on"/>
<EnumeratorRef name="ltc_off"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Typedef name="STKID" size="2" cgen:file="/mnt/pos.shrb/include/mgt/mman/generic_stk.h">
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</Typedef>
<Struct name="STOCK_XREF" size="18" cgen:file="/mnt/pos.shrb/include/events/STOCK_XREF.h">
<Members>
<DataMember name="sx_name" offset="0">
<TypeOrTypeRef>
<Symbol size="16"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sx_ident" offset="16">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="STOP_LMT" size="20" cgen:file="/mnt/pos.shrb/include/events/STOP_LMT.h">
<Members>
<DataMember name="sl_price" offset="0">
<Annotation>
<Comment>requested stop price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sl_side" offset="4">
<Annotation>
<Comment>side of book(BUY,SELL)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="sl_order_price" offset="8">
<Annotation>
<Comment>order price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sl_ta" offset="12">
<Annotation>
<Comment>order TA#</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="STOP_MKTS" size="12" cgen:file="/mnt/pos.shrb/include/events/STOP_MKTS.h">
<Members>
<DataMember name="sm_flags" offset="0">
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="sm_price" offset="4">
<Annotation>
<Comment>stopped price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="sm_side" offset="8">
<Annotation>
<Comment>side of book(BUY,SELL)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="SUB_ORDER" size="52" cgen:file="/mnt/pos.shrb/include/events/FIND_RSP.h">
<Members>
<DataMember name="so_qty" offset="0">
<Annotation>
<Comment>open order qty.</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="so_odd_qty" offset="2">
<Annotation>
<Comment>odd lot amount (0-99)</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="so_tanum" offset="3">
<Annotation>
<Comment>turnaround #</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="so_fbs" offset="9">
<Annotation>
<Comment>firm, branch, sequence</Comment>
</Annotation>
<TypeOrTypeRef typeName="FBS" typeKind="Struct"/>
</DataMember>
<DataMember name="so_ordtype" offset="20">
<Annotation>
<Comment>order type</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="OrderTypeMask" size="4">
<Bit constantName="SELL"/>
<Bit constantName="BUY"/>
<Bit constantName="OT_AUTOEX"/>
<Bit constantName="OT_CAP"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_LOC"/>
<Bit constantName="OT_TICK_S"/>
<Bit constantName="OT_MKT"/>
<Bit constantName="OT_LMT"/>
<Bit constantName="OT_AON"/>
<Bit constantName="OT_STP_LMT"/>
<Bit constantName="OT_STP"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="so_aux_price" offset="24">
<Annotation>
<Comment>auxiliary price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="so_ahead" offset="28">
<Annotation>
<Comment># shares ahead at THIS price</Comment>
</Annotation>
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="so_exe" offset="32">
<Annotation>
<Comment>already executed amount</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="so_cxl" offset="34">
<Annotation>
<Comment>already canceled amount</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="so_tif" offset="36">
<Annotation>
<Comment>time in force (DAY or GTC or OPG or OC_XPR)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="OrderCondMask" size="4">
<Bit constantName="OPG"/>
<Bit constantName="GTC"/>
<Bit constantName="DAY"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="so_conds" offset="40">
<Annotation>
<Comment>copy of om_conds mask</Comment>
</Annotation>
<TypeOrTypeRef typeName="OrderCondMask" typeKind="Typedef"/>
</DataMember>
<DataMember name="so_stop_price" offset="44">
<Annotation>
<Comment>stop price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="fr_pgtype" offset="48">
<Annotation>
<Comment>page type.</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="SUB_ORDER" size="52" cgen:file="/mnt/pos.shrb/include/events/FIND_RSP.h">
<TypeOrTypeRef typeName="SUB_ORDER" typeKind="Struct"/>
</Typedef>
<Struct name="SUBSCRIPTION" size="20" cgen:file="/mnt/pos.shrb/include/events/SUBSCRIPTION.h">
<Members>
<DataMember name="m_symbol" offset="0">
<Annotation>
<Comment>non-null terminated stk symbol</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="STK_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_class" offset="12">
<Annotation>
<Comment>type of subcribers (processes)</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="m_qid" offset="16">
<Annotation>
<Comment>qid upon which reponses are to be returned</Comment>
</Annotation>
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_ws" offset="18">
<Annotation>
<Comment>workstation upon which reponses are to be returned</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="STK_CLASS" value="0"/>
<Enumerator name="PMP_CLASS" value="1"/>
<Enumerator name="MIN_SUB_CLASS" value="2"/>
<Enumerator name="MAX_SUB_CLASS" value="3"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="STK_CLASS"/>
<EnumeratorRef name="PMP_CLASS"/>
<EnumeratorRef name="MIN_SUB_CLASS"/>
<EnumeratorRef name="MAX_SUB_CLASS"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="SUM_SCREEN" size="828" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Members>
<DataMember name="su_bits" offset="0">
<Annotation>
<Comment>tells what follows. values above</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="SU_STK_BOPPER"/>
<Bit constantName="SU_STK_LITE"/>
<Bit constantName="SU_TICK_UPDATE"/>
<Bit constantName="SU_LMT_UPDATE"/>
<Bit constantName="SU_LMT"/>
<Bit constantName="SU_MKT_UPDATE"/>
<Bit constantName="SU_MKT_SSIDE"/>
<Bit constantName="SU_MKT_BSIDE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="su_filler" offset="4">
<Annotation>
<Comment>unused filler</Comment>
</Annotation>
<TypeOrTypeRef typeName="ULONG" typeKind="Typedef"/>
</DataMember>
<DataMember name="su_mkts" offset="8">
<TypeOrTypeRef typeName="MKT_DATA" typeKind="Typedef"/>
</DataMember>
<DataMember name="su_ticks" offset="112">
<TypeOrTypeRef typeName="TICK_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="su_lmts" offset="124">
<TypeOrTypeRef typeName="LMT_DATA" typeKind="Struct"/>
</DataMember>
<Constants>
<Enumerator name="MKT_CNT" value="0"/>
<Enumerator name="MS_BMKT_FLASH" value="1" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>flash buy mkt - new order accepted!</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MS_SMKT_FLASH" value="2" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>flash sell mkt - see above why</Comment>
</Annotation>
</Enumerator>
<Enumerator name="N_SUMM_PRICES" value="3" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment># prices on summary screen</Comment>
</Annotation>
</Enumerator>
<Enumerator name="N_SUMM_SCREEN" value="4"/>
<Enumerator name="MAX_PRI" value="5"/>
<Enumerator name="MAX_PRI_CNT" value="6" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment># PRICE_TOTS in summ screen</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_HI" value="7" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>entire line highlight</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_LN_UPDATE" value="8" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>line update, as opposed to part of summary screen</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_STOP_NE" value="9" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>there are stop limits with differing lmt &amp; stop prices</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_TICK_EXISTS" value="10" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>filed ticks exist at this price (and none better)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_TICK_BETTER" value="11" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>filed ticks exist at this or better pri; (may include market) skip 0x20 and 0x40 for BUY and SELL</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_HI_2" value="12" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>overrides PT_HI on side of PRICE_TOT</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_TICK_HI" value="13" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>tick qty highlight</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_LMT_HI" value="14" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>lmt qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_AON_HI" value="15" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>aon qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_OPG_HI" value="16" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>opg qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_LOC_HI" value="17" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>loc qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_STP_HI" value="18" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>stp qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_SL_HI" value="19" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>sl qty highlight for price</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_NEW_PRICE_HI" value="20" cgen:file="/mnt/pos.shrb/include/events/PRICE_TOTS.h">
<Annotation>
<Comment>new page created in summary</Comment>
</Annotation>
</Enumerator>
<Enumerator name="LD_AB_MORE" value="21" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>more prices above</Comment>
</Annotation>
</Enumerator>
<Enumerator name="LD_BL_MORE" value="22" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>more prices below values of su_bits in SUM_SCREEN (shows contents of msg)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_MKT_BSIDE" value="23" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>MKT_BSIDE struct follows</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_MKT_SSIDE" value="24" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>MKT_SSIDE struct follows</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_MKT_UPDATE" value="25" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>MKT_UPDATE struct follows</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_LMT" value="26" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>PRICE_TOTS structs follow (for standard limit screen) (cannot have together with SU_LMT_UPDATE)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_LMT_UPDATE" value="27" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>1 or 2 PRICE_TOTS structs follow (update for a single limit line</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_TICK_UPDATE" value="28"/>
<Enumerator name="SU_STK_LITE" value="29" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>hilite stock name (previously WS_STK_LITE)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="SU_STK_BOPPER" value="30" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>bopper on (w/ STK_LITE)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="U_MKT_LN" value="31"/>
<Enumerator name="U_BMKT" value="32"/>
<Enumerator name="U_SMKT" value="33"/>
<Enumerator name="U_LMT_LN" value="34"/>
<Enumerator name="U_LMT" value="35"/>
<Enumerator name="TD_TICK_BSIDE" value="36" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>opened ticks exist on buy side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TD_TICK_SSIDE" value="37" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>opened ticks exist on sell side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TD_TICK_BCLR" value="38" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>no ticks on buy side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TD_TICK_SCLR" value="39" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>no ticks on sell side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_TICK_BCLR" value="40" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>0x0010</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_TICK_SCLR" value="41" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>no ticks on sell side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_TICK_BSIDE" value="42" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>0x0040</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_TICK_SSIDE" value="43" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>opened ticks exist on sell side</Comment>
</Annotation>
</Enumerator>
<Enumerator name="WS_TICK_UPDATE" value="44" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Annotation>
<Comment>update tick data</Comment>
</Annotation>
</Enumerator>
<Enumerator name="PT_STOP_EXISTS" value="45"/>
</Constants>
<NestedType>
<Typedef name="MKT_DATA" size="104">
<TypeOrTypeRef typeName="MKT_DATA" typeKind="Union"/>
</Typedef>
</NestedType>
<NestedType>
<Typedef name="TICK_DATA" size="12">
<TypeOrTypeRef typeName="TICK_DATA" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Typedef name="LMT_DATA" size="704">
<TypeOrTypeRef typeName="LMT_DATA" typeKind="Struct"/>
</Typedef>
</NestedType>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="MKT_CNT"/>
<EnumeratorRef name="MS_BMKT_FLASH"/>
<EnumeratorRef name="MS_SMKT_FLASH"/>
<EnumeratorRef name="N_SUMM_PRICES"/>
<EnumeratorRef name="N_SUMM_SCREEN"/>
<EnumeratorRef name="MAX_PRI"/>
<EnumeratorRef name="MAX_PRI_CNT"/>
<EnumeratorRef name="PT_HI"/>
<EnumeratorRef name="PT_LN_UPDATE"/>
<EnumeratorRef name="PT_STOP_NE"/>
<EnumeratorRef name="PT_TICK_EXISTS"/>
<EnumeratorRef name="PT_TICK_BETTER"/>
<EnumeratorRef name="PT_HI_2"/>
<EnumeratorRef name="PT_TICK_HI"/>
<EnumeratorRef name="PT_LMT_HI"/>
<EnumeratorRef name="PT_AON_HI"/>
<EnumeratorRef name="PT_OPG_HI"/>
<EnumeratorRef name="PT_LOC_HI"/>
<EnumeratorRef name="PT_STP_HI"/>
<EnumeratorRef name="PT_SL_HI"/>
<EnumeratorRef name="PT_NEW_PRICE_HI"/>
<EnumeratorRef name="LD_AB_MORE"/>
<EnumeratorRef name="LD_BL_MORE"/>
<EnumeratorRef name="SU_MKT_BSIDE"/>
<EnumeratorRef name="SU_MKT_SSIDE"/>
<EnumeratorRef name="SU_MKT_UPDATE"/>
<EnumeratorRef name="SU_LMT"/>
<EnumeratorRef name="SU_LMT_UPDATE"/>
<EnumeratorRef name="SU_TICK_UPDATE"/>
<EnumeratorRef name="SU_STK_LITE"/>
<EnumeratorRef name="SU_STK_BOPPER"/>
<EnumeratorRef name="U_MKT_LN"/>
<EnumeratorRef name="U_BMKT"/>
<EnumeratorRef name="U_SMKT"/>
<EnumeratorRef name="U_LMT_LN"/>
<EnumeratorRef name="U_LMT"/>
<EnumeratorRef name="TD_TICK_BSIDE"/>
<EnumeratorRef name="TD_TICK_SSIDE"/>
<EnumeratorRef name="TD_TICK_BCLR"/>
<EnumeratorRef name="TD_TICK_SCLR"/>
<EnumeratorRef name="WS_TICK_BCLR"/>
<EnumeratorRef name="WS_TICK_SCLR"/>
<EnumeratorRef name="WS_TICK_BSIDE"/>
<EnumeratorRef name="WS_TICK_SSIDE"/>
<EnumeratorRef name="WS_TICK_UPDATE"/>
<EnumeratorRef name="PT_STOP_EXISTS"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Enumeration name="SummaryDataType" size="4" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/PM_PROXY_RESP_DATA.h">
<EnumeratorRef name="POSITION_DATA"/>
<EnumeratorRef name="TRADE_DATA"/>
<EnumeratorRef name="ALL_DATA"/>
</Enumeration>
<Typedef name="SummaryDataType" size="4" cgen:file="/mnt/pos.shrb/include/events/PM_PROXY_RESP_DATA.h">
<TypeOrTypeRef typeName="SummaryDataType" typeKind="Enumeration"/>
</Typedef>
<Struct name="SUPPL_TRADE_RPT" size="6" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<Members>
<DataMember name="str_unbundle" offset="0">
<Annotation>
<Comment>&gt;=2 sells and reporting on sell side</Comment>
</Annotation>
<TypeOrTypeRef typeName="BOOL" typeKind="Typedef"/>
</DataMember>
<DataMember name="str_strno" offset="2">
<Annotation>
<Comment>str elig if oars or &gt;=2 buys or &gt;=2 sells</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="str_end_blkrpt" offset="4">
<Annotation>
<Comment>&gt;=2 orders and no oars in rpt and EXE_DONE</Comment>
</Annotation>
<TypeOrTypeRef typeName="BOOL" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="SUPPL_TRADE_RPT" size="6" cgen:file="/mnt/pos.shrb/include/events/EXE_RPT.h">
<TypeOrTypeRef typeName="SUPPL_TRADE_RPT" typeKind="Struct"/>
</Typedef>
<Struct name="tagGQID" size="20">
<Members>
<DataMember name="gqu_ip" offset="0">
<TypeOrTypeRef typeName="in_addr" typeKind="Struct"/>
</DataMember>
<DataMember name="gqu_port" offset="4">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="gqu_mmanid" offset="8">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="gqu_mmanref" offset="12">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</DataMember>
<DataMember name="gqu_qid" offset="16">
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Typedef name="TANUM" size="6">
<TypeOrTypeRef>
<Symbol size="6"/>
</TypeOrTypeRef>
</Typedef>
<Struct name="TASK_XREF" size="18" cgen:file="/mnt/pos.shrb/include/events/TASK_XREF.h">
<Members>
<DataMember name="tx_name" offset="0">
<TypeOrTypeRef>
<Symbol size="16"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="tx_ident" offset="16">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="Ta" size="6" cgen:namespace="Pos::Util">
<Members>
<DataMember name="t" offset="0">
<TypeOrTypeRef typeName="TANUM" typeKind="Typedef"/>
</DataMember>
<Constants/>
<NestedType/>
</Members>
</Struct>
<Struct name="TDP_CONFIG_DATA" size="2" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/TDP_CONFIG_DATA.h">
<Members>
<DataMember name="tdp_sock_port" offset="0">
<TypeOrTypeRef typeName="USHORT" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="TDP_FIND_REQ_DATA" size="104" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/TDP_FIND_REQ_DATA.h">
<Members>
<DataMember name="tdp_routing" offset="0">
<TypeOrTypeRef typeName="SP_ROUTING_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="tdp_req_id" offset="28">
<TypeOrTypeRef>
<Symbol size="30" cgen:expression="SP_REQ_ID_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="tdp_dir" offset="60">
<TypeOrTypeRef typeName="SCROLL_DIR" typeKind="Enumeration"/>
</DataMember>
<DataMember name="tdp_side" offset="64">
<Annotation>
<Comment>BUY and/or SELL side</Comment>
</Annotation>
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="tdp_price" offset="66">
<Annotation>
<Comment>price in ascii</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="15" cgen:expression="SP_PRICE_TXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="tdp_start_time" offset="84">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="tdp_end_time" offset="88">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="tdp_contra" offset="92">
<TypeOrTypeRef>
<Symbol size="4" cgen:expression="MF_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="tdp_badge" offset="96">
<Annotation>
<Comment>badge id</Comment>
</Annotation>
<TypeOrTypeRef typeName="BADGEID" typeKind="Typedef"/>
</DataMember>
<DataMember name="tdp_sort_order" offset="98">
<Annotation>
<Comment>A[scending] or D[escending]</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<DataMember name="tdp_recs_per_update" offset="100">
<Annotation>
<Comment># of trade recs requested</Comment>
</Annotation>
<TypeOrTypeRef typeName="size_t" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Struct name="TDP_TRADE_LIST_UPDATE_DATA" size="4604" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/TDP_TRADE_LIST_UPDATE_DATA.h">
<Members>
<DataMember name="tdp_routing" offset="0">
<TypeOrTypeRef typeName="SP_ROUTING_DATA" typeKind="Struct"/>
</DataMember>
<DataMember name="tdp_timestamp" offset="28">
<Annotation>
<Comment>Timestamp of the PMP query</Comment>
</Annotation>
<TypeOrTypeRef typeName="time_t" typeKind="Typedef"/>
</DataMember>
<DataMember name="tdp_trade_unit" offset="32">
<Annotation>
<Comment>Trade unit</Comment>
</Annotation>
<TypeOrTypeRef typeName="TRADE_UNIT" typeKind="Typedef"/>
</DataMember>
<DataMember name="tdp_start_position" offset="36">
<Annotation>
<Comment>Prin's starting position in stock</Comment>
</Annotation>
<TypeOrTypeRef typeName="POSITION" typeKind="Typedef"/>
</DataMember>
<DataMember name="tdp_flags" offset="40">
<Annotation>
<Comment>More above, below. See pos_types.h</Comment>
</Annotation>
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="tdp_num_recs" offset="42">
<Annotation>
<Comment>Number of tdp_records</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="tdp_records" offset="44">
<TypeOrTypeRef>
<Array numElements="30" cgen:expression="SP_TRADE_LIST_MAX_SIZE">
<TypeOrTypeRef typeName="SP_TRADE_LIST_REC" typeKind="Struct"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="TEXT_MSG_SHORT" size="82" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Members>
<DataMember name="ts_msg_class" offset="0">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ts_msg_priority" offset="2">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ts_task_id" offset="4">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ts_msg_id" offset="6">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ts_stk_id" offset="8">
<Annotation>
<Comment>for report status msgs only</Comment>
</Annotation>
<TypeOrTypeRef typeName="STKID" typeKind="Typedef"/>
</DataMember>
<DataMember name="ts_flags" offset="10">
<Annotation>
<Comment>See above for values.</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="MASK" size="2">
<Bit constantName="TEXT_MSG_SHORT_RPTSTS"/>
<Bit constantName="TEXT_MSG_SHORT_HAS_INFO"/>
<Bit constantName="TEXT_MSG_SHORT_IS_EMPTY"/>
<Bit constantName="TEXT_MSG_SHORT_HAS_NEXT_MSG"/>
<Bit constantName="TEXT_MSG_SHORT_HAS_PREV_MSG"/>
<Bit constantName="TEXT_MSG_SHORT_HAS_TEXT"/>
<Bit constantName="TEXT_ATTRIB_RED"/>
<Bit constantName="TEXT_ATTRIB_YELLOW"/>
<Bit constantName="TEXT_ATTRIB_ON_CMD"/>
<Bit constantName="TEXT_ATTRIB_UNDERLINE"/>
<Bit constantName="TEXT_ATTRIB_BLINK"/>
<Bit constantName="TEXT_ATTRIB_REVERSE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ts_subject" offset="12">
<TypeOrTypeRef>
<Symbol size="35" cgen:expression="MAX_MSG_SUBJECT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ts_subject_attribs" offset="47">
<TypeOrTypeRef>
<Array numElements="35" cgen:expression="MAX_MSG_SUBJECT_SIZE">
<TypeOrTypeRef typeName="CHMASK" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="MSG_SUBJECT_SIZE" value="0" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>Use 34 rather than 35 (from frs) to allow room for the up/down arrow 35 chars plus terminal '\0'</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_MSG_SUBJECT_SIZE" value="1"/>
<Enumerator name="MAX_MENU_FIELD_SIZE" value="2"/>
<Enumerator name="NUM_MSG_TEXT_LINES" value="3"/>
<Enumerator name="MSG_TEXT_LINE_LENGTH" value="4" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>Same size as AXL template. ts_flags Set by originator.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_HAS_TEXT" value="5" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>tm_long exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_HAS_PREV_MSG" value="6" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>previous msg exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_HAS_NEXT_MSG" value="7" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>another msg exists. Set by Display.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_IS_EMPTY" value="8" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = Msg is empty. Placeholder. Set by originator.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_HAS_INFO" value="9" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>tm_info exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_SHORT_RPTSTS" value="10" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>this is report status msg ts_subject_attribs:</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_NONE" value="11" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>Default case.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_REVERSE" value="12" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = Reverse video.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_BLINK" value="13" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = Blink.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_UNDERLINE" value="14" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = Underline.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_ON_CMD" value="15" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = change attrib ? on cmd.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_YELLOW" value="16" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = yellow (default is white)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIB_RED" value="17" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>1 = red (default is white)</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_ATTRIBS" value="18"/>
<Enumerator name="TEXT_ATTRIB_COLORS" value="19" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SHORT.h">
<Annotation>
<Comment>4 MSB bits define color(s).</Comment>
</Annotation>
</Enumerator>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="MSG_SUBJECT_SIZE"/>
<EnumeratorRef name="MAX_MSG_SUBJECT_SIZE"/>
<EnumeratorRef name="MAX_MENU_FIELD_SIZE"/>
<EnumeratorRef name="NUM_MSG_TEXT_LINES"/>
<EnumeratorRef name="MSG_TEXT_LINE_LENGTH"/>
<EnumeratorRef name="TEXT_MSG_SHORT_HAS_TEXT"/>
<EnumeratorRef name="TEXT_MSG_SHORT_HAS_PREV_MSG"/>
<EnumeratorRef name="TEXT_MSG_SHORT_HAS_NEXT_MSG"/>
<EnumeratorRef name="TEXT_MSG_SHORT_IS_EMPTY"/>
<EnumeratorRef name="TEXT_MSG_SHORT_HAS_INFO"/>
<EnumeratorRef name="TEXT_MSG_SHORT_RPTSTS"/>
<EnumeratorRef name="TEXT_ATTRIB_NONE"/>
<EnumeratorRef name="TEXT_ATTRIB_REVERSE"/>
<EnumeratorRef name="TEXT_ATTRIB_BLINK"/>
<EnumeratorRef name="TEXT_ATTRIB_UNDERLINE"/>
<EnumeratorRef name="TEXT_ATTRIB_ON_CMD"/>
<EnumeratorRef name="TEXT_ATTRIB_YELLOW"/>
<EnumeratorRef name="TEXT_ATTRIB_RED"/>
<EnumeratorRef name="TEXT_ATTRIBS"/>
<EnumeratorRef name="TEXT_ATTRIB_COLORS"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="TEXT_MSG_SS" size="500" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG_SS.h">
<Members>
<DataMember name="tms_ss_set" offset="0">
<TypeOrTypeRef typeName="MW_SS_MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="tms_txt" offset="4">
<TypeOrTypeRef typeName="TEXT_MSG" typeKind="Struct"/>
</DataMember>
<Constants>
<Enumerator name="ALL_SS_MASK" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="ALL_SS_MASK"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="TEXT_MSG" size="496" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Members>
<DataMember name="tm_short_msg" offset="0">
<TypeOrTypeRef typeName="TEXT_MSG_SHORT" typeKind="Struct"/>
</DataMember>
<DataMember name="tm_size" offset="82">
<Annotation>
<Comment>size of extended text (tm_text).</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="tm_text" offset="84">
<TypeOrTypeRef>
<Symbol size="170" cgen:expression="MAX_MSG_TEXT_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="tm_info_size" offset="254">
<Annotation>
<Comment>size of associated info (tm_info).</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="tm_info" offset="256">
<TypeOrTypeRef>
<Symbol size="240" cgen:expression="MAX_MSG_INFO_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="TEXT_MSG_HAS_TEXT" value="0" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>tm_long exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_HAS_PREV_MSG" value="1" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>previous msg exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_HAS_NEXT_MSG" value="2" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>another msg exists</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MSG_NOT_FOUND" value="3" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>msg not found!</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_IS_EMPTY" value="4" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>1 = Msg is empty. Placeholder.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_HAS_INFO" value="5" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>tm_info exists.</Comment>
</Annotation>
</Enumerator>
<Enumerator name="TEXT_MSG_RPTSTS" value="6" cgen:file="/mnt/pos.shrb/include/events/TEXT_MSG.h">
<Annotation>
<Comment>this is report status msg</Comment>
</Annotation>
</Enumerator>
<Enumerator name="MAX_MSG_INFO_SIZE" value="7"/>
<Enumerator name="MAX_MSG_TEXT_SIZE" value="8"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="TEXT_MSG_HAS_TEXT"/>
<EnumeratorRef name="TEXT_MSG_HAS_PREV_MSG"/>
<EnumeratorRef name="TEXT_MSG_HAS_NEXT_MSG"/>
<EnumeratorRef name="MSG_NOT_FOUND"/>
<EnumeratorRef name="TEXT_MSG_IS_EMPTY"/>
<EnumeratorRef name="TEXT_MSG_HAS_INFO"/>
<EnumeratorRef name="TEXT_MSG_RPTSTS"/>
<EnumeratorRef name="MAX_MSG_INFO_SIZE"/>
<EnumeratorRef name="MAX_MSG_TEXT_SIZE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="TEXT" size="514" cgen:file="/mnt/pos.shrb/include/events/TEXT.h">
<Members>
<DataMember name="len" offset="0">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="text" offset="2">
<TypeOrTypeRef>
<Symbol size="512" cgen:expression="TEXT_LEN"/>
</TypeOrTypeRef>
</DataMember>
<Constants>
<Enumerator name="TEXT_LEN" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="TEXT_LEN"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="TICK_DATA" size="12" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<Members>
<DataMember name="td_flags" offset="0">
<Annotation>
<Comment>bit mask (see below)</Comment>
</Annotation>
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="TD_TICK_SCLR"/>
<Bit constantName="TD_TICK_BCLR"/>
<Bit constantName="TD_TICK_SSIDE"/>
<Bit constantName="TD_TICK_BSIDE"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="td_filed_side" offset="4">
<Annotation>
<Comment>filed ticks exist on buy,sell sides</Comment>
</Annotation>
<TypeOrTypeRef>
<Array numElements="2">
<TypeOrTypeRef typeName="AGQTY" typeKind="Typedef"/>
</Array>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Typedef name="TICK_DATA" size="12" cgen:file="/mnt/pos.shrb/include/events/SUM_SCREEN.h">
<TypeOrTypeRef typeName="TICK_DATA" typeKind="Struct"/>
</Typedef>
<Typedef name="TID" size="2" cgen:file="/mnt/pos.shrb/include/mgt/mman/mman.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Typedef name="time_t" size="4">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</Typedef>
<Typedef name="TIME" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Struct name="TRADE_LIST_DETAIL" size="36" cgen:file="/mnt/pos.shrb/include/events/BADGE_PAGE_RSP_MSG.h">
<Members>
<DataMember name="badge_side_" offset="0">
<Annotation>
<Comment>BOT, SLD</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<DataMember name="execution_price_" offset="4">
<Annotation>
<Comment>execution price</Comment>
</Annotation>
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="qty_traded_" offset="8">
<Annotation>
<Comment>quantity traded</Comment>
</Annotation>
<TypeOrTypeRef typeName="QTY" typeKind="Typedef"/>
</DataMember>
<DataMember name="fbs_" offset="10">
<Annotation>
<Comment>firm, branch, sequence</Comment>
</Annotation>
<TypeOrTypeRef typeName="FBS" typeKind="Struct"/>
</DataMember>
<DataMember name="execution_time_" offset="24">
<Annotation>
<Comment>execution time</Comment>
</Annotation>
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="ta_num_" offset="28">
<Annotation>
<Comment>order TA#</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="6" cgen:expression="TA_SIZE"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="order_type_" offset="34">
<Annotation>
<Comment>order type</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="BR_BADGE_BOT" value="0"/>
<Enumerator name="BR_BADGE_SKIPLINE" value="1"/>
<Enumerator name="BR_BADGE_SLD" value="2"/>
</Constants>
<NestedType>
<Enumeration name="BR_BADGE_SIDE" size="4" cgen:namespace="TRADE_LIST_DETAIL">
<EnumeratorRef name="BR_BADGE_BOT"/>
<EnumeratorRef name="BR_BADGE_SKIPLINE"/>
<EnumeratorRef name="BR_BADGE_SLD"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Typedef name="TRADE_UNIT" size="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<Typedef name="u_short" size="2">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Typedef name="ULONG" size="4" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned int" typeKind="NativeType"/>
</Typedef>
<NativeType name="unsigned char" size="1"/>
<NativeType name="unsigned int" size="4"/>
<NativeType name="unsigned long long" size="8"/>
<NativeType name="unsigned long" size="4"/>
<NativeType name="unsigned short" size="2"/>
<Struct name="UPDATE_SCREENS" size="12" cgen:file="/mnt/pos.shrb/include/events/UPDATE_SCREENS.h">
<Members>
<DataMember name="type" offset="0">
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<DataMember name="price" offset="4">
<TypeOrTypeRef typeName="PRICE" typeKind="Typedef"/>
</DataMember>
<DataMember name="update" offset="8">
<TypeOrTypeRef typeName="MASK" typeKind="Typedef"/>
</DataMember>
<Constants>
<Enumerator name="FULL_UPDATE" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="FULL_UPDATE"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="USER_HDR" size="20" cgen:file="/mnt/pos.shrb/include/events/AR_MSG.h">
<Members>
<DataMember name="uh_type" offset="0">
<Annotation>
<Comment>private user type</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="uh_subtype" offset="4">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="uh_ref" offset="8">
<Annotation>
<Comment>same user reference</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="uh_respq" offset="12">
<Annotation>
<Comment>reply gqid</Comment>
</Annotation>
<TypeOrTypeRef typeName="QID" typeKind="Typedef"/>
</DataMember>
<DataMember name="uh_tid" offset="14">
<Annotation>
<Comment>task id of an interested process</Comment>
</Annotation>
<TypeOrTypeRef typeName="TID" typeKind="Typedef"/>
</DataMember>
<DataMember name="uh_len" offset="16">
<Annotation>
<Comment>length of data folowing!</Comment>
</Annotation>
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Typedef name="UserValueType" size="2" cgen:file="/mnt/pos.shrb/include/events/gov.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Typedef name="ushort" size="2">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Typedef name="USHORT" size="2" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h">
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</Typedef>
<Struct name="VALIDATE_SLMT_RSP_DATA" size="2" cgen:file="/mnt/pos.shrb/include/events/VALIDATE_SLMT_RSP_DATA.h">
<Members>
<DataMember name="slv_result" offset="0">
<Annotation>
<Comment>One of the numbers above</Comment>
</Annotation>
<TypeOrTypeRef typeName="unsigned short" typeKind="NativeType"/>
</DataMember>
</Members>
</Struct>
<Struct name="WS_INFO" size="32" cgen:file="/mnt/pos.shrb/include/events/WS_INFO.h">
<Members>
<DataMember name="ws_entity" offset="0">
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="NUM_ENTITY"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ws_pwd" offset="8">
<Annotation>
<Comment>login password</Comment>
</Annotation>
<TypeOrTypeRef>
<Symbol size="8" cgen:expression="NUM_PWD"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ws_group_nd_times" offset="16">
<Annotation>
<Comment>Number of times GND can be done.</Comment>
</Annotation>
<TypeOrTypeRef typeName="short" typeKind="NativeType"/>
</DataMember>
<DataMember name="ws_flag" offset="18">
<TypeOrTypeRef>
<Mask name="CHMASK" size="1">
<Bit constantName="WS_AWO_ON"/>
</Mask>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ws_spares" offset="19">
<TypeOrTypeRef>
<Symbol size="11" cgen:expression="NUM_SPARES"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="ws_nstock" offset="30">
<Annotation>
<Comment>Indicates mode: True = N stock, False = regular.</Comment>
</Annotation>
<TypeOrTypeRef typeName="char" typeKind="NativeType"/>
</DataMember>
<Constants>
<Enumerator name="WS_AWO_ON" value="0"/>
</Constants>
<NestedType>
<Enumeration size="4">
<EnumeratorRef name="WS_AWO_ON"/>
</Enumeration>
</NestedType>
</Members>
</Struct>
<Struct name="WS_INPUT" size="2048" cgen:file="/mnt/pos.shrb/include/misc/pss.h">
<Members>
<DataMember name="wi_seq_nbr" offset="0">
<TypeOrTypeRef typeName="int" typeKind="NativeType"/>
</DataMember>
<DataMember name="wi_is_head" offset="4">
<TypeOrTypeRef typeName="IS_HEAD" typeKind="Struct"/>
</DataMember>
<DataMember name="wi_pretxt" offset="25">
<TypeOrTypeRef typeName="PRE_TEXT" typeKind="Struct"/>
</DataMember>
<DataMember name="wi_text" offset="49">
<TypeOrTypeRef>
<Symbol size="1999"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Struct name="XPRESS_CUTOFF_TIMER_IN_DATA" size="8" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/XPRESS_CUTOFF_TIMER_IN_DATA.h">
<Members>
<DataMember name="m_xpressCutoffTime" offset="0">
<TypeOrTypeRef typeName="MILLITIME" typeKind="Typedef"/>
</DataMember>
<DataMember name="m_xpressCutoffDate" offset="4">
<TypeOrTypeRef typeName="JDATE" typeKind="Typedef"/>
</DataMember>
</Members>
</Struct>
<Enumeration name="XPRESS_QUOTE_INDICATOR" size="4" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<EnumeratorRef name="MQ_NOT_XPRESS_QUOTE"/>
<EnumeratorRef name="MQ_OLD_QUOTE_NEW_XPRESS"/>
<EnumeratorRef name="MQ_NEW_QUOTE_OLD_XPRESS"/>
<EnumeratorRef name="MQ_OLD_QUOTE_CXL_XPRESS"/>
<EnumeratorRef name="MQ_OLD_QUOTE_OLD_XPRESS"/>
</Enumeration>
<Typedef name="XPRESS_QUOTE_INDICATOR" size="4" cgen:file="/mnt/pos.shrb/include/events/MDS_RPT.h">
<TypeOrTypeRef typeName="XPRESS_QUOTE_INDICATOR" typeKind="Enumeration"/>
</Typedef>
<Enumeration name="xpress_quote_st" size="4" cgen:namespace="STK_STATE">
<EnumeratorRef name="xpress_buy"/>
<EnumeratorRef name="xpress_sell"/>
</Enumeration>
<Struct name="XPRESS_QUOTE_TIMER_DATA" size="21" cgen:namespace="Pos::Msgs" cgen:file="/mnt/pos.shrb/include/events/XPRESS_QUOTE_TIMER_DATA.h">
<Members>
<DataMember name="m_sPostingTime" offset="0">
<TypeOrTypeRef>
<Symbol size="9" cgen:expression="ASCII_TIME_LEN+1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_sTimerSecs" offset="9">
<TypeOrTypeRef>
<Symbol size="3" cgen:expression="ASCII_SEC_LEN+1"/>
</TypeOrTypeRef>
</DataMember>
<DataMember name="m_sExpectedArrivalTime" offset="12">
<TypeOrTypeRef>
<Symbol size="9" cgen:expression="ASCII_TIME_LEN+1"/>
</TypeOrTypeRef>
</DataMember>
</Members>
</Struct>
<Enumeration imported="yes" name="ACTTYPE" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="NO_ACTTYPE"/>
<EnumeratorRef name="DBK_EXEC"/>
<EnumeratorRef name="ITS_EXEC"/>
<EnumeratorRef name="OLA_EXEC"/>
<EnumeratorRef name="MANUAL_TRADE"/>
<EnumeratorRef name="SAX_TRADE"/>
</Enumeration>
<Enumeration imported="yes" name="CORRECTIONTYPE" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="NO_CORRECTION"/>
<EnumeratorRef name="SAX_CORRECTION"/>
</Enumeration>
<Enumeration imported="yes" name="SETTLEMENTTYPE" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="SETTLEMENT_NONE"/>
<EnumeratorRef name="CASH"/>
<EnumeratorRef name="NEXT_DAY"/>
<EnumeratorRef name="SELLERS_OPTION"/>
</Enumeration>
<Enumeration imported="yes" name="SCROLL_DIR" cgen:file="/mnt/pos.shrb/include/misc/pos_types.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="SCROLL_UP"/>
<EnumeratorRef name="SCROLL_DOWN"/>
<EnumeratorRef name="SCROLL_TOP"/>
<EnumeratorRef name="SCROLL_BOTTOM"/>
<EnumeratorRef name="SCROLL_REFRESH"/>
</Enumeration>
<Enumeration imported="yes" name="its_e" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<EnumeratorRef name="MAX_ITS_EXE_GV"/>
<EnumeratorRef name="MAX_ITS_NAME_CHG_GV"/>
<EnumeratorRef name="N_ITS_GV"/>
<EnumeratorRef name="N_MEM_INFO_TYPES"/>
<EnumeratorRef name="NO_ITS_MSG_SLOTS"/>
<EnumeratorRef name="NO_ITS_LISTS"/>
<EnumeratorRef name="NO_ITS_PAGES"/>
<EnumeratorRef name="MAX_ERRTXT_SIZE"/>
</Enumeration>
<Enumeration imported="yes" name="QA_TS_REASON" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<Annotation>
<Comment>
    Reason codes for Quote Assist
    Timestamp data logging.
   </Comment>
</Annotation>
<Group>
<Annotation>
<Comment>
     Reasons why EQA starts to time an order
    </Comment>
</Annotation>
<EnumeratorRef name="QA_TS_ADD"/>
</Group>
<Group>
<Annotation>
<Comment>
     Reasons why EQA ceases to time order(s)
    </Comment>
</Annotation>
<EnumeratorRef name="QA_TS_UNFILED"/>
<EnumeratorRef name="QA_TS_CANCELED"/>
<EnumeratorRef name="QA_TS_EXECUTED"/>
<EnumeratorRef name="QA_TS_MAN_QUOTE"/>
<EnumeratorRef name="QA_TS_EQA_QUOTE"/>
<EnumeratorRef name="QA_TS_ORDER_IN_LOCKS_MKT"/>
<EnumeratorRef name="QA_TS_TRADE_HALT"/>
<EnumeratorRef name="QA_TS_CLOSING"/>
<EnumeratorRef name="QA_TS_BETTER_ORDER"/>
<EnumeratorRef name="QA_TS_TIMER_IN_EQA_OFF"/>
<EnumeratorRef name="QA_TS_TIMER_IN_MKT_LOCKED"/>
<EnumeratorRef name="QA_TS_EQA_ON_DRIVER_RESET"/>
<EnumeratorRef name="QA_TS_RNP"/>
</Group>
<Group>
<Annotation>
<Comment>
     Reasons why an NX Order is not eligible for auto-execution 
     Note: the reaons are listed in priority order              
    </Comment>
</Annotation>
<EnumeratorRef name="QA_NX_ORDER_ELIGIBLE"/>
<EnumeratorRef name="QA_NX_NO_QUOTE"/>
<EnumeratorRef name="QA_NX_TRADING_HALT"/>
<EnumeratorRef name="QA_NX_MARKET_CLOSING"/>
<EnumeratorRef name="QA_NX_NON_FIRM_QUOTE"/>
<EnumeratorRef name="QA_NX_NOT_MARKETABLE"/>
<EnumeratorRef name="QA_NX_QUOTE_AWAY_FROM_LAST_SALE"/>
<Annotation>
<Comment>
     The quote is greater             
     then $2 from the Last Sale       
    </Comment>
</Annotation>
<EnumeratorRef name="QA_NX_QUOTE_ONE_ROUND_LOT"/>
<EnumeratorRef name="QA_NX_BETTER_ITS_QUOTE"/>
</Group>
</Enumeration>
<Enumeration imported="yes" name="OC_REASON" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
    Reason codes for canceling Self-Canceling Orders
   </Comment>
</Annotation>
<EnumeratorRef name="NO_REASON"/>
<EnumeratorRef name="TIMED_OUT"/>
<EnumeratorRef name="AWAY_FROM_MARKET"/>
</Enumeration>
<Enumeration imported="yes" name="client_field" cgen:file="/mnt/pos.shrb/include/events/CLIENT_STATE_DATA.h">
<EnumeratorRef name="none"/>
<EnumeratorRef name="stk_tape"/>
<EnumeratorRef name="stk_open"/>
<EnumeratorRef name="stk_close"/>
<EnumeratorRef name="stk_quote"/>
<EnumeratorRef name="quote_assist"/>
<EnumeratorRef name="activateOE"/>
<EnumeratorRef name="itsPreOpening"/>
<EnumeratorRef name="groupNda"/>
</Enumeration>
<Enumeration imported="yes" name="Transactions" cgen:file="/mnt/pos.shrb/include/events/DOT_RPT.h">
<Annotation>
<Comment>
    Report type (dl_txn_type) (hi_txn_type) values 
   </Comment>
</Annotation>
<EnumeratorRef name="RPRT"/>
<EnumeratorRef name="CCXL"/>
<EnumeratorRef name="STPSTK"/>
<EnumeratorRef name="TLTC"/>
<EnumeratorRef name="PRCC"/>
<EnumeratorRef name="FMT_TST"/>
<EnumeratorRef name="ND"/>
<EnumeratorRef name="BI"/>
<EnumeratorRef name="STPOPG"/>
<EnumeratorRef name="DEL"/>
<EnumeratorRef name="BIP"/>
<EnumeratorRef name="DROP"/>
<EnumeratorRef name="CXL"/>
<EnumeratorRef name="SDEL"/>
<EnumeratorRef name="ITS_NC"/>
<EnumeratorRef name="TCXL"/>
<EnumeratorRef name="ACXL"/>
<EnumeratorRef name="REALNM"/>
<EnumeratorRef name="PROK"/>
<EnumeratorRef name="XCH"/>
<EnumeratorRef name="COM"/>
<EnumeratorRef name="T_LMT"/>
<EnumeratorRef name="HI_PROK"/>
<EnumeratorRef name="HI_XCH"/>
<EnumeratorRef name="HI_COM"/>
<EnumeratorRef name="HI_T_LMT"/>
<EnumeratorRef name="HI_PREVEX"/>
<EnumeratorRef name="HI_1ST"/>
<EnumeratorRef name="HI_CONT"/>
</Enumeration>
<Enumeration imported="yes" name="BDY_STATE" cgen:file="/mnt/pos.shrb/include/events/DSP_REG.h">
<EnumeratorRef name="BDY_UNDEFINED"/>
<EnumeratorRef name="BDY_ACTIVE"/>
<EnumeratorRef name="BDY_INACTIVE_TRY"/>
<EnumeratorRef name="BDY_INACTIVE"/>
<EnumeratorRef name="BDY_FORCED_INACTIVE"/>
</Enumeration>
<Enumeration imported="yes" name="EffSeqUploadWhen" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<EnumeratorRef name="ESUW_ON_CHANGE"/>
<EnumeratorRef name="ESUW_ON_DROP"/>
<EnumeratorRef name="ESUW_ON_EOD"/>
<EnumeratorRef name="ESUW_NOW"/>
</Enumeration>
<Enumeration imported="yes" name="EffSeqUploadFlags" cgen:file="/mnt/pos.shrb/include/events/EFF_SEQ_UPLOAD_PARAMS.h">
<EnumeratorRef name="ESUF_UPLOAD_ON"/>
<EnumeratorRef name="ESUF_GTC_ONLY"/>
<EnumeratorRef name="ESUF_DELTA_ONLY"/>
<EnumeratorRef name="ESUF_ELECTED_STP_ONLY"/>
<EnumeratorRef name="ESUF_ELECTED_STP_LMT_ONLY"/>
<EnumeratorRef name="ESUF_FILED_TICK_S_ONLY"/>
</Enumeration>
<Enumeration imported="yes" name="IER_Error" cgen:file="/mnt/pos.shrb/include/events/ITS_EXE_REJ_DATA.h">
<EnumeratorRef name="IER_COMMITMENT_NOT_OPEN"/>
</Enumeration>
<Enumeration imported="yes" name="IVENR_Error" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_NL_REJ_DATA.h">
<EnumeratorRef name="IVENR_COMMITMENT_NOT_OPEN"/>
</Enumeration>
<Enumeration imported="yes" name="IVER_Error" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_REJ_DATA.h">
<EnumeratorRef name="IVER_COMMITMENT_NOT_OPEN"/>
<EnumeratorRef name="IVER_BETTER_STOPPED"/>
</Enumeration>
<Enumeration imported="yes" name="IVER_Warning" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_EXE_RSP_DATA.h">
<EnumeratorRef name="IVER_ELECTED_STPS_OPEN"/>
</Enumeration>
<Enumeration imported="yes" name="IVNR_Error" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_NC_REJ_DATA.h">
<EnumeratorRef name="IVNR_BETTER_STOPPED"/>
</Enumeration>
<Enumeration imported="yes" name="IVNR_Warning" cgen:file="/mnt/pos.shrb/include/events/ITS_VALIDATE_NC_RSP_DATA.h">
<EnumeratorRef name="IVNR_ELECTED_STPS_OPEN"/>
</Enumeration>
<Enumeration imported="yes" name="ItsMessageType" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<EnumeratorRef name="ITS_MT_NAMES_CHANGE"/>
<EnumeratorRef name="ITS_MT_COMMITMENT"/>
<EnumeratorRef name="ITS_MT_EXECUTION_RESPONSE"/>
<EnumeratorRef name="ITS_MT_COMMITMENT_CANCEL"/>
<EnumeratorRef name="ITS_MT_ONE_SIDED_RESPONSE"/>
<EnumeratorRef name="ITS_MT_ADMIN"/>
</Enumeration>
<Enumeration imported="yes" name="ItsMessageSubtype" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<EnumeratorRef name="ITS_MS_NAMES_CHANGE"/>
<EnumeratorRef name="ITS_MS_COMMITMENT_ENTRY"/>
<EnumeratorRef name="ITS_MS_NAMES_LATER_RESPONDING"/>
<EnumeratorRef name="ITS_MS_NAMES_LATER_COMMITTING"/>
<EnumeratorRef name="ITS_MS_ADMIN_PO_INDICATION"/>
<EnumeratorRef name="ITS_MS_ADMIN_PO_RESPONSE"/>
<EnumeratorRef name="ITS_MS_ADMIN_PO_2ND_LOOK"/>
<EnumeratorRef name="ITS_MS_ADMIN_PO_CANCEL"/>
<EnumeratorRef name="ITS_MS_ADMIN_GENERAL"/>
<EnumeratorRef name="ITS_MS_NONE"/>
</Enumeration>
<Enumeration imported="yes" name="ItsMarketCenterID" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<EnumeratorRef name="ITS_MCID_AMEX"/>
<EnumeratorRef name="ITS_MCID_BSE"/>
<EnumeratorRef name="ITS_MCID_CSE"/>
<EnumeratorRef name="ITS_MCID_CHX"/>
<EnumeratorRef name="ITS_MCID_NYSE"/>
<EnumeratorRef name="ITS_MCID_ICC"/>
<EnumeratorRef name="ITS_MCID_PCX"/>
<EnumeratorRef name="ITS_MCID_PHLX"/>
<EnumeratorRef name="ITS_MCID_NASD"/>
<EnumeratorRef name="ITS_MCID_ITS"/>
<EnumeratorRef name="ITS_MCID_CBOE"/>
<EnumeratorRef name="ITS_MCID_BROADCAST"/>
</Enumeration>
<Enumeration imported="yes" name="ItsPriceDenominator" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<EnumeratorRef name="ITS_PD_NA"/>
<EnumeratorRef name="ITS_PD_8"/>
<EnumeratorRef name="ITS_PD_16"/>
<EnumeratorRef name="ITS_PD_32"/>
<EnumeratorRef name="ITS_PD_64"/>
<EnumeratorRef name="ITS_PD_128"/>
<EnumeratorRef name="ITS_PD_256"/>
<EnumeratorRef name="ITS_PD_10"/>
<EnumeratorRef name="ITS_PD_100"/>
<EnumeratorRef name="ITS_PD_1000"/>
<EnumeratorRef name="ITS_PD_10000"/>
<EnumeratorRef name="ITS_PD_100000"/>
<EnumeratorRef name="ITS_PD_1000000"/>
<EnumeratorRef name="ITS_PD_10000000"/>
<EnumeratorRef name="ITS_PD_100000000"/>
<EnumeratorRef name="ITS_PD_1"/>
</Enumeration>
<Enumeration imported="yes" name="ItsAction" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<EnumeratorRef name="ITS_ACTION_BUY"/>
<EnumeratorRef name="ITS_ACTION_SELL"/>
<EnumeratorRef name="ITS_ACTION_SELL_SHORT"/>
<EnumeratorRef name="ITS_ACTION_SELL_SHORT_EXEMPT"/>
</Enumeration>
<Enumeration imported="yes" name="ItsAgencyCode" cgen:file="/mnt/pos.shrb/include/events/ItsInterfaceTypes.h">
<Annotation>
<Comment>
    The ItsAgencyCode specifies the relationship of the specialist to
    the commitment.  Used in ITS_COMMITMENT_DATA and
    ITS_OPENING_RPT_DATA.
   </Comment>
</Annotation>
<EnumeratorRef name="ITS_AC_AGENT"/>
<EnumeratorRef name="ITS_AC_PRIN"/>
<EnumeratorRef name="ITS_AC_FIRM"/>
<EnumeratorRef name="ITS_AC_UNDETERMINED"/>
</Enumeration>
<Enumeration imported="yes" name="PM_CLIENT_TYPE" cgen:file="/mnt/pos.shrb/include/events/PM_CLIENT_REGISTER_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PM_DISPLAY"/>
<EnumeratorRef name="PM_FIRM_PROXY"/>
<EnumeratorRef name="PM_PRINTER"/>
<EnumeratorRef name="PM_OTHER"/>
</Enumeration>
<Enumeration imported="yes" name="PM_CONTRA_TA_LIST_FLAGS" cgen:file="/mnt/pos.shrb/include/events/PM_CONTRA_TA_LIST.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PM_IS_CONTINUED"/>
<EnumeratorRef name="PM_MAX_CONTRA_TA"/>
</Enumeration>
<Enumeration imported="yes" name="PM_FIND_TYPE" cgen:file="/mnt/pos.shrb/include/events/PM_FIND_REQ_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    The type of find request. 
   </Comment>
</Annotation>
<EnumeratorRef name="PM_FAST"/>
<EnumeratorRef name="PM_FIND"/>
</Enumeration>
<Enumeration imported="yes" name="PM_SORTTYPE" cgen:file="/mnt/pos.shrb/include/events/PM_FIND_REQ_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    Types of predefined sorts 
   </Comment>
</Annotation>
<EnumeratorRef name="PM_BY_TIME"/>
</Enumeration>
<Enumeration imported="yes" name="PM_SORTORDER" cgen:file="/mnt/pos.shrb/include/events/PM_FIND_REQ_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    Ordering for predefined sorts 
   </Comment>
</Annotation>
<EnumeratorRef name="PM_ASCENDING"/>
<EnumeratorRef name="PM_DESCENDING"/>
</Enumeration>
<Enumeration imported="yes" name="PM_MSG_REJECT_REASON" cgen:file="/mnt/pos.shrb/include/events/PM_MSG_REJECT_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PM_ALREADY_LOCKED"/>
<EnumeratorRef name="PM_NOT_LOCKED"/>
<EnumeratorRef name="PM_NO_SUCH_MSG"/>
<EnumeratorRef name="PM_BAD_HANDLE"/>
<EnumeratorRef name="PM_MULTI_USER_REJECT"/>
<EnumeratorRef name="PM_BAD_STOCK"/>
</Enumeration>
<Enumeration imported="yes" name="PM_PRINT_TRADE_LIST_STATUS" cgen:file="/mnt/pos.shrb/include/events/PM_PRINT_TRADE_LIST_UPDATE_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PM_PRINT_OK"/>
<EnumeratorRef name="PM_PRINT_EMPTY"/>
<EnumeratorRef name="PM_PRINT_UNAVAILABLE"/>
<EnumeratorRef name="PM_PRINT_IN_PROGRESS"/>
<EnumeratorRef name="PM_PRINT_ERROR"/>
</Enumeration>
<Enumeration imported="yes" name="PM_REC_EDIT_NACK_REASON" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_NACK_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="PM_LOCKED"/>
<EnumeratorRef name="PM_CANCELED"/>
<EnumeratorRef name="PM_STALE"/>
</Enumeration>
<Enumeration imported="yes" name="PM_REC_EDIT_FLAGS" cgen:file="/mnt/pos.shrb/include/events/PM_REC_EDIT_SAVE_DATA.h" cgen:namespace="Pos::Msgs">
<Annotation>
<Comment>
    Bit flags indicating what changed in an edit.
   </Comment>
</Annotation>
<EnumeratorRef name="EDIT_TYPE"/>
<EnumeratorRef name="EDIT_SIDE"/>
<EnumeratorRef name="EDIT_PRICE"/>
<EnumeratorRef name="EDIT_TICK"/>
<EnumeratorRef name="EDIT_TIME"/>
<EnumeratorRef name="EDIT_COMM1"/>
<EnumeratorRef name="EDIT_COMM2"/>
<EnumeratorRef name="EDIT_FREE_FORM"/>
<EnumeratorRef name="EDIT_CONTRAS"/>
<EnumeratorRef name="EDIT_CORRECTION"/>
</Enumeration>
<Enumeration imported="yes" name="RN_ERROR" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_VALIDATE_REJ_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="RN_INSUFFICIENT_AON"/>
<EnumeratorRef name="RN_INSUFFICIENT_CAP"/>
<EnumeratorRef name="RN_VIOLATE_STOP_PRICE"/>
</Enumeration>
<Enumeration imported="yes" name="RN_WARNING" cgen:file="/mnt/pos.shrb/include/events/REAL_NAMES_VALIDATE_RSP_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="RN_PARTIAL_AON"/>
<EnumeratorRef name="RN_PRIN_WITH_BETTER_AON"/>
</Enumeration>
<Enumeration imported="yes" name="TextCode" cgen:file="/mnt/pos.shrb/include/events/RPT.h">
<Annotation>
<Comment>
    values for nd_text_code field 
   </Comment>
</Annotation>
<EnumeratorRef name="NDT_INVALID"/>
<EnumeratorRef name="NDT_STOCK_NOT_OPEN"/>
<EnumeratorRef name="NDT_STOCK_NOT_CLOSED"/>
<EnumeratorRef name="NDT_ND"/>
<EnumeratorRef name="NDT_AHEAD_PLUS_MATCHES"/>
<EnumeratorRef name="NDT_OUTSIDE_QUOTE"/>
<EnumeratorRef name="NDT_POSSIBLE_MATCHES"/>
<EnumeratorRef name="NDT_NO_STANDING"/>
<EnumeratorRef name="NDT_GUARANTEE_OF_EXEC"/>
</Enumeration>
<Enumeration imported="yes" name="REJECT_REASON" cgen:file="/mnt/pos.shrb/include/events/RPT_EXEC_SYNC_REJ_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="RNP"/>
</Enumeration>
<Enumeration imported="yes" name="RPR_ERROR" cgen:file="/mnt/pos.shrb/include/events/RPT_QUOTE_REJ_DATA.h" cgen:namespace="Pos::Msgs">
<EnumeratorRef name="RPR_RNP_BID"/>
<EnumeratorRef name="RPR_RNP_OFFER"/>
</Enumeration>
<Enumeration imported="yes" name="sf_flag_values" cgen:file="/mnt/pos.shrb/include/events/SMART_FIND_RSP.h">
<EnumeratorRef name="SFR_PAGES_ABOVE"/>
<EnumeratorRef name="SFR_PAGES_BELOW"/>
<EnumeratorRef name="SFR_NO_QUOTE"/>
</Enumeration>
<Enumeration name="MMI_QUOTE_CONDITION_VALUE" cgen:file="/mnt/pos.shrb/include/events/PosDefs.h">
<EnumeratorRef name="MMI_NON_FIRM_BID"/>
<EnumeratorRef name="MMI_NON_FIRM_ASK"/>
</Enumeration>
<Enumeration name="PRICE_TYPE" cgen:file="/mnt/pos.shrb/include/events/STK_INFO.h">
<EnumeratorRef name="USA_EQUITY"/>
<EnumeratorRef name="BABY_BERK"/>
<EnumeratorRef name="FOREIGN_ORDINARIES"/>
</Enumeration>
<Enumeration name="ItsBlockTradeIndicator" cgen:file="/mnt/pos.shrb/include/events/ITS_COMMITMENT_DATA.h">
<EnumeratorRef name="ITS_BLOCK_TRADE"/>
<EnumeratorRef name="ITS_NOT_BLOCK_TRADE"/>
</Enumeration>
<Enumeration name="__si_codes" cgen:file="/usr/include/sys/siginfo.h">
<EnumeratorRef name="SI_QUEUE"/>
<EnumeratorRef name="SI_USER"/>
<EnumeratorRef name="SI_TIMER"/>
<EnumeratorRef name="SI_ASYNCIO"/>
<EnumeratorRef name="SI_MESGQ"/>
</Enumeration>
<Enumeration name="__clockid_t" cgen:file="/usr/include/sys/time.h">
<EnumeratorRef name="CLOCK_INVALID"/>
<EnumeratorRef name="CLOCK_REALTIME"/>
<EnumeratorRef name="CLOCK_VIRTUAL"/>
<EnumeratorRef name="CLOCK_PROFILE"/>
<EnumeratorRef name="RTTIMER0"/>
<EnumeratorRef name="RTTIMER1"/>
</Enumeration>
<Enumeration name="QuoteValidationReject" cgen:file="/mnt/pos.shrb/include/events/QuoteValidationErrors.h">
<EnumeratorRef name="REAL_NAMES_REQUIRED_BID"/>
<EnumeratorRef name="REAL_NAMES_REQUIRED_OFFER"/>
<EnumeratorRef name="XPRESS_ORDERS_PENDING_BID"/>
<EnumeratorRef name="XPRESS_ORDERS_PENDING_OFFER"/>
<EnumeratorRef name="XPRESS_CANCEL_LOCKOUT_BID"/>
<EnumeratorRef name="XPRESS_CANCEL_LOCKOUT_OFFER"/>
</Enumeration>
</Types>
<Messages xmlns:loc="http://www.siac.com/makeFlatRepository.xsl" xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance">
<Message name="ACK1" id="300" dataTypeName="ACTNO">
<Annotation>
<Comment>General acknowledgement of a message from the Display</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ACK" id="98" dataTypeName="">
<Annotation>
<Comment>Ack on a message with an id</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="Any"/>
</Receivers>
</Message>
<Message name="ADD_STOCK1" id="840" dataTypeName="STK_INFO">
<Annotation>
<Comment>Add stock command to Intel from PSS Passed from Q_UP to 4 tasks to add stock.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="DLL"/>
<ProcessRef name="Filter"/>
<ProcessRef name="Stk"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ADM_DETAIL_PAGE" id="8070" dataTypeName="">
<Annotation>
<Comment>request for adm page</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="AOB_UPDATE" id="280" dataTypeName="AOB_LMTS">
<Annotation>
<Comment>To update the opening window,dynamically or as requested</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="APPROUTE_EOD_END" id="31061" dataTypeName="APPROUTE_EOD_END_DATA">
<Annotation>
<Comment>APPROUTE sends the status of en of day filing to Q_UP</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppRouter"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="AR_CONFIG" id="20803" dataTypeName="AR_MSG">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Governor"/>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="AR_LACK" id="20814" dataTypeName="AR_LACK_MSG">
<Annotation>
<Comment>App Router config. First configuration message to many processes.</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppRouter"/>
</Senders>
<Receivers>
<ProcessRef name="Any"/>
</Receivers>
</Message>
<Message name="AR_REQ_TOUT" id="20805" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="AR_STK_CONFIG" id="20813" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="AWO_ENTRY" id="547" dataTypeName="PRIN_TO_CROWD">
<Annotation>
<Comment>AWO Report</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="BAD_MSG" id="0" dataTypeName="">
<Annotation>
<Comment>Define a msg that should never exist</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="BADGE_PAGE_RQST" id="10703" dataTypeName="BADGE_PAGE_RQST_MSG">
<Annotation>
<Comment>Badge ID Retrieval search function - request</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="BADGE_PAGE_RSP" id="10704" dataTypeName="BADGE_PAGE_RSP_MSG">
<Annotation>
<Comment>Badge ID Retrieval search function - response</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="BK_EAT_ORDER" id="5090" dataTypeName="">
<Annotation>
<Comment>data_log of order from filter which book will ignore</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="BLOCK_OFF" id="250" dataTypeName="BLK_FREEZE">
<Annotation>
<Comment>To terminate the updating of the opening window</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="BLOCK_ON" id="240" dataTypeName="REQ_AOB_LMTS">
<Annotation>
<Comment>To initiate the updating of the opening window</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="BLOCK_PRICE_UPDATE" id="270" dataTypeName="REQ_AOB_LMTS">
<Annotation>
<Comment>To update the price of the opening window</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="BLOCK_SEND_CMD" id="23307" dataTypeName="">
<Annotation>
<Comment>request to turn app_send blocking on/off</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="BLOCK_SYNC" id="260" dataTypeName="BLK_FREEZE">
<Annotation>
<Comment>To Freeze the Database prior to performing an opening</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="BOOK_RPT_REJECT" id="8088" dataTypeName="">
<Annotation>
<Comment>return reason for report reject</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="BOOT_CMD" id="832" dataTypeName="">
<Annotation>
<Comment>Reboot Intel, if we can do it. Command from PSS.</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="BUDDY_ACK" id="10502" dataTypeName="">
<Annotation>
<Comment>Ack a buddy book message (used by stk to aproved BUDDY_INACTIVE request)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="BUDDY_ACTIVE" id="10500" dataTypeName="">
<Annotation>
<Comment>XC[ss] - request [stkid (s)] to be active buddy</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowDB"/>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="BUDDY_INACTIVE" id="10501" dataTypeName="">
<Annotation>
<Comment>XC[ss] - request [stkid] to be inactive subject to stk approval (BUDDY_ACK/BUDDY_NACK)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowDB"/>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="BUDDY_NACK" id="10503" dataTypeName="">
<Annotation>
<Comment>NAck a buddy book message (ex: xc[ss] cannot change state from: BUDDY_ACTIVE to BUDDY_INACTIVE)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="BUDDY_TRY" id="10504" dataTypeName="">
<Annotation>
<Comment>invitation from Stk to XC's to try to chage there state (ex: from BUDDY_ACTIVE to BUDDY_INACTIVE)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="CANCEL_IN2" id="102" dataTypeName="IN_CANCEL">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CANCEL_IN" id="100" dataTypeName="IN_ORDER">
<Annotation>
<Comment>Incoming cancel from DOT or LMT II</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CANNOT_ATTACH" id="31043" dataTypeName="">
<Annotation>
<Comment>Sent to DATA_LOG with a text informing of queue attachment failure Used by dll when attachment to pmp faile</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="CAP_SUMRPT_CLOSE" id="26003" dataTypeName="">
<Annotation>
<Comment>Clearing the Summary Report template</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CAP_SUMRPT_OPEN_REQ" id="26000" dataTypeName="CAP_SUMRPT_OPEN_REQ_DATA">
<Annotation>
<Comment>Summary Report template request</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CAP_SUMRPT_OPEN_RSP" id="26001" dataTypeName="CAP_SUMRPT_OPEN_RSP_DATA">
<Annotation>
<Comment>Summary Report template response</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="CAP_SUMRPT_PRINT_NOACUM" id="26005" dataTypeName="">
<Annotation>
<Comment>Summary Report print and do not accumulate</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CAP_SUMRPT_PRINT" id="26004" dataTypeName="">
<Annotation>
<Comment>Summary Report print and accumulate</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CAP_SUMRPT_SCROLL_RSP" id="26002" dataTypeName="">
<Annotation>
<Comment>Summary Report scroll response</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="CHANGE_CLOSING_TIME" id="22021" dataTypeName="CHANGE_CLOSING_TIME_DATA">
<Annotation>
<Comment>Message sent to the Stk to indicate that the closing time was changed via the star command</Comment>
</Annotation>
<Senders>
<ProcessRef name="q_up"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CHANGE_CONN" id="10250" dataTypeName="">
<Annotation>
<Comment>New Entity and substation for a helper in contingency sit.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers/>
</Message>
<Message name="CHANGE_ETF_DELAY" id="22022" dataTypeName="CHANGE_ETF_DELAY_DATA">
<Annotation>
<Comment>Message sent to the Stk to indicate that the etf delay time was changed via the star command</Comment>
</Annotation>
<Senders>
<ProcessRef name="q_up"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CHG_TO_COLOR" id="10235" dataTypeName="">
<Annotation>
<Comment>to change the display from monocrome to color1</Comment>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="CLIENT_REGISTER" id="10410" dataTypeName="DSP_REG">
<Annotation>
<Comment>Notify a task that an Display came up</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
<ProcessRef name="DbTime"/>
<ProcessRef name="MessageWindowDB"/>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CLIENT_STATE_MSG" id="196" dataTypeName="CLIENT_STATE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CLIENT_UNREGISTER" id="10412" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CLOSE_STOCK_REMINDER" id="786" dataTypeName="">
<Annotation>
<Comment>Message to Q_UP to send stks MOC_CLOSE_STOCK message</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="CLR_HI_2" id="10265" dataTypeName="">
<Annotation>
<Comment>clear PT_HI_2 of pt_flags in PRICE_TOTS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CMD_ACK2" id="50" dataTypeName="BOOK_DATA">
<Annotation>
<Comment>Acknowledgment of command reception</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="CMD_NAK_HARD" id="65" dataTypeName="">
<Annotation>
<Comment>Negative Acknowledgment of command reception(hard error!)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="CMD_NAK2" id="60" dataTypeName="">
<Annotation>
<Comment>Negative Acknowledgment of command reception(soft error!)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="COM_CONFIG" id="30" dataTypeName="">
<Annotation>
<Comment>Configure a communication process</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
<ProcessRef name="AppReceive"/>
</Receivers>
</Message>
<Message name="COMM_BILLING_REQ" id="26010" dataTypeName="COMM_BILLING_REQ_DATA">
<Annotation>
<Comment>Bill Ticket Template Request</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="COMM_BILLING_RSP" id="26011" dataTypeName="COMM_BILLING_RSP_DATA">
<Annotation>
<Comment>Bill Ticket Template Response</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="COMM_BILLING_UPD" id="26012" dataTypeName="COMM_BILLING_UPD_DATA">
<Annotation>
<Comment>Bill Ticket Update</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="COMM_CONNECT" id="673" dataTypeName="">
<Annotation>
<Comment>Logical CLEAR of comm link between INTEL/PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="COMM_DISCONNECT" id="674" dataTypeName="">
<Annotation>
<Comment>Signal connection and pass connection id to sender process</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
<ProcessRef name="DllReceive"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
<ProcessRef name="DllSend"/>
</Receivers>
</Message>
<Message name="COMM_RESET" id="1050" dataTypeName="">
<Annotation>
<Comment>instructs MCX to turn RESET the communications controller</Comment>
</Annotation>
<Senders>
<ProcessRef name="OCI"/>
</Senders>
<Receivers>
<ProcessRef name="MXC"/>
</Receivers>
</Message>
<Message name="CONFIG_2_MSG" id="972" dataTypeName="HOST_CONFIG_DATA">
<Annotation>
<Comment>Workstation/stock configuration information</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="CONFIG_INFO_REQ" id="10020" dataTypeName="">
<Annotation>
<Comment>request for config info</Comment>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="CONFIG_MSG" id="970" dataTypeName="">
<Annotation>
<Comment>Workstation/stock configuration information</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="CONFIG_RQST" id="980" dataTypeName="">
<Annotation>
<Comment>Request for configuration from Intel</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="AppReceive"/>
</Receivers>
</Message>
<Message name="CONFIG_START" id="10240" dataTypeName="">
<Annotation>
<Comment>Re-initiate checking for screens/keybds by helpers</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers/>
</Message>
<Message name="CONFIG_STK_RESP" id="10030" dataTypeName="">
<Annotation>
<Comment>stock config response</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers/>
</Message>
<Message name="CONFIG_STOP" id="10245" dataTypeName="">
<Annotation>
<Comment>Stop re-initiated checking for I/O devices by helpers</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers/>
</Message>
<Message name="CONFIG_WS_RESP" id="10040" dataTypeName="">
<Annotation>
<Comment>work station config response</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers/>
</Message>
<Message name="COPY_TO_MW" id="8094" dataTypeName="">
<Annotation>
<Comment>switch in scr.dat</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CP_DATA_MSG_DSP" id="8056" dataTypeName="CP_TEXT">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="CP_DATA_REQ" id="8050" dataTypeName="MSG_REQ">
<Annotation>
<Comment>request data from ibk</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CP_DETAIL_FIRST" id="8072" dataTypeName="">
<Annotation>
<Comment>first commitment detail page</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="CP_DETAIL_OTHER" id="8074" dataTypeName="">
<Annotation>
<Comment>second and the rest of the commitment detail pages</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="CP_DETAIL_PAGE_REQ" id="8066" dataTypeName="REQ_DETAIL">
<Annotation>
<Comment>request for commitment detail page</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CP_DISP_ACTION" id="8052" dataTypeName="">
<Annotation>
<Comment>Action requested by user for specific commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
</Receivers>
</Message>
<Message name="CP_HALF_LIFE" id="8069" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CP_PAGE_OFF" id="8054" dataTypeName="">
<Annotation>
<Comment>to stop sending commitments from ibk to disp</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="CR_CHANGE_PRI" id="9" dataTypeName="">
<Annotation>
<Comment>Signal type returned for NL after timeout of 2 min.</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_CONFIG" id="20803" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_CXL" id="2" dataTypeName="">
<Annotation>
<Comment>CR cancel</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_DEF_AR" id="20804" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_DETAIL" id="7" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_EXE_NB" id="6" dataTypeName="">
<Annotation>
<Comment>For a non-blocking ITS execution</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_EXE_NL" id="5" dataTypeName="">
<Annotation>
<Comment>CR exec names later</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_EXE" id="1" dataTypeName="">
<Annotation>
<Comment>execution response</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_NAME_CHG" id="4" dataTypeName="">
<Annotation>
<Comment>CR name change (response of name later)</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_NOT_APP" id="3" dataTypeName="">
<Annotation>
<Comment>CR "not appropriate" msg</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_REM_RPTSTS" id="11" dataTypeName="SIGNAL_DATA">
<Annotation>
<Comment>Remove Report Status</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_REMOVE" id="8" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="CR_RPT_STATUS" id="10" dataTypeName="SIGNAL_DATA">
<Annotation>
<Comment>Report Status</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="D_ORD_ACK" id="750" dataTypeName="">
<Annotation>
<Comment>DLL Order data that does require an acknowledgement</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="DLL"/>
</Receivers>
</Message>
<Message name="D_ORD_NOACK" id="740" dataTypeName="">
<Annotation>
<Comment>DLL Order data that requires no acknowledgement</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="DLL"/>
</Receivers>
</Message>
<Message name="DBG" id="5020" dataTypeName="">
<Annotation>
<Comment>data_log of debugging data recorded by FMT (if FMDEBUG on)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="DEBUG_LOG_OFF" id="1040" dataTypeName="">
<Annotation>
<Comment>instructs Q_UP to turn OFF message logging</Comment>
</Annotation>
<Senders>
<ProcessRef name="OCI"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="DEBUG_LOG_ON" id="1030" dataTypeName="">
<Annotation>
<Comment>instructs Q_UP to turn ON message logging</Comment>
</Annotation>
<Senders>
<ProcessRef name="OCI"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="DEPTH_IND_REQ" id="26538" dataTypeName="">
<Annotation>
<Comment>Request for DepthIndication template to come up</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="DEPTH_IND_RPT" id="26540" dataTypeName="DEPTH_IND_RPT_DATA">
<Annotation>
<Comment>Send Depth Indications info to the Stk</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="DEPTH_IND_RSP" id="26539" dataTypeName="DEPTH_IND_RSP_DATA">
<Annotation>
<Comment>Response to the Display that DepthIndication template can come up</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="DETAIL_RQST" id="350" dataTypeName="OD_REQ">
<Annotation>
<Comment>To request a Detail screen on a desired order</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="DETAIL_SCR_UPDATE1" id="150" dataTypeName="OD_MSG">
<Annotation>
<Comment>Update for Order detail screen</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="DIAN_CARD_MSG" id="541" dataTypeName="">
<Annotation>
<Comment>To send a DI/AN card text msg (e.g. - OARS doesn't match) to the formatter for sending to PSS.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="DISCONNECT_CONN" id="10255" dataTypeName="">
<Annotation>
<Comment>Kill established helper connections</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers/>
</Message>
<Message name="DISP_CMD" id="810" dataTypeName="">
<Annotation>
<Comment>Request for information from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="DISP_OARS_IN" id="112" dataTypeName="">
<Annotation>
<Comment>Incoming status message from OARS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="DL_BLOCKED_ORDER" id="22093" dataTypeName="DLL_ORDERS">
<Annotation>
<Comment>Block of orders from dll to Stk</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="DL_ORDER_IN" id="22092" dataTypeName="DL_IN_ORDER">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="DLL_ABORT" id="770" dataTypeName="STK_INFO">
<Annotation>
<Comment>Notice of premature termination of DLL (bidirectional)</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
<ProcessRef name="DLL"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="DLL_ACCEPT" id="720" dataTypeName="DLL_ACCEPT_DATA">
<Annotation>
<Comment>Response to DLL_RQST of stock or object data from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="DLL_ACK_ABORT" id="782" dataTypeName="">
<Annotation>
<Comment>Acknowledgment of DLL ABORT from Display</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="DLL_ACTIVITY" id="24208" dataTypeName="DLL_ACTIVITY_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="DLL_BCS_ABORT" id="771" dataTypeName="">
<Annotation>
<Comment>Notice of premature termination of DLL due to bad check sum</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppSend"/>
</Senders>
<Receivers>
<ProcessRef name="DLL"/>
</Receivers>
</Message>
<Message name="DLL_BOOK_END" id="1080" dataTypeName="DLL_TICK_INFO">
<Annotation>
<Comment>End of DLL (== end of DLL)</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="DLL_BP_PRICE_FAIL" id="10350" dataTypeName="DLL_BP_FAIL_INFO">
<Annotation>
<Comment>tell book to note price/breakpoint failure in message window</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="DLL_CMD_ABORT" id="775" dataTypeName="">
<Annotation>
<Comment>Notice of premature termination of DLL (bidirectional)</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
<ProcessRef name="DLL"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="DLL_DATA_RQST" id="690" dataTypeName="DL_RQST">
<Annotation>
<Comment>Request for DLL of stock data from PSS to Intel</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
<ProcessRef name="DLL"/>
</Receivers>
</Message>
<Message name="DLL_END" id="780" dataTypeName="">
<Annotation>
<Comment>Notification of orderly termination of DLL</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="DLL"/>
</Receivers>
</Message>
<Message name="DLL_EOL_" id="24205" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="DLL_LACK" id="760" dataTypeName="">
<Annotation>
<Comment>Acknowledgement of an DLL order</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="AppReceive"/>
</Receivers>
</Message>
<Message name="DLL_LEADER_" id="24201" dataTypeName="DLL_LEADER">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="DLL_LEADER2_" id="24202" dataTypeName="DLL_LEADER2">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="DLL_LOG_CLEAR" id="675" dataTypeName="">
<Annotation>
<Comment>Signal connection loss to sender process</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
<ProcessRef name="DllReceive"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
<ProcessRef name="DllSend"/>
</Receivers>
</Message>
<Message name="DLL_OBJ_RQST" id="700" dataTypeName="">
<Annotation>
<Comment>Request for DLL of object files from PSS to Intel</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
<ProcessRef name="DLL"/>
</Receivers>
</Message>
<Message name="DLL_ORDER_RECORD_" id="24206" dataTypeName="DLL_ORDER_RECORD">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="DLL_ORDER_RECORD2_" id="24207" dataTypeName="DLL_ORDER_RECORD2">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="DLL_REJECT" id="730" dataTypeName="">
<Annotation>
<Comment>Response to DLL_RQST of stock or object data from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="DLL_START2" id="72" dataTypeName="DLL_LEADER2">
<Annotation>
<Comment>Notice of down line load start</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="DLL_START" id="70" dataTypeName="DLL_LEADER">
<Annotation>
<Comment>Notice of down line load start</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="DLL_TRAILER_" id="24203" dataTypeName="DLL_TRAILER">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="DLL_TRAILER2_" id="24204" dataTypeName="DLL_TRAILER2">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="DLL_UPLOAD" id="710" dataTypeName="">
<Annotation>
<Comment>Request for DLL to UPLOAD object files to PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
<ProcessRef name="DLL"/>
</Receivers>
</Message>
<Message name="DO_IMBALANCE_REMINDER" id="787" dataTypeName="">
<Annotation>
<Comment>Message to Q_UP to send a "Check Closing Imbalances" | message to Message Window</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="DO_XACC_CMD" id="788" dataTypeName="">
<Annotation>
<Comment>Signal to weakup Q_UP to do statistics for XACC</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="DROP_STK_PROCESS" id="23462" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="DROP_STOCK1" id="850" dataTypeName="STK_INFO">
<Annotation>
<Comment>Drop stock command to Intel from PSS Sent by Q_UP to 4 tasks to drop a stock.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="DLL"/>
<ProcessRef name="Filter"/>
<ProcessRef name="Stk"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="DSP_DLL_START" id="75" dataTypeName="DSP_DLL_DATA">
<Annotation>
<Comment>Notice of down line load start to Display process</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="DSP_TEMPLATE_MSG" id="10710" dataTypeName="PLAIN_TEXT">
<Annotation>
<Comment>Display puts template message into the LOG</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="ECHO_BACK_MSG" id="69" dataTypeName="ECHO_BACK_MSG_DATA">
<Annotation>
<Comment>Process receiving msgs echos back data. Implemented by poslib/echo_back.h</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="Any"/>
</Receivers>
</Message>
<Message name="EFF_SEQ_ASSIGN" id="15000" dataTypeName="EFF_SEQ_INFO">
<Annotation>
<Comment>Send effective sequence info to the log.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers/>
</Message>
<Message name="EFF_SEQ_UPLOAD_REPORT" id="15020" dataTypeName="RPT_MSG">
<Annotation>
<Comment>Effective sequence upload</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="EFF_SEQ_UPLOAD_REQUEST" id="15010" dataTypeName="EFF_SEQ_UPLOAD_PARAMS">
<Annotation>
<Comment>Send effective sequence upload request params from q_up to Stk</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="EOD_FILING_RPT" id="10290" dataTypeName="EOD_ADM_MSG">
<Annotation>
<Comment>process end of day filing</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="EOD_FILING_START" id="10280" dataTypeName="">
<Annotation>
<Comment>process end of day filing</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="EQA_OFF_APPROVAL" id="10724" dataTypeName="">
<Annotation>
<Comment>approval for turning off ENHANCED QUOTE ASSIST</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="EQA_OFF" id="10723" dataTypeName="">
<Annotation>
<Comment>turn off ENHANCED QUOTE ASSIST</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="EQA_ON" id="10725" dataTypeName="">
<Annotation>
<Comment>turn on ENHANCED QUOTE ASSIST</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="FILE_DATE_TIME" id="15040" dataTypeName="FILE_DATE_TIME_INFO">
<Annotation>
<Comment>Send latest filing date and time (jdate and millitime)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="FIND_RQST" id="320" dataTypeName="FIND_ORDERS">
<Annotation>
<Comment>To request a page of orders for the page of book screen</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="FL_CANCEL_IN2" id="22102" dataTypeName="AR_IN_CANCEL">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="FL_CANCEL_IN" id="22100" dataTypeName="AR_IN_ORDER">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="FL_MOC_IN" id="22115" dataTypeName="AR_IN_OARS">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="FL_NX_ORDER_IN" id="22094" dataTypeName="AR_IN_ORDER">
<Annotation>
<Comment>NYSe Direct: Receipt of Orders For Auto-Execution</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="FL_OARS_IN" id="22110" dataTypeName="AR_IN_OARS">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="FL_OLA_IN" id="22111" dataTypeName="IN_OLA">
<Annotation>
<Comment>Odd Lot Alarms from filter to Stk</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="FL_ORDER_IN" id="22091" dataTypeName="AR_IN_ORDER">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="FL_PRI_ORDER" id="22450" dataTypeName="AR_IN_ORDER">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="FL_REP_STAT" id="22192" dataTypeName="AR_IN_ORDER">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="FL_REQ_STAT" id="22191" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="FLR_PRINT_MSG" id="590" dataTypeName="">
<Annotation>
<Comment>To send a message to floor printer queue for printing</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="FLT_DEBUG_MSG" id="859" dataTypeName="">
<Annotation>
<Comment>Change DEBUG level of the FILTER</Comment>
</Annotation>
<Senders>
<ProcessRef name="Omake"/>
</Senders>
<Receivers>
<ProcessRef name="Filter"/>
</Receivers>
</Message>
<Message name="FLT_ITS_AWO_RSP" id="6090" dataTypeName="ITS_AWO_RSP">
<Annotation>
<Comment>TA# attached to its-AWO by PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="FM_DL_ONE" id="5030" dataTypeName="">
<Annotation>
<Comment>one liner for Dot/lmt card recorded by fmt</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="FM_ITS_CC_ONE" id="5070" dataTypeName="">
<Annotation>
<Comment>one liner for Its Commitment card recorded by fmt</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="FM_ITS_POA_ONE" id="5075" dataTypeName="">
<Annotation>
<Comment>one liner for Its Pre-Opening/Admin card recorded by fmt</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="FM_ITS_RSP_ONE" id="5065" dataTypeName="">
<Annotation>
<Comment>one liner for Its Response card recorded by fmt</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="FM_MD_ONE" id="5050" dataTypeName="">
<Annotation>
<Comment>one liner for mds card recorded by fmt</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="FM_OARS_ONE" id="5060" dataTypeName="">
<Annotation>
<Comment>one liner for Oars card recorded by fmt</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="FM_RE_ONE" id="5040" dataTypeName="">
<Annotation>
<Comment>one liner for resent card recorded by fmt</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="FMT_ACK_OE_AWO" id="857" dataTypeName="">
<Annotation>
<Comment>tell fmt to ack order_entry/awo to disp (for training system)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Omake"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="FREE_LOCK" id="10424" dataTypeName="LOCK_MSG">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="FREEZE_UNFREEZE_TIMESTAMP" id="10745" dataTypeName="FRZ_UNFRZ_TIMESTAMP_DATA">
<Annotation>
<Comment>Log message to support NYSE Survalence in verifying compliance with SEC Rule 11Ac1-4 (30 Sec Rule). Logs freeze and unfreeze.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="FREEZE1" id="290" dataTypeName="">
<Annotation>
<Comment>To halt incoming traffic from entering Database</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="FROM_HOST" id="18502" dataTypeName="WS_INPUT">
<Annotation>
<Comment>Input Traffic from Siac host systems</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Filter"/>
</Receivers>
</Message>
<Message name="GOT_LOCK" id="10422" dataTypeName="LOCK_MSG">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="GOV_CMD_TYPE" id="23101" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="GOV_INFO_TYPE" id="23001" dataTypeName="GOV_REG_MSG">
<Annotation>
<Comment>Used to both register with the governor and receive death notifications when a process dies.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Governor"/>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="Any"/>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="GOV_MARKER" id="23201" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="GOV_POLL_DELTA_MSG" id="2002" dataTypeName="">
<Annotation>
<Comment>STAR CMD to set Open Book delta update frequency in governor.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="GOV_POLL_FULL_MSG" id="2003" dataTypeName="">
<Annotation>
<Comment>STAR CMD to set Open Book full update frequency in governor.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="GOV_POLL_START_MSG" id="2005" dataTypeName="">
<Annotation>
<Comment>STAR CMD to restart Open Book after GOV_POLL_STOP_MSG.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="GOV_POLL_START_TIME_MSG" id="2000" dataTypeName="">
<Annotation>
<Comment>STAR CMD to set Open Book start time in governor.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="GOV_POLL_STOP_MSG" id="2006" dataTypeName="">
<Annotation>
<Comment>STAR CMD to stop Open Book.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="GOV_POLL_STOP_TIME_MSG" id="2001" dataTypeName="">
<Annotation>
<Comment>STAR CMD to set Open Book stop time in governor.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="GOV_POLL_UPDATE_MSG" id="2004" dataTypeName="">
<Annotation>
<Comment>STAR CMD to force an Open Book full update (1 stock or all stocks)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
<ProcessRef name="Pix"/>
</Senders>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="GOV_PREFERENCE" id="23301" dataTypeName="">
<Annotation>
<Comment>Message between Display and Governor for preferences. It is a dummy message for the LOG. Actual message is in gov_types.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Governor"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="GOV_PROBE" id="23463" dataTypeName="">
<Annotation>
<Comment>Poll MMP to make sure it is not spinning or otherwise alive but not responding.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Governor"/>
</Senders>
<Receivers>
<ProcessRef name="MMP"/>
</Receivers>
</Message>
<Message name="GROUP_ADD" id="845" dataTypeName="">
<Annotation>
<Comment>Add 1 or more stocks command to Intel from PSS Acked only if all stocks are added, else Nacked.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="DLL"/>
<ProcessRef name="Filter"/>
<ProcessRef name="Stk"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="GROUP_ND" id="1000" dataTypeName="NDONE_TXN">
<Annotation>
<Comment>request to issue a group nothing done</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="HIA_STKID_ADD" id="21320" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="HIA_STKID_DRP" id="21321" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="HOST_ADD_STOCK" id="839" dataTypeName="">
<Annotation>
<Comment>Add stock command to Intel from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="HOST_DROP_STOCK" id="849" dataTypeName="">
<Annotation>
<Comment>Drop stock command to Intel from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="DLL"/>
<ProcessRef name="Filter"/>
<ProcessRef name="Stk"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="HOST_WKS_CONFIG" id="17224" dataTypeName="">
<Annotation>
<Comment>Workstation configuration information</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="HOTKEY_QUEUE" id="10712" dataTypeName="PLAIN_TEXT">
<Annotation>
<Comment>Display puts the hot key queue stock list into the LOG</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="IM_ALIVE_DLL" id="911" dataTypeName="">
<Annotation>
<Comment>Watchdog message from Q_UP to FMT with config/DLL data</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="IM_ALIVE" id="910" dataTypeName="">
<Annotation>
<Comment>Watchdog message to/from PSS and Intel</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
<ProcessRef name="Q_UP"/>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppReceive"/>
<ProcessRef name="Q_UP"/>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="INTERNAL_CARD" id="550" dataTypeName="">
<Annotation>
<Comment>To save a transaction message on the formatter save que</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="ITS_ACTIVE" id="10701" dataTypeName="">
<Annotation>
<Comment>Tell the Display we have at least one active ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_ADMIN_C" id="6042" dataTypeName="IN_ADMIN">
<Annotation>
<Comment>got a copy of an admin msg we generate</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_ADMIN" id="6037" dataTypeName="IN_ADMIN">
<Annotation>
<Comment>got an admin msg (manual or can)</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_BLOCK_MKT" id="6050" dataTypeName="ITS_BLOCK_MKT_MSG">
<Annotation>
<Comment>Results from ITS BLOCK STAR command</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="ItsFilter"/>
</Receivers>
</Message>
<Message name="ITS_CANCEL" id="6035" dataTypeName="IN_COMMITMENT">
<Annotation>
<Comment>a cancel (timeout) came in</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_CHANGE_EXP_TYPE" id="22023" dataTypeName="ITS_CHANGE_EXP_TYPE_DATA">
<Annotation>
<Comment>Message sent to the Stk to indicate that the expiration type for its outgoing commitment was changed via the star command</Comment>
</Annotation>
<Senders>
<ProcessRef name="q_up"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_CHECK_OC_AWO" id="8084" dataTypeName="IN_COMMITMENT">
<Annotation>
<Comment>its book msg to find waiting AWO for outging commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_COMMIT_C" id="6045" dataTypeName="IN_COMMITMENT">
<Annotation>
<Comment>copy of a commitment generated by us</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_CROSS_CHK" id="8090" dataTypeName="">
<Annotation>
<Comment>check ITS commitments qty (DOT or/and LMT) against the book</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_DEFAULT_TEMPLATE" id="7000" dataTypeName="COMMITMENT_RESPONSE">
<Annotation>
<Comment>its book response to a soft-key rqst on a commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_DELETE_AWO" id="8082" dataTypeName="">
<Annotation>
<Comment>its book msg to delete waiting AWO</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_DETAIL_SCR_UPDATE" id="6010" dataTypeName="">
<Annotation>
<Comment>Update for its Order detail screen</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_EXE_NL_REJ" id="7630" dataTypeName="ITS_EXE_REJ_DATA">
<Annotation>
<Comment>Rejection of attempt to execute an ITS commitment FAST NL</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_EXE_NL_REQ" id="7620" dataTypeName="ITS_EXE_REQ_DATA">
<Annotation>
<Comment>Request to execute an ITS commitment FAST NL</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_EXE_NL_RSP" id="7640" dataTypeName="">
<Annotation>
<Comment>Response to attempt to execute an ITS commitment FAST NL</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_EXE_REJ" id="7570" dataTypeName="ITS_EXE_REJ_DATA">
<Annotation>
<Comment>Rejection of attempt to execute an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_EXE_REQ" id="7560" dataTypeName="ITS_EXE_REQ_DATA">
<Annotation>
<Comment>Request to execute an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_EXE_RSP" id="7580" dataTypeName="">
<Annotation>
<Comment>Response to an execution of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_EXE_SYNC_REQ" id="7500" dataTypeName="ITS_SYNC_REQ_DATA">
<Annotation>
<Comment>Requests updated Smart List qty for use in Its Execution template</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_EXE_SYNC_RSP" id="7510" dataTypeName="ITS_SYNC_RSP_DATA">
<Annotation>
<Comment>Response to a request for updated Smart List qty for ITS Execution template</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_IN_COMMIT" id="6020" dataTypeName="IN_COMMITMENT">
<Annotation>
<Comment>Incoming valid commitment from ITS</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_INACTIVE" id="10702" dataTypeName="">
<Annotation>
<Comment>Tell the Display we have no active ITS commitments</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_NAME_CHG" id="6047" dataTypeName="IN_COMMITMENT">
<Annotation>
<Comment>copy of a commitment generated by us</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_NC_REQ" id="7700" dataTypeName="ITS_NC_REQ_DATA">
<Annotation>
<Comment>Request to name change an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_NC_RSP" id="7710" dataTypeName="">
<Annotation>
<Comment>Response to a name change of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_NC_SYNC_REQ" id="7650" dataTypeName="ITS_SYNC_REQ_DATA">
<Annotation>
<Comment>Requests updated Smart List qty for use in Its NameChange template</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_NC_SYNC_RSP" id="7660" dataTypeName="ITS_SYNC_RSP_DATA">
<Annotation>
<Comment>Response to a request for updated Smart List qty for ITS NameChange template</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_OC_TIMER_REJECT" id="6048" dataTypeName="">
<Annotation>
<Comment>for timer to send display copy of outgoing commitment after n seconds, enabling us to check if the commitment has expired!</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_ORDER" id="1215" dataTypeName="">
<Annotation>
<Comment>Input Traffic from Siac ITS system</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="ItsFilter"/>
</Receivers>
</Message>
<Message name="ITS_OUT_ADMIN" id="6190" dataTypeName="ITS_ADMIN_DATA">
<Annotation>
<Comment>Send an administrative message to its (Nothing done or canned)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="ITS_OUT_CANCEL" id="6180" dataTypeName="ITS_CANCEL_DATA">
<Annotation>
<Comment>Send a cancellation of a commitment to ITS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="ITS_OUT_COMMIT_FOR_AWO" id="6049" dataTypeName="IN_COMMITMENT">
<Annotation>
<Comment>disp sends in commit copy of out commit to store in outgoing commit list for eventual AWO processing (only for oc's with PRIN).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_OUT_COMMITMENT" id="6110" dataTypeName="ITS_COMMITMENT_DATA">
<Annotation>
<Comment>Send an outgoing ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_OUT_EXECUTION" id="6120" dataTypeName="ITS_EXECUTION_DATA">
<Annotation>
<Comment>Send an execution response to ITS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="ITS_OUT_NAME_CHANGE" id="6100" dataTypeName="ITS_NAME_CHANGE_DATA">
<Annotation>
<Comment>Send a name change for an ITS commitment or response</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="ITS_OUT_OPENING_RPT" id="6160" dataTypeName="ITS_OPENING_RPT_DATA">
<Annotation>
<Comment>Send an opening report to ItS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_OUT_PO_2ND_LOOK" id="6150" dataTypeName="ITS_ADMIN_DATA">
<Annotation>
<Comment>Send a pre-opening 2nd look to ITS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_OUT_PO_CXL" id="6170" dataTypeName="ITS_ADMIN_DATA">
<Annotation>
<Comment>Send an pre-opening cancellation to ITS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_OUT_PO_INDICATION" id="6130" dataTypeName="ITS_ADMIN_DATA">
<Annotation>
<Comment>Send a pre-opening indication to ITS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_OUT_PO_RESPONSE" id="6140" dataTypeName="ITS_ADMIN_DATA">
<Annotation>
<Comment>Send a pre-opening response to ITS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_P_OPEN" id="6039" dataTypeName="IN_P_OPEN">
<Annotation>
<Comment>got a preopening msg</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_P_OSSR" id="10804" dataTypeName="IN_COMMITMENT">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="ITS_PAGE_SCR_UPDATE" id="6000" dataTypeName="">
<Annotation>
<Comment>its Page of book screen</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_POA_2LK" id="10802" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="ITS_POA_ND" id="10801" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="ITS_POA_OPENR" id="10800" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="ITS_POA_OSSR" id="10803" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="ITS_REJECT_TEXT" id="6032" dataTypeName="">
<Annotation>
<Comment>its rejected our msg!</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_REJECT" id="6030" dataTypeName="IN_COMMITMENT">
<Annotation>
<Comment>its rejected our msg!</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_RESPONSE_C" id="6025" dataTypeName="IN_COMMITMENT">
<Annotation>
<Comment>copy of a response generated by us</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_RESPONSE" id="6040" dataTypeName="IN_COMMITMENT">
<Annotation>
<Comment>a response to a commitment generated by us (the destination)</Comment>
</Annotation>
<Senders>
<ProcessRef name="ItsFilter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_RSP_ACCEPT" id="7020" dataTypeName="">
<Annotation>
<Comment>its book ack on user action on commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_RSP_CXL" id="8010" dataTypeName="ITS_CXL_RSP">
<Annotation>
<Comment>its book rejection of user action on commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_RSP_NA1" id="8020" dataTypeName="ITS_NA_RSP">
<Annotation>
<Comment>its book rejection of user action on commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_RSP_REJECT" id="7030" dataTypeName="">
<Annotation>
<Comment>its book rejection of user action on commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_SEND_AWO" id="8080" dataTypeName="">
<Annotation>
<Comment>its book ack to send waiting AWO</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_SENT_AWO" id="8078" dataTypeName="">
<Annotation>
<Comment>its book informs disp that it sent an AWO to FMT</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_SPECIAL_FIRM" id="8045" dataTypeName="ITS_SP_FIRMS">
<Annotation>
<Comment>to send specialist firm mnemonic to disp</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_UNBLOCK_MKT" id="6051" dataTypeName="">
<Annotation>
<Comment>Results from ITS BLOCK STAR command</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="ItsFilter"/>
</Receivers>
</Message>
<Message name="ITS_VALIDATE_EXE_NL_REJ" id="7600" dataTypeName="ITS_VALIDATE_EXE_NL_REJ_DATA">
<Annotation>
<Comment>Rejection of attempt to validate a FAST NL execution of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_VALIDATE_EXE_NL_REQ" id="7590" dataTypeName="ITS_VALIDATE_EXE_REQ_DATA">
<Annotation>
<Comment>Request to validate an FAST NL execution of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_VALIDATE_EXE_NL_RSP" id="7610" dataTypeName="PROMPT_DATA">
<Annotation>
<Comment>Response to attempt to validate a FAST NL execution of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_VALIDATE_EXE_REJ" id="7530" dataTypeName="ITS_VALIDATE_EXE_REJ_DATA">
<Annotation>
<Comment>Rejection of attempt to validate an execution of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_VALIDATE_EXE_REQ" id="7520" dataTypeName="ITS_VALIDATE_EXE_REQ_DATA">
<Annotation>
<Comment>Request to validate an execution of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_VALIDATE_EXE_RSP" id="7540" dataTypeName="ITS_VALIDATE_EXE_RSP_DATA">
<Annotation>
<Comment>Response to attempt to validate an execution of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_VALIDATE_NC_REJ" id="7680" dataTypeName="ITS_VALIDATE_NC_REJ_DATA">
<Annotation>
<Comment>Rejection of attempt to validate name change of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="ITS_VALIDATE_NC_REQ" id="7670" dataTypeName="ITS_VALIDATE_NC_REQ_DATA">
<Annotation>
<Comment>Request to validate a name change of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ITS_VALIDATE_NC_RSP" id="7690" dataTypeName="ITS_VALIDATE_NC_RSP_DATA">
<Annotation>
<Comment>Response to attempt to validate name change of an ITS commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="LASTSALE_CMD2" id="854" dataTypeName="">
<Annotation>
<Comment>set last sale &amp; tick for a stock. from PSS.</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="LASTSALE_CMD" id="853" dataTypeName="">
<Annotation>
<Comment>set last sale &amp; tick for a stock. from PSS.</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="LATE_TO_CLOSE_TIMER_IN" id="26541" dataTypeName="LATE_TO_CLOSE_TIMER_DATA">
<Annotation>
<Comment>Stk requests the DBTime process to send Stk this message when late-to-close time arrives.</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="LMT_ADMIN_I_NDONE" id="515" dataTypeName="LMT_MSG">
<Annotation>
<Comment>To send a LMT admin (ind nd) report to the Formatter</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="LMT_ADMIN" id="510" dataTypeName="LMT_MSG">
<Annotation>
<Comment>To send a LMT admin report to the Formatter</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="LMT_REPORT" id="490" dataTypeName="LMT_REPORT_DATA">
<Annotation>
<Comment>To send a LMT report to the Formatter</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="LOG_ACK" id="19265" dataTypeName="">
<Annotation>
<Comment>Logical ACK of message to/from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
<ProcessRef name="Format"/>
</Receivers>
</Message>
<Message name="LOG_BCSUMM" id="676" dataTypeName="">
<Annotation>
<Comment>report from rcv to INTEL/PSS to report a bad_check summ</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="LOG_CLCFG_2" id="681" dataTypeName="">
<Annotation>
<Comment>Logical CLEAR of comm link with Request for Configuration (type 2)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="LOG_CLCFG" id="680" dataTypeName="">
<Annotation>
<Comment>Logical CLEAR of comm link with Request for Configuration (type 1)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="LOG_CLEAR_NC" id="682" dataTypeName="">
<Annotation>
<Comment>Q_Up's way of indicating a LOG_CLEAR condition to the Formatter when the given workstation of Q_UP has not yet been configured.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="LOG_CLEAR" id="17228" dataTypeName="">
<Annotation>
<Comment>Logical CLEAR of comm link between INTEL/PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
<ProcessRef name="Q_UP"/>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
<ProcessRef name="Formatter"/>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="LOG_DATE" id="5092" dataTypeName="PLAIN_TEXT">
<Annotation>
<Comment>ascii date and unix vs rmx time format flag</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="LOG_NACK" id="19278" dataTypeName="">
<Annotation>
<Comment>Logical NACK of message to/from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
<ProcessRef name="Format"/>
</Receivers>
</Message>
<Message name="LOG_PRINT_MSG" id="580" dataTypeName="">
<Annotation>
<Comment>To send a message to log printer queue for printing</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
<ProcessRef name="Filter"/>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="LS_REQ" id="15600" dataTypeName="LAST_SALE_ADJUST">
<Annotation>
<Comment>Request from Display to update last sale, possibly also to file/elect</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="LS_RSP" id="15605" dataTypeName="PROMPT_DATA">
<Annotation>
<Comment>Response to LS_REQ containing prompting info</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MARK_END" id="560" dataTypeName="">
<Annotation>
<Comment>To mark the end of existing msgs in save que during resend</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="MDS_REPORT" id="530" dataTypeName="MDS_RPT">
<Annotation>
<Comment>To send an MDS report to the Formatter</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="MKT_CLOSED_REMINDER" id="23500" dataTypeName="">
<Annotation>
<Comment>Message to Q_UP to send stks OUR_MKT_CLOSED message</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="MKT_CLOSED" id="35" dataTypeName="">
<Annotation>
<Comment>To inform DB (currently only Display task) that Market is closed</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MMI_ADD_SUBSCRIPTION" id="23456" dataTypeName="SUBSCRIPTION">
<Annotation>
<Comment>Subscription request of away market quotes and new alerts</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="MMP"/>
</Receivers>
</Message>
<Message name="MMI_AWAY_QUOTE_REQ" id="23478" dataTypeName="">
<Annotation>
<Comment>Request from Display for Away Market Quotes</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MMI_AWAY_QUOTE_UPDATE" id="23479" dataTypeName="AWAY_QUOTE_UPDATE">
<Annotation>
<Comment>Response message containing Away Market Quotes</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MMI_AWAY_QUOTE" id="23468" dataTypeName="QUOTE_MSG">
<Annotation>
<Comment>Away market quote sent by MMP</Comment>
</Annotation>
<Senders>
<ProcessRef name="MMP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MMI_BEST_AWAY_QUOTE" id="23467" dataTypeName="BEST_QUOTE_MSG">
<Annotation>
<Comment>Best away market quote sent by MMP</Comment>
</Annotation>
<Senders>
<ProcessRef name="MMP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MMI_DISABLE" id="23461" dataTypeName="">
<Annotation>
<Comment>Tell MMP to remove all MDD subscritions from Stk's on a VIntel</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="MMP"/>
</Receivers>
</Message>
<Message name="MMI_DROP_SUBSCRIPTION" id="23457" dataTypeName="SUBSCRIPTION">
<Annotation>
<Comment>Unsubscribe away market quotes and new alerts</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="MMP"/>
</Receivers>
</Message>
<Message name="MMI_ENABLE" id="23460" dataTypeName="">
<Annotation>
<Comment>Tell MMP to restore all MDD subscritions from Stk's on a VIntel</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="MMP"/>
</Receivers>
</Message>
<Message name="MMI_LAST_SALE" id="23466" dataTypeName="LAST_SALE_MSG">
<Annotation>
<Comment>Last sale from MDD</Comment>
</Annotation>
<Senders>
<ProcessRef name="MMP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MMI_NEWS_TIMER_IN" id="23480" dataTypeName="MMI_NEWS_TIMER">
<Annotation>
<Comment>Notify stk that one news alert has expired</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MMI_NEWS_UPDATE" id="23469" dataTypeName="NEWS_UPDATE_MSG">
<Annotation>
<Comment>News alert sent by MMP</Comment>
</Annotation>
<Senders>
<ProcessRef name="MMP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MMI_NO_SERVICE" id="23471" dataTypeName="MDD_STATUS">
<Annotation>
<Comment>Notify state status of MDD or LA</Comment>
</Annotation>
<Senders>
<ProcessRef name="MMP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MMI_QUOTE_CONDITION" id="23455" dataTypeName="MMI_QUOTE_CONDITION_DATA">
<Annotation>
<Comment>To inform the stk when the quote condition toggles between firm and non-firm</Comment>
</Annotation>
<Senders>
<ProcessRef name="MMP"/>
</Senders>
<Receivers>
<ProcessRef name="stk"/>
</Receivers>
</Message>
<Message name="MMI_REGISTER_MMP" id="23464" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MMI_RESUBSCRIBE" id="23490" dataTypeName="">
<Annotation>
<Comment>Tell Stk to restore MDD subscription</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MMI_STALE_MSG_CLEARED" id="23481" dataTypeName="">
<Annotation>
<Comment>Notify stk that no more stale messages in MMP queue</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MMI_STATUS" id="23470" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MMI_UNREGISTER_MMP" id="23465" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MMI_UNSUBSCRIBE" id="23491" dataTypeName="">
<Annotation>
<Comment>Tell Stk to remove MDD subscription</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MMP_LA_EVENT" id="23493" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MMP_LA_STATISTICS" id="23492" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MMP_NEWS" id="23476" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MMP_QUOTE_REFRESH" id="23475" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MMP_QUOTE" id="23474" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MMP_TRADE_REFRESH" id="23473" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MMP_TRADE" id="23472" dataTypeName="">
<Annotation>
<Comment>These MMP_ messages are LA transactions received by MMP and sent to itself for logging purposes, before being acted upon.</Comment>
</Annotation>
<Senders>
<ProcessRef name="MMP"/>
</Senders>
<Receivers>
<ProcessRef name="MMP"/>
</Receivers>
</Message>
<Message name="MOC_BLOCK_OFF" id="252" dataTypeName="">
<Annotation>
<Comment>To terminate the updating of the opening window</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MOC_BLOCK_ON" id="242" dataTypeName="REQ_AOB_LMTS">
<Annotation>
<Comment>To initiate the updating of the opening window</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MOC_BLOCK_PRICE_UPDATE" id="272" dataTypeName="REQ_AOB_LMTS">
<Annotation>
<Comment>To update the price of the opening window</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MOC_BLOCK_SYNC" id="262" dataTypeName="BLK_FREEZE">
<Annotation>
<Comment>To Freeze the Database prior to performing an opening</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MOC_CLOSE_STOCK" id="337" dataTypeName="">
<Annotation>
<Comment>To inform stks to check late-to-close stocks</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MOC_IN" id="115" dataTypeName="IN_OARS">
<Annotation>
<Comment>Incoming status message from MOC</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MOC_REPORT" id="525" dataTypeName="">
<Annotation>
<Comment>To send an MOC report to the Formatter</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="MOI_EXIT_REQ" id="334" dataTypeName="MKT_ORDER_IMBAL_EXIT_MSG">
<Annotation>
<Comment>To Inform the Stk of the Removal of the MOC/MOO Imbalance Template</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MOI_PUBLISH_REQ" id="333" dataTypeName="MKT_ORDER_IMBAL_MSG">
<Annotation>
<Comment>To Publish a MOC/MOO Imbalance</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MOI_TMPLT_REQ" id="331" dataTypeName="">
<Annotation>
<Comment>To request a MOC/MOO Template</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MOI_TMPLT_RSP" id="332" dataTypeName="">
<Annotation>
<Comment>To Respond to a MOD/MOO Template Request</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MSG_AOB_STPS" id="1070" dataTypeName="AOB_STPS">
<Annotation>
<Comment>reportable stop/stl total for given at/lmt price</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MSG_BKDUMP_RQST" id="12161" dataTypeName="BKDUMP_REQ">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MSG_BOOK_QUOTE" id="1214" dataTypeName="">
<Annotation>
<Comment>best buy and sell prices and amounts</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MSG_COM_BILLING" id="1110" dataTypeName="">
<Annotation>
<Comment>Commission Billing parameters entered by clerk</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MSG_COM_INFO" id="1210" dataTypeName="">
<Annotation>
<Comment>Commission flag set by scr.dat</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MSG_CR_CANCEL" id="1105" dataTypeName="GRP_CXL">
<Annotation>
<Comment>Full or partial cxl part of cxl-repl</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MSG_DROP_DONE" id="851" dataTypeName="">
<Annotation>
<Comment>Used a queue drain terminator</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MSG_FROM_BOOK" id="5010" dataTypeName="">
<Annotation>
<Comment>data_log of message sent to display from book</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="MSG_GRP_CXL" id="1100" dataTypeName="GRP_CXL">
<Annotation>
<Comment>Group cancel done from page of book</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MSG_ITS_CC" id="6070" dataTypeName="">
<Annotation>
<Comment>data for outgoing its commitment card</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="MSG_ITS_FMT_RSP" id="6060" dataTypeName="">
<Annotation>
<Comment>its response to a commitment</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="MSG_ITS_POA" id="6080" dataTypeName="">
<Annotation>
<Comment>data for outgoing its pre-opening admin card</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="MSG_KEYIN" id="17739" dataTypeName="">
<Annotation>
<Comment>To transport a keystroke to the display process</Comment>
</Annotation>
<Senders>
<ProcessRef name="Keyin"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MSG_MOUSEIN" id="40000" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MSG_RECEIVED" id="5012" dataTypeName="">
<Annotation>
<Comment>data_log of message received by disp</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="MSG_REFRESH_SCREEN" id="1150" dataTypeName="">
<Annotation>
<Comment>Refresh Screen command from host</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q-UP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MSG_REQ_AOB_STPS" id="1060" dataTypeName="REQ_AOB_STPS">
<Annotation>
<Comment>rqst reportable stop/stl total for given at/lmt price</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MSG_RPTSTS_INFO2" id="95" dataTypeName="RPTSTS_INFO">
<Annotation>
<Comment>report status template data</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MSG_RPTSTS_INFO" id="94" dataTypeName="RPTSTS_INFO">
<Annotation>
<Comment>report status template data</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MSG_RPTSTS_PRINT" id="96" dataTypeName="TEXT_MSG">
<Annotation>
<Comment>print report status msg on the floor</Comment>
</Annotation>
<Senders>
<ProcessRef name="MessageWindowDB"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MSG_RPTSTS_SETUP" id="93" dataTypeName="RPTSTS_SETUP">
<Annotation>
<Comment>report status setup template data</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MSG_RQST_BOOK_QUOTE" id="1212" dataTypeName="">
<Annotation>
<Comment>rqst best buy and sell prices and amounts</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MSG_SWEEP_INFO" id="10230" dataTypeName="">
<Annotation>
<Comment>msg containing: color/deeco; bi-direct etc</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MSG_TIME_TYP" id="1120" dataTypeName="">
<Annotation>
<Comment>Display time, hh:mm:ss</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="DBTime"/>
</Receivers>
</Message>
<Message name="MSG_TOUCHIN" id="630" dataTypeName="">
<Annotation>
<Comment>to transport touch coordinates to the display task</Comment>
</Annotation>
<Senders>
<ProcessRef name="Touchin"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MSG_UPDFLU" id="1160" dataTypeName="">
<Annotation>
<Comment>msg to recenter the the book f.l.u</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="MT_DROP_STOCKS" id="22020" dataTypeName="">
<Annotation>
<Comment>To Drop all stocks from the workstation through MtSet command</Comment>
</Annotation>
<Senders>
<ProcessRef name="q_up"/>
</Senders>
<Receivers>
<ProcessRef name="q_up"/>
</Receivers>
</Message>
<Message name="MW_CLASS_ACK" id="9104" dataTypeName="CLASS_ACK">
<Annotation>
<Comment>Class info &amp; class # sent to Display for menu lookup.</Comment>
</Annotation>
<Senders>
<ProcessRef name="MessageWindowEP"/>
</Senders>
<Receivers>
<ProcessRef name="Any"/>
</Receivers>
</Message>
<Message name="MW_CLASS_REGISTRATION" id="9100" dataTypeName="CLASS_REGISTRATION">
<Annotation>
<Comment>Applications registering a Msg class with Message Window's : Event Processor.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
</Receivers>
</Message>
<Message name="MW_CLASS1" id="9102" dataTypeName="">
<Annotation>
<Comment>Class info &amp; class # sent to Display for menu lookup.</Comment>
</Annotation>
<Senders>
<ProcessRef name="MessageWindowEP"/>
</Senders>
<Receivers/>
</Message>
<Message name="MW_DATA_MSG_DEL" id="8116" dataTypeName="">
<Annotation>
<Comment>Database informing Display that a specific msg has been : deleted.</Comment>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
</Receivers>
</Message>
<Message name="MW_DATA_MSG_DSP" id="8131" dataTypeName="">
<Annotation>
<Comment>Database informing Display that a specific msg must be : displayed.</Comment>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MW_DATA_MSG_NONE" id="8114" dataTypeName="">
<Annotation>
<Comment>Database informs Display that msg requested doesn't exist. : (Used if next or previous requested and there is none.)</Comment>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
</Receivers>
</Message>
<Message name="MW_DATA_MSG_SS" id="8113" dataTypeName="TEXT_MSG_SS">
<Annotation>
<Comment>Same as MW_DATA_MSG exept that it contains information : as to which substation(s) shoul get the message</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
</Receivers>
</Message>
<Message name="MW_DATA_MSG" id="8110" dataTypeName="TEXT_MSG">
<Annotation>
<Comment>Data about a specific msg to/from database. : From outside world to Database, : From Database to Event Mgr - For attrib replacement. : From Event Mgr to Database (replacement of Msg attribs.)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
</Receivers>
</Message>
<Message name="MW_DATA_REQ" id="8100" dataTypeName="MSG_REQ">
<Annotation>
<Comment>Display task requests first, next, previous msg's data.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
<ProcessRef name="MessageWindowEP"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
<ProcessRef name="MessageWindowDB"/>
</Receivers>
</Message>
<Message name="MW_DISP_ACK" id="9020" dataTypeName="">
<Annotation>
<Comment>How Display acks commands/keystrokes from Display Book's : Display task.</Comment>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MW_DISP_ACTION" id="8120" dataTypeName="">
<Annotation>
<Comment>Action requested by user for specific msg</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
</Receivers>
</Message>
<Message name="MW_DISP_ACTIVATED" id="9010" dataTypeName="">
<Annotation>
<Comment>Informs Display that control of the keystrokes is being : passed to it (that is, to Msg Window).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers/>
</Message>
<Message name="MW_DISP_DEACTIVATED" id="9012" dataTypeName="">
<Annotation>
<Comment>Msg Window Display informs DB Display task that it is: : (a) Ack'ing the last keystroke, and... : (b) Returning keystroke control to the DB Display. : passed to it (that is, to Msg Window).</Comment>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MW_DISP_DISABLED" id="9002" dataTypeName="">
<Annotation>
<Comment>Informs Display that it may no longer write to the screen(s).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers/>
</Message>
<Message name="MW_DISP_DONE" id="8121" dataTypeName="">
<Annotation>
<Comment>Request for Display to deactivate Msg Window.</Comment>
</Annotation>
<Senders>
<ProcessRef name="MessageWindowEP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MW_DISP_ENABLED" id="9000" dataTypeName="">
<Annotation>
<Comment>Informs Display that it may write to the screen(s).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers/>
</Message>
<Message name="MW_DISP_NACK" id="9050" dataTypeName="">
<Annotation>
<Comment>Indication that something went wrong. : Invitation to recover or abort.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MW_DISP_NO_ACTION" id="8123" dataTypeName="">
<Annotation>
<Comment>Request for Display to do nothing.</Comment>
</Annotation>
<Senders>
<ProcessRef name="MessageWindowEP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MW_DISP_REFRESH_ACK" id="9042" dataTypeName="">
<Annotation>
<Comment>Ack of unsolicited MW_DISP_REFRESH request from DB Disp.</Comment>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MW_DISP_REFRESH" id="9040" dataTypeName="">
<Annotation>
<Comment>When sent - : Display requests that DB's Display refresh the screen. : When received - : Response from DB's Display, that refresh is done. : Display than refreshes the Msg Window template.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MW_DISP_STATUS" id="8130" dataTypeName="">
<Annotation>
<Comment>Text Event Processor wants displayed by Display. May be : displayed on template boarder on in error msg field.</Comment>
</Annotation>
<Senders>
<ProcessRef name="MessageWindowEP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="MW_DISP_WKSPACE_ACK" id="9062" dataTypeName="">
<Annotation>
<Comment>Indication that Workspace area has been given to Message : Window Display for its use.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display."/>
</Senders>
<Receivers/>
</Message>
<Message name="MW_DISP_WKSPACE_NACK" id="9064" dataTypeName="">
<Annotation>
<Comment>Indication that the request for the Workspace area has : not been granted.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display."/>
</Senders>
<Receivers/>
</Message>
<Message name="MW_DISP_WKSPACE_REQ" id="9060" dataTypeName="">
<Annotation>
<Comment>Request for use of the Workspace area of the DB screen.</Comment>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Display."/>
</Receivers>
</Message>
<Message name="MW_KEYIN" id="9030" dataTypeName="">
<Annotation>
<Comment>Keystrokes passed from DB Display to MW Display.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers/>
</Message>
<Message name="MW_MSG_DELETE" id="8112" dataTypeName="MSG_DELETE_REQ">
<Annotation>
<Comment>Request to cancel a specific Msg.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers/>
</Message>
<Message name="MW_MSG_REPLACE" id="8111" dataTypeName="TEXT_MSG">
<Annotation>
<Comment>Request to replace a specific Msg.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowDB"/>
</Receivers>
</Message>
<Message name="MW_PREDEF_CLASS_REGISTRATION" id="9101" dataTypeName="PREDEF_CLASS_REG">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="MW_TIMEOUT_1" id="8132" dataTypeName="">
<Annotation>
<Comment>DBTime sends this when the 1st timer of a message window item expires.</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
</Receivers>
</Message>
<Message name="MW_TIMEOUT_2" id="8133" dataTypeName="">
<Annotation>
<Comment>DBTime sends this when the 2nd timer of a message window item expires.</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
</Receivers>
</Message>
<Message name="NACK1" id="305" dataTypeName="REJECT1">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="NDONE_ACK" id="1001" dataTypeName="">
<Annotation>
<Comment>ack to BOOK that Group Nothing Done msgs were ack'ed by PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="NEED_LOCK_AND_FREEZE" id="10450" dataTypeName="LOCK_MSG">
<Annotation>
<Comment>Lock and freeze the Stk</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="NEED_LOCK" id="10420" dataTypeName="LOCK_MSG">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="NX_NOT_EXECUTED_TIMESTAMP" id="10747" dataTypeName="">
<Annotation>
<Comment>Logs a reanson code describing why an NX order was not autoexecuted.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="NX_TO_BOOK" id="22095" dataTypeName="NX_TO_BOOK_DATA">
<Annotation>
<Comment>NYSe Direct: Moving AUTOEX orders from temporary holding area to StkDatabase LMT or MKT page.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="OARS_IN" id="110" dataTypeName="IN_OARS">
<Annotation>
<Comment>Incoming status message from OARS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="OARS_REPORT" id="520" dataTypeName="OARS_RPT">
<Annotation>
<Comment>To send an OARS report to the Formatter</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="OCI_CMD" id="600" dataTypeName="">
<Annotation>
<Comment>requests info from a DB2 task</Comment>
</Annotation>
<Senders>
<ProcessRef name="OCI"/>
</Senders>
<Receivers>
<ProcessRef name="Any"/>
</Receivers>
</Message>
<Message name="OCI_RESPONSE" id="610" dataTypeName="">
<Annotation>
<Comment>response to OCI's request for info</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="OCI"/>
</Receivers>
</Message>
<Message name="OFF_SCREEN" id="360" dataTypeName="">
<Annotation>
<Comment>To inform the Stk of the CLEAR key being entered</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_CONNECTED" id="22004" dataTypeName="">
<Annotation>
<Comment>Message sent from Pix to Gov upon successful connection to remote PuMP process</Comment>
</Annotation>
<Senders>
<ProcessRef name="Pix"/>
</Senders>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_DATA" id="22009" dataTypeName="">
<Annotation>
<Comment>Message sent from Pix to PuMP containing open book data in cononical form</Comment>
</Annotation>
<Senders>
<ProcessRef name="Pix"/>
</Senders>
<Receivers>
<ProcessRef name="PuMP"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_DELTA_REQ" id="22001" dataTypeName="">
<Annotation>
<Comment>Initiate a delta update of open book summary data A delta is defined as updates to only the summary data that has changed (including price points that now have zero qty).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Governor"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_DELTA_UPDATE" id="22003" dataTypeName="OPEN_BOOK_UPDATE_DATA">
<Annotation>
<Comment>Message containing open book data. Sent to a proxy due to receipt of OPEN_BOOK_DELAT_REQ from governor.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Pix"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_IM_ALIVE" id="22006" dataTypeName="">
<Annotation>
<Comment>Message sent from Pix to PuMP and echoed back from PuMP to Pix for the purpose of monitoring the state of PuMP's health</Comment>
</Annotation>
<Senders>
<ProcessRef name="Pix"/>
<ProcessRef name="PuMP"/>
</Senders>
<Receivers>
<ProcessRef name="PuMP"/>
<ProcessRef name="Pix"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_METADATA_REQ" id="22011" dataTypeName="">
<Annotation>
<Comment>Explicit request for meta data</Comment>
</Annotation>
<Senders>
<ProcessRef name="PuMP"/>
</Senders>
<Receivers>
<ProcessRef name="Pix"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_NOT_CONNECTED" id="22005" dataTypeName="">
<Annotation>
<Comment>Message sent from Pix to Gov upon failure of connection to remote PuMP process</Comment>
</Annotation>
<Senders>
<ProcessRef name="Pix"/>
</Senders>
<Receivers>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_PUMP_DELTA_UPD" id="22015" dataTypeName="">
<Annotation>
<Comment>Message sent from Pix to PuMP containing open book delta update data in cononical form</Comment>
</Annotation>
<Senders>
<ProcessRef name="Pix"/>
</Senders>
<Receivers>
<ProcessRef name="PuMP"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_PUMP_FULL_UPD" id="22014" dataTypeName="OPEN_BOOK_PUMP_MSG">
<Annotation>
<Comment>Message sent from Pix to PuMP containing open book full update data in cononical form</Comment>
</Annotation>
<Senders>
<ProcessRef name="Pix"/>
</Senders>
<Receivers>
<ProcessRef name="PuMP"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_REFRESH_REQ" id="22010" dataTypeName="OPEN_BOOK_REFRESH_REQ_DATA">
<Annotation>
<Comment>Message sent from PuMP to Pix and then relayed to Gov for forcing a full update for 1 or all stocks.</Comment>
</Annotation>
<Senders>
<ProcessRef name="PuMP"/>
<ProcessRef name="Pix"/>
</Senders>
<Receivers>
<ProcessRef name="Pix"/>
<ProcessRef name="Governor"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_REGISTER_ACK" id="22008" dataTypeName="">
<Annotation>
<Comment>Message sent from PuMP to Pix to acknowledge OPEN_BOOK_REGISTER msg</Comment>
</Annotation>
<Senders>
<ProcessRef name="Pix"/>
</Senders>
<Receivers>
<ProcessRef name="PuMP"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_REGISTER" id="22007" dataTypeName="">
<Annotation>
<Comment>Message sent from Pix to PuMP containing meta data and GQID</Comment>
</Annotation>
<Senders>
<ProcessRef name="Pix"/>
</Senders>
<Receivers>
<ProcessRef name="PuMP"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_RESTART_REQ" id="22012" dataTypeName="">
<Annotation>
<Comment>Sent from Pix to itself when a restart is initiated from Mt</Comment>
</Annotation>
<Senders>
<ProcessRef name="Pix"/>
</Senders>
<Receivers>
<ProcessRef name="Pix"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_UPDATE_REQ" id="22000" dataTypeName="">
<Annotation>
<Comment>Initiate a full update of open book summary data</Comment>
</Annotation>
<Senders>
<ProcessRef name="Governor"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="OPEN_BOOK_UPDATE" id="22002" dataTypeName="OPEN_BOOK_UPDATE_DATA">
<Annotation>
<Comment>Message containing open book data. Sent to a proxy due to receipt of OPEN_BOOK_UPDATE_REQ from governor.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Pix"/>
</Receivers>
</Message>
<Message name="ORDER_ENTRY1" id="545" dataTypeName="WS_INPUT">
<Annotation>
<Comment>Order Entry, entered by the clerk.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="ORDER_IN" id="90" dataTypeName="IN_ORDER">
<Annotation>
<Comment>Incoming valid order from DOT or LMT II</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="ORSP_DONE" id="880" dataTypeName="">
<Annotation>
<Comment>Operator response : completion</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="AppReceive"/>
</Receivers>
</Message>
<Message name="ORSP_REJ" id="890" dataTypeName="">
<Annotation>
<Comment>Operator response : command continued</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="AppReceive"/>
</Receivers>
</Message>
<Message name="OUR_MKT_CLOSED" id="23482" dataTypeName="">
<Annotation>
<Comment>Tell Stk that market is closed</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="PAGE_SCR_UPDATE1" id="140" dataTypeName="FIND_RSP">
<Annotation>
<Comment>Page of book screen</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PEEK_BOOK_RESP" id="10010" dataTypeName="PEEK_INFO">
<Annotation>
<Comment>peek info from book</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PEEK_INFO_REQ" id="10000" dataTypeName="PEEK_REQ">
<Annotation>
<Comment>Peek at the book request</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="PM_ACTIVITY_TA" id="31049" dataTypeName="PM_ACTIVITY_TA_DATA">
<Annotation>
<Comment>zero or more of these messages may follow a PM_ACTIVITY_UPDATE</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_ACTIVITY_UPDATE" id="31000" dataTypeName="PM_ACTIVITY_UPDATE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_CLIENT_REGISTER" id="31023" dataTypeName="PM_CLIENT_REGISTER_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_CLIENT_UPDATE" id="31038" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_CONFIG_STATE" id="31047" dataTypeName="">
<Annotation>
<Comment>recovery</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="PM_DLL_ABORT" id="31022" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_DLL_ACTIVITY" id="31044" dataTypeName="PM_DLL_ACTIVITY_DATA">
<Annotation>
<Comment>indicator only, not a msg type (PM_DLL_BLOCKED_ACTIVITY above is a msg)</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="PM_DLL_BLOCKED_ACTIVITY" id="31020" dataTypeName="PM_DLL_BLOCKED_ACTIVITY_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_DLL_END" id="31021" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_DLL_START" id="31018" dataTypeName="PM_DLL_START_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_DROP_STOCK" id="25002" dataTypeName="PM_DROP_STOCK_DATA">
<Annotation>
<Comment>Drop stock</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="FirmProxy"/>
</Receivers>
</Message>
<Message name="PM_EOD_END" id="31060" dataTypeName="PM_EOD_END_DATA">
<Annotation>
<Comment>PMP sends the status of en of day filing to Q_UP</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="PM_FIND_REQ" id="31015" dataTypeName="PM_FIND_REQ_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_FIRM_PROXY_READY" id="31011" dataTypeName="">
<Annotation>
<Comment>Firm proxy sends this message to PMP when it is ready to accept data.</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmProxy"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_ITS_NAME_CHANGE" id="31052" dataTypeName="PM_ITS_NAME_CHANGE_DATA">
<Annotation>
<Comment>Sent to the PMP whenever Stk does a Name Change on an ITS Commitment in which PRIN participates.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_MANUAL_TRADE" id="31014" dataTypeName="PM_MANUAL_TRADE_DATA">
<Annotation>
<Comment>Sent from client to inform us of a manual trade update by PRIN.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_MSG_REJECT" id="31034" dataTypeName="PM_MSG_REJECT_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_ODD_LOT_REQ" id="31004" dataTypeName="PM_ODD_LOT_REQ_DATA">
<Annotation>
<Comment>Sent by Display to request an Stock List with Odd Lost</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_ODD_LOT_UPDATE" id="31035" dataTypeName="PM_ODD_LOT_UPDATE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_OFF_SCREEN" id="31003" dataTypeName="PM_OFF_SCREEN_DATA">
<Annotation>
<Comment>Sent from Display to tell PMP that some screen is no longer up (indicated by screen handle)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_POSITION_REPORT" id="31054" dataTypeName="PRIN_TO_CROWD">
<Annotation>
<Comment>Pmp sends ZYY (Man Trade) and ZYZ (OLA) AWOS to formmatter using this message</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="PM_POSITION_UPLOAD" id="31028" dataTypeName="PM_POSITION_UPLOAD_DATA">
<Annotation>
<Comment>End-of-day specialist closing position upload</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="PM_POSPRINT_RSP" id="31056" dataTypeName="">
<Annotation>
<Comment>PMP sends and ECHO_BACK_MSG to PosPrint and asks to get PM_POSPRINT_RSP back as a response</Comment>
</Annotation>
<Senders>
<ProcessRef name="PosPrint"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_PRIN_CNTR_REQ" id="31001" dataTypeName="">
<Annotation>
<Comment>Sent from Display to request a PRIN position (Prin Counter)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_PRIN_UPDATE" id="31029" dataTypeName="PM_PRIN_UPDATE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_PRINT_TRADE_LIST_REQ" id="31053" dataTypeName="PM_PRINT_TRADE_LIST_REQ_DATA">
<Annotation>
<Comment>triggered by user request to print the PRIN Trade List</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_PRINT_TRADE_LIST_UPDATE" id="31058" dataTypeName="PM_PRINT_TRADE_LIST_UPDATE_DATA">
<Annotation>
<Comment>PMP sends back the status of the Trade List printing requests</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_PROC_DIED" id="31046" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="DLL"/>
</Receivers>
</Message>
<Message name="PM_PROC_STARTED" id="31045" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="DLL"/>
</Receivers>
</Message>
<Message name="PM_PROXY_CONFIG" id="25000" dataTypeName="PM_PROXY_CONFIG_DATA">
<Annotation>
<Comment>Configuration message with firm and stock data</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="FirmProxy"/>
</Receivers>
</Message>
<Message name="PM_PROXY_RESP" id="25001" dataTypeName="PM_PROXY_RESP_DATA">
<Annotation>
<Comment>Response message with summary (position/trade) data</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="FirmProxy"/>
</Receivers>
</Message>
<Message name="PM_PROXY_SUM_REQ" id="31027" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="FirmProxy"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_REC_CANCEL" id="31025" dataTypeName="PM_REC_CANCEL_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_REC_DETAIL_REQ" id="31016" dataTypeName="PM_REC_DETAIL_REQ_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_REC_DETAIL_UPDATE" id="31037" dataTypeName="PM_REC_DETAIL_UPDATE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_REC_EDIT_ABORT" id="31009" dataTypeName="PM_REC_EDIT_ABORT_DATA">
<Annotation>
<Comment>Sent by client taht has requested an edit of a record but is aborting that request.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_REC_EDIT_ACK" id="31032" dataTypeName="PM_REC_EDIT_ACK_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_REC_EDIT_NACK" id="31033" dataTypeName="PM_REC_EDIT_NACK_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_REC_EDIT_REQ" id="31007" dataTypeName="PM_REC_EDIT_REQ_DATA">
<Annotation>
<Comment>Sent by client wishing to edit a position record.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_REC_EDIT_SAVE" id="31008" dataTypeName="PM_REC_EDIT_SAVE_DATA">
<Annotation>
<Comment>Sent by client that has recieved permision to edit a record and is now sending the data.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_RPT_LAST_SALE" id="31010" dataTypeName="PM_RPT_LAST_SALE_DATA">
<Annotation>
<Comment>Sent by Stk to tell PMP the stk's last sale has changed and/or yesterday's closing last sale has been changed.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_SAX_ACTIVITY" id="31055" dataTypeName="PM_SAX_ACTIVITY_DATA">
<Annotation>
<Comment>Filter sends SAX activity messsages to PMP using this message</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_SCROLL_REQ" id="31006" dataTypeName="PM_SCROLL_REQ_DATA">
<Annotation>
<Comment>Sent by Display to scroll a specified screen (via screen handle) in a specified direction.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_SDOT_DBK_REJECT" id="31057" dataTypeName="PM_SDOT_DBK_REJECT_DATA">
<Annotation>
<Comment>Upon parsing a SuperDOT Reject error message, the Filter sends this to PMP so that PMP can adjust any activity PRIN had against the order indicated in the message.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_SET_USER_SORT_CRITERIA" id="31012" dataTypeName="PM_SET_USER_SORT_CRITERIA_DATA">
<Annotation>
<Comment>Sent from client to update custom user sorting criteria.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_SORT_REQ" id="31024" dataTypeName="">
<Annotation>
<Comment>Sent from client to request saved user sorting criteria.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_SORT_UPDATE" id="31050" dataTypeName="">
<Annotation>
<Comment>Sent from pmp to client to return saved user sorting criteria. This is a response to PM_SORT_REQ</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_STOCK_CONFIG_REQ" id="31041" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="PM_STOCK_CONFIG" id="31013" dataTypeName="PM_STOCK_CONFIG_DATA">
<Annotation>
<Comment>Sent from Q_UP to configure Stock Info for all stocks in workstation</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_STOCK_LIST_REQ" id="31002" dataTypeName="PM_STOCK_LIST_REQ_DATA">
<Annotation>
<Comment>Sent from Display request a Stock List</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_STOCK_LIST_UPDATE" id="31030" dataTypeName="PM_STOCK_LIST_UPDATE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_STOCK_SUMMARY_REQ" id="31005" dataTypeName="PM_STOCK_SUMMARY_REQ_DATA">
<Annotation>
<Comment>Sent by Display to request a Stock Summary Screen</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_STOCK_SUMMARY_UPDATE" id="31031" dataTypeName="PM_STOCK_SUMMARY_UPDATE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_TRADE_LIST_STALE" id="31048" dataTypeName="PM_TRADE_LIST_STALE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_TRADE_LIST_UPDATE" id="31036" dataTypeName="PM_TRADE_LIST_UPDATE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PM_WKS_CONFIG_REQ" id="31040" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="PM_YDAY_CLOSE_REQ" id="31026" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_YDAY_CLOSE_SAVE" id="31017" dataTypeName="PM_YDAY_CLOSE_SAVE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PM_YDAY_CLOSE_UPDATE" id="31039" dataTypeName="PM_YDAY_CLOSE_UPDATE_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="PMP_IS_READY" id="31051" dataTypeName="">
<Annotation>
<Comment>Sent from the PMP to the Stk in response to an ECHO_BACK_MSG from Stk. Used to determine if PMP is ready to receive activity data</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="PR_BEGIN_PRINT_JOB" id="25200" dataTypeName="PR_BEGIN_PRINT_JOB_DATA">
<Annotation>
<Comment>Request to begin a print job</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="PPRT"/>
</Receivers>
</Message>
<Message name="PR_CANCEL_PRINT_JOB" id="25206" dataTypeName="PR_CANCEL_PRINT_JOB_DATA">
<Annotation>
<Comment>Cancel request for a print job.</Comment>
</Annotation>
<Senders>
<ProcessRef name="PPRT"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PR_END_JOB_RESPONSE" id="25205" dataTypeName="PR_END_JOB_RESPONSE_DATA">
<Annotation>
<Comment>Acknowledge the result of the print job ended</Comment>
</Annotation>
<Senders>
<ProcessRef name="PPRT"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PR_END_PRINT_JOB" id="25202" dataTypeName="PR_END_PRINT_JOB_DATA">
<Annotation>
<Comment>Signals the end of the print job</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="PPRT"/>
</Receivers>
</Message>
<Message name="PR_JOB_ACK" id="25203" dataTypeName="PR_JOB_ACK_DATA">
<Annotation>
<Comment>Acknowledges the new print job by returning a handle</Comment>
</Annotation>
<Senders>
<ProcessRef name="PPRT"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PR_JOB_NACK" id="25204" dataTypeName="PR_JOB_NACK_DATA">
<Annotation>
<Comment>Rejects the new print job.</Comment>
</Annotation>
<Senders>
<ProcessRef name="PPRT"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="PR_PRINT_PAGE" id="25201" dataTypeName="PR_PRINT_PAGE_DATA">
<Annotation>
<Comment>The next page of text to print</Comment>
</Annotation>
<Senders>
<ProcessRef name="PMP"/>
</Senders>
<Receivers>
<ProcessRef name="PPRT"/>
</Receivers>
</Message>
<Message name="PRI_ORDER" id="450" dataTypeName="IN_ORDER">
<Annotation>
<Comment>Priority insert (with order text for possible reject by book)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="PSS_DOT_RPT" id="21060" dataTypeName="">
<Annotation>
<Comment>Transaction message from Intel to DOT thru PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="PSS_EFF_SEQ_ADM" id="15030" dataTypeName="RPT_MSG">
<Annotation>
<Comment>Effective sequence upload</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers/>
</Message>
<Message name="PSS_EOD_ADM" id="10300" dataTypeName="EOD_ADM_MSG">
<Annotation>
<Comment>process end of day filing</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="PSS_ITS_RPT" id="6055" dataTypeName="">
<Annotation>
<Comment>its split binary output (response,commitment,admin etc.)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="PSS_LMT_ADM_I_NDONE" id="915" dataTypeName="">
<Annotation>
<Comment>Admin msg ( indiv nd) to LMT II</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="PSS_LMT_ADM" id="16716" dataTypeName="">
<Annotation>
<Comment>Admin msg ( CXL, ND, STPSTK, etc) to LMT II</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="PSS_LMT_RPT" id="21068" dataTypeName="">
<Annotation>
<Comment>Transaction message from Intel to LMT thru PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="PSS_MDS_RPT" id="21069" dataTypeName="">
<Annotation>
<Comment>Transaction message from Intel to MDS thru PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="PSS_ORDER_ENTRY" id="17743" dataTypeName="">
<Annotation>
<Comment>Order Entry, from Formatter to AppSend (and on to Host).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="PSS_PM_POSITION_UPLOAD" id="31042" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="PSS_TXT_REROUT" id="21076" dataTypeName="">
<Annotation>
<Comment>to send back non-accepted order text for DI/AN printing</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="PTR_RECONFIG" id="1010" dataTypeName="">
<Annotation>
<Comment>X.25 Printer address reconfiguration</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="MCS_P"/>
</Receivers>
</Message>
<Message name="Q_UP_EOD_END_TIMEOUT" id="791" dataTypeName="">
<Annotation>
<Comment>Message to Q_UP: Check if APPROUTE and PMP have returned eod end messages</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="QUOTE_ASSIST_CEASE_TIMESTAMP" id="10742" dataTypeName="QUOTE_ASSIST_CEASE_TIMESTAMP_DATA">
<Annotation>
<Comment>Log message to support NYSE Survalence in verifying compliance with SEC Rule 11Ac1-4 (30 Sec Rule). Logs orders when they stop being timed.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="QUOTE_ASSIST_CMD" id="10735" dataTypeName="">
<Annotation>
<Comment>request to turn on/off ENHANCED QUOTE ASSIST</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="QUOTE_ASSIST_TIMESTAMP" id="10740" dataTypeName="QUOTE_ASSIST_TIMESTAMP_DATA">
<Annotation>
<Comment>Log message to support NYSE Survalence in verifying compliance with SEC Rule 11Ac1-4 (30 Sec Rule). Logs quotable limits.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="QUOTE_INIT_REQ" id="26520" dataTypeName="">
<Annotation>
<Comment>Request the bid and offer parity divisor and the quote depth</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="QUOTE_INIT_RSP" id="26521" dataTypeName="QUOTE_INIT_RSP_DATA">
<Annotation>
<Comment>Response to the request of parity divisor and quote depth</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="QUOTE_REQ" id="15570" dataTypeName="QUOTE_REQ_DATA">
<Annotation>
<Comment>Request from Display for quote and quote (and reduce info if bit set)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="QUOTE_RSP" id="15575" dataTypeName="QUOTE_RSP_DATA">
<Annotation>
<Comment>Response to QUOTE_REQ containing quote and possibly quote and reduce info</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="QUOTE_TIMER_IN" id="10730" dataTypeName="QUOTE_TIMER">
<Annotation>
<Comment>Quote assistant timer</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RAW_SCREEN_IMAGE_MSG" id="542" dataTypeName="">
<Annotation>
<Comment>To send a "raw" (unprocessed) "snapshot" copy of the screen to the FORMATTER for screen printing to DI/AN cards.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="READ_CONTRAS" id="1090" dataTypeName="">
<Annotation>
<Comment>Command from PSS to read in contras file</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_REJ" id="26509" dataTypeName="REAL_NAMES_REJ_DATA">
<Annotation>
<Comment>Reject to the Display that Real Names cannot be committed</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_REQ" id="26506" dataTypeName="REAL_NAMES_REQ_DATA">
<Annotation>
<Comment>Committing the Real Names Transaction</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_RSP" id="26508" dataTypeName="">
<Annotation>
<Comment>Response to the Display that Real Names is good to be committed</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_SR_SYNC_REQ" id="26510" dataTypeName="SR_SYNC_REQ_DATA">
<Annotation>
<Comment>Sent to bring up the Smart Report template after a Real Names transaction.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_SYNC_REJ" id="26502" dataTypeName="">
<Annotation>
<Comment>Real Names template reject (no names are pending)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_SYNC_REQ" id="26500" dataTypeName="">
<Annotation>
<Comment>Real Names template request</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_SYNC_RSP" id="26501" dataTypeName="REAL_NAMES_SYNC_RSP_DATA">
<Annotation>
<Comment>Real Names template response</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_TRANSFER_REQ" id="26507" dataTypeName="REAL_NAMES_REQ_DATA">
<Annotation>
<Comment>Committing the Real Names Transaction and notify the Stk that Smart Report will REAL_NAMES_SR_SYNC_REQ will follow</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_VALIDATE_REJ" id="26505" dataTypeName="REAL_NAMES_VALIDATE_REJ_DATA">
<Annotation>
<Comment>Real Names validate only reject (contain the highest priority error)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_VALIDATE_REQ" id="26503" dataTypeName="REAL_NAMES_VALIDATE_REQ_DATA">
<Annotation>
<Comment>Real Names validate only request</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="REAL_NAMES_VALIDATE_RSP" id="26504" dataTypeName="REAL_NAMES_VALIDATE_RSP_DATA">
<Annotation>
<Comment>Real Names validate only response (contain only warnings)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="RECONFIG" id="975" dataTypeName="">
<Annotation>
<Comment>Workstation reconfiguration information, no stock info.</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="REJ_ORDER" id="19026" dataTypeName="">
<Annotation>
<Comment>data_log of order rejected by filter (not a real msg)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="REPLY_TIMEOUT" id="99" dataTypeName="">
<Annotation>
<Comment>Timeout msg for the process expects a reply message.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="Any"/>
</Receivers>
</Message>
<Message name="REPORT_CORRECTION" id="491" dataTypeName="REPORT_CORRECTION_DATA">
<Annotation>
<Comment>To send a report correction to the Formatter</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="REPORT_SIDECAR_ADMINS" id="10713" dataTypeName="OARS_ADMIN_REQ">
<Annotation>
<Comment>Sidecar Admin Requests</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="REPORT_STATUS" id="92" dataTypeName="IN_ORDER">
<Annotation>
<Comment>report status of the specified order</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="REQ_STATUS" id="91" dataTypeName="">
<Annotation>
<Comment>request status from DOT [this msg type never used!!]</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RESET_STK" id="21330" dataTypeName="STK_INFO">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="RESTP_SYNC" id="1200" dataTypeName="">
<Annotation>
<Comment>To synchronize on the start of a Re-Stop Market operation</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RESUME_SUBSCRIBER" id="23459" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="RPT_BLOCK" id="390" dataTypeName="BLOCK_RPT">
<Annotation>
<Comment>To perform a execution of OARS and limit orders</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_CXL_DROP_DEL" id="373" dataTypeName="EXE_RPT">
<Annotation>
<Comment>To do a Cancel, Drop or Delete via Individual Report template, or Fast Cancel or Fast Group Cancel</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_DEFAULTS" id="160" dataTypeName="DEFAULTS">
<Annotation>
<Comment>Execution defaults and Synchronization</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="RPT_EXEC_SYNC_REJ" id="26533" dataTypeName="RPT_EXEC_SYNC_REJ_DATA">
<Annotation>
<Comment>Response to the Display that the Individual Report cannot come up</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_EXEC_SYNC_REQ" id="26531" dataTypeName="">
<Annotation>
<Comment>Request the Individual Report to come up</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_EXEC_SYNC_RSP" id="26532" dataTypeName="">
<Annotation>
<Comment>Response to the Display that the Individual Report could come up</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_EXEC" id="370" dataTypeName="EXE_RPT">
<Annotation>
<Comment>To perform an execution of a set of orders</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_MOC_ADMINS_NO_ACK" id="236" dataTypeName="OARS_ADMIN_REQ">
<Annotation>
<Comment>To identify the reporting of MOC admin functions</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_MOC_ADMINS" id="235" dataTypeName="OARS_ADMIN_REQ">
<Annotation>
<Comment>To identify the reporting of MOC admin functions</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_MOC" id="395" dataTypeName="BLOCK_RPT">
<Annotation>
<Comment>To perform a execution of MOC and limit orders</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_OARS_ADMINS_NO_ACK" id="231" dataTypeName="OARS_ADMIN_REQ">
<Annotation>
<Comment>To identify the reporting of OARS admin functions</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_OARS_ADMINS_OARS_ON" id="232" dataTypeName="OARS_ADMIN_REQ">
<Annotation>
<Comment>To identify the reporting of OARS_ON admin functions</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_OARS_ADMINS" id="230" dataTypeName="OARS_ADMIN_REQ">
<Annotation>
<Comment>To identify the reporting of OARS admin functions</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_QUOTE_REJ" id="26523" dataTypeName="RPT_QUOTE_REJ_DATA">
<Annotation>
<Comment>Reject to the Display that the quote cannot be updated</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="RPT_QUOTE_RSP" id="26522" dataTypeName="">
<Annotation>
<Comment>Response to the Display that the quote could be updated</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_QUOTE" id="410" dataTypeName="QUOTE">
<Annotation>
<Comment>Ship quote info from display to book</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_REJECT1" id="400" dataTypeName="REJECT_REPORT">
<Annotation>
<Comment>To reject a Report</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="RPT_RESTOP_MKTS" id="385" dataTypeName="STOP_MKTS">
<Annotation>
<Comment>To restop a group of market orders</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_STOP_LMT" id="381" dataTypeName="STOP_LMT">
<Annotation>
<Comment>To stop an individual limit order</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_STOP_MKTS" id="380" dataTypeName="STOP_MKTS">
<Annotation>
<Comment>To stop a group of market orders</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_SYNC" id="200" dataTypeName="RPT_TYPE">
<Annotation>
<Comment>To synchronize on the start of a report &amp; receive Defaults</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RPT_TRADE" id="420" dataTypeName="MKT_TRADE">
<Annotation>
<Comment>Ship market trade info from display to book</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="RSP_TIMEOUT" id="620" dataTypeName="">
<Annotation>
<Comment>signals response timeout to OCI</Comment>
</Annotation>
<Senders>
<ProcessRef name="OCI"/>
</Senders>
<Receivers>
<ProcessRef name="OCI"/>
</Receivers>
</Message>
<Message name="SAVE_BUDDY_STATE" id="10505" dataTypeName="">
<Annotation>
<Comment>save the whole buddy state data in the savq</Comment>
</Annotation>
<Senders>
<ProcessRef name="MessageWindowDB"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowDB"/>
</Receivers>
</Message>
<Message name="SCREEN_UPDATE" id="30000" dataTypeName="UPDATE_SCREENS">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="SCROLL_RQST" id="330" dataTypeName="SCROLL">
<Annotation>
<Comment>To request a scrolling of a particular screen</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SEL_SYNC_RSP" id="26530" dataTypeName="">
<Annotation>
<Comment>Response to the SEL_SYNC</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="SEL_SYNC" id="210" dataTypeName="">
<Annotation>
<Comment>To synchronize on the start of a Order selection</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SELF_CANCEL_TIMER_IN" id="24000" dataTypeName="SELF_CANCEL_TIMER_IN_DATA">
<Annotation>
<Comment>Notify stk when a timer for self-canceling order has expired</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SET_AMEX" id="10320" dataTypeName="">
<Annotation>
<Comment>set stk_exchange flag</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SEVA_CMD" id="836" dataTypeName="">
<Annotation>
<Comment>Seva test command from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="SHOW_MSGS_IN_Q" id="10270" dataTypeName="MSGS_IN_Q">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="SIDECAR_CLEAR" id="10709" dataTypeName="">
<Annotation>
<Comment>Sidecar Clear Message from Xclient (clear report template)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SIDECAR_DELETE_RQST" id="10705" dataTypeName="SIGNAL_DATA">
<Annotation>
<Comment>Sidecar Message-Window Menu: "Message Remove" Menu Item</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
<ProcessRef name="MessageWindowEP"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SIDECAR_IN" id="10707" dataTypeName="AR_IN_OARS">
<Annotation>
<Comment>Sidecar Message from Host</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SIDECAR_REPORT" id="526" dataTypeName="">
<Annotation>
<Comment>To send a SIDECAR report to the Formatter</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="SIDECAR_RPT_RQST" id="10708" dataTypeName="SIDECAR_RPT_MSG">
<Annotation>
<Comment>Sidecar Report from Display</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SIDECAR_RPT_TMPLT_RQST" id="10706" dataTypeName="SIGNAL_DATA">
<Annotation>
<Comment>Sidecar Message-Window Menu: "Report Sidecar" Menu Item</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
<ProcessRef name="MessageWindowEP"/>
</Senders>
<Receivers>
<ProcessRef name="MessageWindowEP"/>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SIDECAR_RPT_TMPLT_RSP" id="10711" dataTypeName="">
<Annotation>
<Comment>Send Sidecar Report Template information to the Xclient</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="SIDECAR_RPT_TMPLT_UPDATE" id="10714" dataTypeName="">
<Annotation>
<Comment>Send Sidecar Report Template Update information to the Xclient</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="SMART_FIND_RQST" id="321" dataTypeName="">
<Annotation>
<Comment>To request a SmartFind</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SMART_FIND_UPDATE" id="151" dataTypeName="SMART_FIND_RSP">
<Annotation>
<Comment>Update for SmartFind screen</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="SP_ADD_FIRM" id="25026" dataTypeName="">
<Annotation>
<Comment>MMAN queuing Mt AddFirm command</Comment>
</Annotation>
<Senders>
<ProcessRef name="SpfGovernor"/>
</Senders>
<Receivers>
<ProcessRef name="SpfGovernor"/>
</Receivers>
</Message>
<Message name="SP_CONFIG_FIRM" id="25018" dataTypeName="SP_CONFIG_FIRM_DATA">
<Annotation>
<Comment>Config message, firm name assignment by firm-gov</Comment>
</Annotation>
<Senders>
<ProcessRef name="SpfGovernor"/>
</Senders>
<Receivers>
<ProcessRef name="Firm"/>
</Receivers>
</Message>
<Message name="SP_DROP_FIRM" id="25027" dataTypeName="SP_DROP_FIRM_DATA">
<Annotation>
<Comment>MMAN queuing Mt DropFirm command</Comment>
</Annotation>
<Senders>
<ProcessRef name="SpfGovernor"/>
</Senders>
<Receivers>
<ProcessRef name="SpfGovernor"/>
</Receivers>
</Message>
<Message name="SP_FIND_REQ" id="25028" dataTypeName="SP_FIND_REQ_DATA">
<Annotation>
<Comment>Request trade list with details</Comment>
</Annotation>
<Senders>
<ProcessRef name="Spf firmproxy"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="SP_FIRM_DROPPED" id="25021" dataTypeName="">
<Annotation>
<Comment>Firm drooped message</Comment>
</Annotation>
<Senders>
<ProcessRef name="SpfGovernor"/>
</Senders>
<Receivers>
<ProcessRef name="FirmRouter"/>
</Receivers>
</Message>
<Message name="SP_FIRM_READY" id="25020" dataTypeName="">
<Annotation>
<Comment>Inform router once a generic process is configured with a firm name successfully.</Comment>
</Annotation>
<Senders>
<ProcessRef name="SpfGovernor"/>
</Senders>
<Receivers>
<ProcessRef name="FirmRouter"/>
</Receivers>
</Message>
<Message name="SP_FIRM_RESP" id="25024" dataTypeName="">
<Annotation>
<Comment>Data response</Comment>
</Annotation>
<Senders>
<ProcessRef name="Firm"/>
</Senders>
<Receivers>
<ProcessRef name="HTTP"/>
</Receivers>
</Message>
<Message name="SP_FIRM_START" id="25015" dataTypeName="">
<Annotation>
<Comment>Firm acklowdgement after a successful config</Comment>
</Annotation>
<Senders>
<ProcessRef name="Firm"/>
</Senders>
<Receivers>
<ProcessRef name="FirmRouter"/>
</Receivers>
</Message>
<Message name="SP_FIRMS_CONFIG" id="25025" dataTypeName="">
<Annotation>
<Comment>spf governor recovery</Comment>
</Annotation>
<Senders>
<ProcessRef name="SpfGovernor"/>
</Senders>
<Receivers>
<ProcessRef name="SpfGovernor"/>
</Receivers>
</Message>
<Message name="SP_GOV_NOTIFY" id="25017" dataTypeName="SP_GOV_NOTIFY_DATA">
<Annotation>
<Comment>Notification message when either router or firm dies</Comment>
</Annotation>
<Senders>
<ProcessRef name="SpfGovernor"/>
</Senders>
<Receivers>
<ProcessRef name="Firm"/>
<ProcessRef name="FirmRouter"/>
</Receivers>
</Message>
<Message name="SP_GOV_REGISTER" id="25016" dataTypeName="SP_GOV_REGISTER_DATA">
<Annotation>
<Comment>Registration message</Comment>
</Annotation>
<Senders>
<ProcessRef name="Firm"/>
<ProcessRef name="FirmRouter"/>
</Senders>
<Receivers>
<ProcessRef name="SpfGovernor"/>
</Receivers>
</Message>
<Message name="SP_HTTP_SEND" id="25023" dataTypeName="">
<Annotation>
<Comment>Data request</Comment>
</Annotation>
<Senders>
<ProcessRef name="HTTP"/>
</Senders>
<Receivers>
<ProcessRef name="Firm"/>
</Receivers>
</Message>
<Message name="SP_IAMALIVE" id="25038" dataTypeName="">
<Annotation>
<Comment>Heartbeat message. (To replace SP_PROXY_IAMALIVE and SP_ROUTER_IAMALIVE)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Firm Proxy"/>
<ProcessRef name="Firm Router"/>
</Senders>
<Receivers>
<ProcessRef name="Firm Router"/>
<ProcessRef name="Firm Proxy"/>
</Receivers>
</Message>
<Message name="SP_PROC" id="25022" dataTypeName="SP_PROC_DATA">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="SpfGovernor"/>
</Senders>
<Receivers>
<ProcessRef name="SpfGovernor"/>
</Receivers>
</Message>
<Message name="SP_PROXY_CONFIG" id="25006" dataTypeName="SP_PROXY_CONFIG_DATA">
<Annotation>
<Comment>Configuration information forwarded to router by proxy</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmProxy"/>
</Senders>
<Receivers>
<ProcessRef name="FirmRouter"/>
</Receivers>
</Message>
<Message name="SP_PROXY_IAMALIVE" id="25008" dataTypeName="SP_PROXY_IAMALIVE_DATA">
<Annotation>
<Comment>Heartbeat message</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmProxy"/>
</Senders>
<Receivers>
<ProcessRef name="FirmRouter"/>
</Receivers>
</Message>
<Message name="SP_PROXY_REFRESH" id="25005" dataTypeName="SP_PROXY_REFRESH_DATA">
<Annotation>
<Comment>Refresh request after a recovery</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmProxy"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="SP_PROXY_RESP" id="25007" dataTypeName="">
<Annotation>
<Comment>Data response forwarded to router by proxy</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmProxy"/>
</Senders>
<Receivers>
<ProcessRef name="FirmRouter"/>
</Receivers>
</Message>
<Message name="SP_PROXY_START" id="25003" dataTypeName="SP_PROXY_START_DATA">
<Annotation>
<Comment>Start sending data request</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmProxy"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="SP_PROXY_STOP" id="25004" dataTypeName="SP_PROXY_STOP_DATA">
<Annotation>
<Comment>Stop sending data request</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmProxy"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="SP_ROUTER_CONFIG" id="25013" dataTypeName="">
<Annotation>
<Comment>Configuration forward to firm</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmRouter"/>
</Senders>
<Receivers>
<ProcessRef name="Firm"/>
</Receivers>
</Message>
<Message name="SP_ROUTER_IAMALIVE" id="25009" dataTypeName="">
<Annotation>
<Comment>Heartbeat message</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmRouter"/>
</Senders>
<Receivers>
<ProcessRef name="FirmProxy"/>
</Receivers>
</Message>
<Message name="SP_ROUTER_REFRESH" id="25011" dataTypeName="SP_ROUTER_REFRESH_DATA">
<Annotation>
<Comment>Refresh request after a recovery</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmRouter"/>
</Senders>
<Receivers>
<ProcessRef name="FirmProxy"/>
</Receivers>
</Message>
<Message name="SP_ROUTER_RESP" id="25014" dataTypeName="">
<Annotation>
<Comment>Summary (position/trade) forward to firm</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmRouter"/>
</Senders>
<Receivers>
<ProcessRef name="Firm"/>
</Receivers>
</Message>
<Message name="SP_ROUTER_RESTART" id="25012" dataTypeName="SP_ROUTER_RESTART_DATA">
<Annotation>
<Comment>Start looking for a firm name, after a firm recovery</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmRouter"/>
</Senders>
<Receivers>
<ProcessRef name="FirmProxy"/>
</Receivers>
</Message>
<Message name="SP_ROUTER_START" id="25010" dataTypeName="">
<Annotation>
<Comment>Start sending data</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmRouter"/>
</Senders>
<Receivers>
<ProcessRef name="FirmProxy"/>
</Receivers>
</Message>
<Message name="SP_SCROLL_REQ" id="25029" dataTypeName="SP_SCROLL_REQ_DATA">
<Annotation>
<Comment>Request PMP to scroll through trade list</Comment>
</Annotation>
<Senders>
<ProcessRef name="Spf firmproxy"/>
</Senders>
<Receivers>
<ProcessRef name="PMP"/>
</Receivers>
</Message>
<Message name="SP_STK_CONFIG" id="25036" dataTypeName="SP_STK_CONFIG_DATA">
<Annotation>
<Comment>Stock configuration. (To replace SP_PROXY_CONFIG)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Firm Proxy"/>
</Senders>
<Receivers>
<ProcessRef name="Firm via Firm Router"/>
</Receivers>
</Message>
<Message name="SP_STK_POS_UPD" id="25037" dataTypeName="SP_STK_POS_UPD_DATA">
<Annotation>
<Comment>summary (position/trade) data. (To replace PM_PROXY_RESP when sent from Proxy to Firm via Firm Router)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Firm Proxy"/>
</Senders>
<Receivers>
<ProcessRef name="Firm via Firm Router"/>
</Receivers>
</Message>
<Message name="SP_TRADE_LIST_UPDATE" id="25030" dataTypeName="SP_TRADE_LIST_UPDATE_DATA">
<Annotation>
<Comment>Send back trade list with details</Comment>
</Annotation>
<Senders>
<ProcessRef name="Pmp"/>
</Senders>
<Receivers>
<ProcessRef name="Spf firmproxy"/>
</Receivers>
</Message>
<Message name="SP_UNCONFIG_FIRM" id="25019" dataTypeName="">
<Annotation>
<Comment>Unconfig firm and command to become a generic process</Comment>
</Annotation>
<Senders>
<ProcessRef name="SpfGovernor"/>
</Senders>
<Receivers>
<ProcessRef name="Firm"/>
</Receivers>
</Message>
<Message name="SR_RESYNC_REQ" id="15530" dataTypeName="SR_SYNC_REQ_DATA">
<Annotation>
<Comment>Request for Smart Report totals, lvs &amp; mktble qtys after a giveup change</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SR_RPT_REJECT" id="15560" dataTypeName="SR_RPT_REJ_DATA">
<Annotation>
<Comment>Response back to Display that execution may NOT proceed. Its data contains an error code.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="SR_RPT_REQ" id="15540" dataTypeName="SR_RPT_REQ_DATA">
<Annotation>
<Comment>Request for validation or execution of Smart Report</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SR_RPT_RSP" id="15550" dataTypeName="SR_RPT_RSP_DATA">
<Annotation>
<Comment>Response back to Display that execution may proceed. Its data may contain warnings and/or prompts.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SR_SYNC_REQ" id="15510" dataTypeName="SR_SYNC_REQ_DATA">
<Annotation>
<Comment>Request to generat Smart List of orders by effective sequence and to return totals</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SR_SYNC_RSP" id="15520" dataTypeName="SR_SYNC_RSP_DATA">
<Annotation>
<Comment>Response for Smart Report totals, lvs, &amp; mktble</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="SSR_EXE" id="1195" dataTypeName="SSR_DATA">
<Annotation>
<Comment>To tell Formatter task to send HOST SSR warning or execution msg. NOTE: This message is obsolete. Used only in Q-UP. Remove as soon as there is an opportunity.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="STAR_CMD" id="824" dataTypeName="">
<Annotation>
<Comment>Execute an OCI command from PSS to PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="STATS_CMD" id="790" dataTypeName="">
<Annotation>
<Comment>Request for statistics from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="STK_ACTIVE" id="170" dataTypeName="">
<Annotation>
<Comment>Notification of the given stock becoming active</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="STK_CONFIG" id="17235" dataTypeName="STK_INFO">
<Annotation>
<Comment>Configure a stock request from Q_UP</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
<ProcessRef name="Display"/>
<ProcessRef name="Filter"/>
</Receivers>
</Message>
<Message name="STK_EAT_MSG" id="19027" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="STK_FREEZE" id="313" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="STK_INACTIVE" id="180" dataTypeName="STK_INACTIVE_INFO">
<Annotation>
<Comment>Notification of the given stock becoming inactive</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="STK_OFF" id="190" dataTypeName="">
<Annotation>
<Comment>Notification of the given stock being turned off</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="STK_ORDER_ACK" id="22761" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="STK_QUEUE_REGISTRATION" id="22013" dataTypeName="STK_QUEUE_REGISTRATION_DATA">
<Annotation>
<Comment>Sent from from Stk to Filter to register a direct queue for all Filter to Stk stock related messages.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="App Router and then Filter"/>
</Receivers>
</Message>
<Message name="STK_RESET" id="21330" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="STK_STATE_MSG" id="195" dataTypeName="STK_STATE">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="STK_UNFREEZE" id="312" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="STK_UNREGISTER" id="10414" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="STP_SYNC1" id="220" dataTypeName="">
<Annotation>
<Comment>To synchronize on the start of a Stop Market operation</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="SUM_UPDATE" id="120" dataTypeName="SUM_SCREEN">
<Annotation>
<Comment>Summary screen update</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="SUSPEND_SUBSCRIBER" id="23458" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="SWOP_ACTIVITY_IN" id="28020" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="omake"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_CLEAR_DB" id="28028" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopexec"/>
</Senders>
<Receivers>
<ProcessRef name="swopctrl"/>
</Receivers>
</Message>
<Message name="SWOP_CONNECT_MSG" id="28000" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopsim2"/>
</Senders>
<Receivers>
<ProcessRef name="swopcomm"/>
</Receivers>
</Message>
<Message name="SWOP_CONNECTION_MSG" id="28001" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopsim2"/>
</Senders>
<Receivers>
<ProcessRef name="swopcomm"/>
</Receivers>
</Message>
<Message name="SWOP_DISABLE" id="28026" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopctrl"/>
</Senders>
<Receivers>
<ProcessRef name="swopclient"/>
</Receivers>
</Message>
<Message name="SWOP_DISCONNECT_MSG" id="28009" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopsim2"/>
</Senders>
<Receivers>
<ProcessRef name="swopcomm"/>
</Receivers>
</Message>
<Message name="SWOP_DLL_COMPLETE" id="28036" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="SWOPSIM"/>
</Senders>
<Receivers>
<ProcessRef name="OMAKE"/>
</Receivers>
</Message>
<Message name="SWOP_DLL" id="28016" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="omake"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_ENABLE" id="28027" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopctrl"/>
</Senders>
<Receivers>
<ProcessRef name="swopclient"/>
</Receivers>
</Message>
<Message name="SWOP_FORWARD_DBK_MSG" id="28014" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopsim2"/>
</Senders>
<Receivers>
<ProcessRef name="swopcomm"/>
</Receivers>
</Message>
<Message name="SWOP_FORWARD_MSG" id="28025" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopctrl"/>
</Senders>
<Receivers>
<ProcessRef name="swopclient"/>
</Receivers>
</Message>
<Message name="SWOP_FORWARD_OMAKE_MSG" id="28024" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopctrl"/>
</Senders>
<Receivers>
<ProcessRef name="swopclient"/>
</Receivers>
</Message>
<Message name="SWOP_GENERATE_INFO" id="28022" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="omake"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_LOAD_ACTIVITY" id="28030" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopexec"/>
</Senders>
<Receivers>
<ProcessRef name="swopctrl"/>
</Receivers>
</Message>
<Message name="SWOP_LOAD_AND_SEND_ORDER" id="28032" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopexec"/>
</Senders>
<Receivers>
<ProcessRef name="swopctrl"/>
</Receivers>
</Message>
<Message name="SWOP_LOAD_DB" id="28011" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="specbook"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_LOAD_ORDER" id="28031" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopexec"/>
</Senders>
<Receivers>
<ProcessRef name="swopctrl"/>
</Receivers>
</Message>
<Message name="SWOP_LOAD_STOCK" id="28029" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopexec"/>
</Senders>
<Receivers>
<ProcessRef name="swopctrl"/>
</Receivers>
</Message>
<Message name="SWOP_NULL_DLL" id="28018" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="omake"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_ORDER_REQUEST" id="28023" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="omake"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_RECEIVED_BBSS_MSG" id="28007" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopcomm"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_RECEIVED_DBK_MSG" id="28002" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopcomm"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_RECEIVED_MDS_MSG" id="28003" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopcomm"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_RECEIVED_MSG" id="28034" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="SWOP_SAVE_DB" id="28010" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="specbook"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_SEND_BBSS_MSG" id="28008" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopsim2"/>
</Senders>
<Receivers>
<ProcessRef name="swopcomm"/>
</Receivers>
</Message>
<Message name="SWOP_SEND_DBK_IM_ALIVE_MSG" id="28005" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopsim2"/>
</Senders>
<Receivers>
<ProcessRef name="swopcomm"/>
</Receivers>
</Message>
<Message name="SWOP_SEND_DBK_MSG" id="28004" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopsim2"/>
</Senders>
<Receivers>
<ProcessRef name="swopcomm"/>
</Receivers>
</Message>
<Message name="SWOP_SEND_MDS_MSG" id="28006" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopsim2"/>
</Senders>
<Receivers>
<ProcessRef name="swopcomm"/>
</Receivers>
</Message>
<Message name="SWOP_SEND_MSG" id="28035" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="SWOP_SEND_ORDER" id="28033" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="omake"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_SEND_ORDERS_FROM_FILE" id="28012" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="specbook"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_SEND_ORDERS" id="28013" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="specbook"/>
</Senders>
<Receivers>
<ProcessRef name="swopsim2"/>
</Receivers>
</Message>
<Message name="SWOP_STOCK_OPEN" id="28021" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders>
<ProcessRef name="swopsim2"/>
</Senders>
<Receivers>
<ProcessRef name="omakemf"/>
</Receivers>
</Message>
<Message name="SYS_SHUT_DOWN" id="40" dataTypeName="">
<Annotation>
<Comment>To inform all processes of system shutdown</Comment>
</Annotation>
<Senders/>
<Receivers>
<ProcessRef name="Any"/>
</Receivers>
</Message>
<Message name="T_ABORT_MSG" id="901" dataTypeName="">
<Annotation>
<Comment>Tandem error log message</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="T_EOD_END_MSG" id="905" dataTypeName="">
<Annotation>
<Comment>Tandem log message</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="AppReceive"/>
</Receivers>
</Message>
<Message name="T_ERR_MSG" id="902" dataTypeName="PLAIN_TEXT">
<Annotation>
<Comment>Tandem error log message</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="T_INFO_MSG" id="904" dataTypeName="">
<Annotation>
<Comment>Tandem log message</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="AppReceive"/>
</Receivers>
</Message>
<Message name="T_MSGLOG" id="900" dataTypeName="">
<Annotation>
<Comment>Tandem log message</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="T_WARN_MSG" id="903" dataTypeName="PLAIN_TEXT">
<Annotation>
<Comment>Tandem error log message</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="TCH_CALIB" id="640" dataTypeName="">
<Annotation>
<Comment>to transport touch calibration info to the touch task</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers/>
</Message>
<Message name="TDP_CONFIG_ACK" id="25034" dataTypeName="">
<Annotation>
<Comment>Send TDP's configuration data.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Firm Governor"/>
</Senders>
<Receivers>
<ProcessRef name="TDP"/>
</Receivers>
</Message>
<Message name="TDP_CONFIG_NACK" id="25035" dataTypeName="">
<Annotation>
<Comment>Nack TDP_CONFIG message</Comment>
</Annotation>
<Senders>
<ProcessRef name="TDP"/>
</Senders>
<Receivers>
<ProcessRef name="Firm Governor"/>
</Receivers>
</Message>
<Message name="TDP_CONFIG" id="25033" dataTypeName="TDP_CONFIG_DATA">
<Annotation>
<Comment>Ack TDP_CONFIG message</Comment>
</Annotation>
<Senders>
<ProcessRef name="TDP"/>
</Senders>
<Receivers>
<ProcessRef name="Firm Governor"/>
</Receivers>
</Message>
<Message name="TDP_FIND_REQ" id="25031" dataTypeName="TDP_FIND_REQ_DATA">
<Annotation>
<Comment>Route request trade list from TDP to FirmProxy</Comment>
</Annotation>
<Senders>
<ProcessRef name="TDP"/>
</Senders>
<Receivers>
<ProcessRef name="FirmProxy"/>
</Receivers>
</Message>
<Message name="TDP_TRADE_LIST_UPDATE" id="25032" dataTypeName="TDP_TRADE_LIST_UPDATE_DATA">
<Annotation>
<Comment>Route back trade list with details from FirmProxy to TDP</Comment>
</Annotation>
<Senders>
<ProcessRef name="FirmProxy"/>
</Senders>
<Receivers>
<ProcessRef name="TDP"/>
</Receivers>
</Message>
<Message name="TEST_RQST" id="340" dataTypeName="">
<Annotation>
<Comment>To request a System exercise</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="TICK_ORDERS_FILED" id="10310" dataTypeName="DLL_TICK_INFO">
<Annotation>
<Comment>tick orders have been filed as of last night's filing status</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="TIME_CMD" id="828" dataTypeName="">
<Annotation>
<Comment>reset DB2 Intel time from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="TIMER_REGISTRATION" id="1170" dataTypeName="REGISTRATION_MSG">
<Annotation>
<Comment>request for msg returned at a specified interval</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="DBTime"/>
</Receivers>
</Message>
<Message name="TIMER_TEST_IN" id="26535" dataTypeName="">
<Annotation>
<Comment>NOTE: This message is for the purpose of testing only! Stk requests the DBTime process to send Stk these messages when Stk is exercising its Timer Management classes. THIS MESSAGE SHOULD NOT APPEAR IN A PRODUCTION DISPLAY BOOK LOG!</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="TLACK" id="575" dataTypeName="">
<Annotation>
<Comment>To inform the Display that a transaction has been LACK'd by PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="TNACK" id="576" dataTypeName="">
<Annotation>
<Comment>To inform the Display that a transaction has been LNACK'd by PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="TRADING_HALT" id="26534" dataTypeName="">
<Annotation>
<Comment>Notification about Trading Halt (user chose MISC/OARS ON/S1)</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="TRANS_ABORT" id="315" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="TRS_ORDER_ACK" id="22861" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="TSENT" id="570" dataTypeName="">
<Annotation>
<Comment>To inform the Display that a transaction has been sent out</Comment>
</Annotation>
<Senders>
<ProcessRef name="Formatter"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="TURN_BLOCK_OFF" id="23306" dataTypeName="">
<Annotation>
<Comment>turning app_send blocking on/off</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="TURN_BLOCK_ON" id="23305" dataTypeName="">
<Annotation>
<Comment>turning app_send blocking on/off</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="TXT_REROUT" id="21074" dataTypeName="TEXT">
<Annotation>
<Comment>To send a text msg (order) to the formatter for sending to PSS.</Comment>
</Annotation>
<Senders>
<ProcessRef name="Filter"/>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="ULL_END" id="785" dataTypeName="">
<Annotation>
<Comment>Notification of orderly termination of UPLOAD Request</Comment>
</Annotation>
<Senders>
<ProcessRef name="DLL"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="UNFREEZE" id="310" dataTypeName="">
<Annotation>
<Comment>To resume ther processing of incoming traffic to Database</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="UNIV_RPT_SYNC" id="205" dataTypeName="">
<Annotation>
<Comment>To synchronize on the start of a universal report</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="VALIDATE_SLMT_RQST" id="382" dataTypeName="STOP_LMT">
<Annotation>
<Comment>To verify stopping an individual limit order</Comment>
</Annotation>
<Senders>
<ProcessRef name="Display"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="VALIDATE_SLMT_RSP" id="383" dataTypeName="VALIDATE_SLMT_RSP_DATA">
<Annotation>
<Comment>Result of verify stopping an individual limit order</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="VC_ABORTED" id="10260" dataTypeName="">
<Annotation>
<Comment>Msg to sweeper and keyboard that helpers have been terminated</Comment>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="VERS_CMD" id="820" dataTypeName="">
<Annotation>
<Comment>Request for system version number from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="VERSION_MSG" id="5095" dataTypeName="">
<Annotation>
<Comment>a process can log its's version</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="WDW_UPDATE" id="130" dataTypeName="">
<Annotation>
<Comment>Summary screen update</Comment>
</Annotation>
<Senders>
<ProcessRef name="Stk"/>
</Senders>
<Receivers>
<ProcessRef name="Display"/>
</Receivers>
</Message>
<Message name="WINDOW_CMD" id="856" dataTypeName="">
<Annotation>
<Comment>Change N_OUTSTANDING (# outstanding transactions max) from PSS</Comment>
</Annotation>
<Senders>
<ProcessRef name="AppReceive"/>
</Senders>
<Receivers>
<ProcessRef name="Q_UP"/>
</Receivers>
</Message>
<Message name="WKS_CONFIG1" id="17239" dataTypeName="WS_INFO">
<Annotation>
<Comment>Workstation configuration information</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
<ProcessRef name="Display"/>
<ProcessRef name="Filter"/>
<ProcessRef name="Keyin"/>
<ProcessRef name="Touch"/>
<ProcessRef name="Formatter"/>
</Receivers>
</Message>
<Message name="X_L_CLEAR" id="672" dataTypeName="">
<Annotation>
<Comment>Cmd by Q_UP to AppSend cmd queue to flush xmission buffer</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="AppSend"/>
</Receivers>
</Message>
<Message name="X25_ADDR_UPDATE" id="24001" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="X25_STATE_UPDATE" id="24002" dataTypeName="">
<Annotation>
<Comment/>
</Annotation>
<Senders/>
<Receivers/>
</Message>
<Message name="XACC_STATS_CMD" id="789" dataTypeName="">
<Annotation>
<Comment>Request for statistics from BOOK</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="XPRESS_CUTOFF_TIMER_IN" id="26537" dataTypeName="XPRESS_CUTOFF_TIMER_IN_DATA">
<Annotation>
<Comment>Stk requests the DBTime process to send Stk these messages when the XPress Cutoff Time arrives. See the Institutional XPress GDS</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="XPRESS_QUOTE_TIMER_IN" id="10731" dataTypeName="XPRESS_QUOTE_TIMER_DATA">
<Annotation>
<Comment>XPress quote timer</Comment>
</Annotation>
<Senders>
<ProcessRef name="DBTime"/>
</Senders>
<Receivers>
<ProcessRef name="Stk"/>
</Receivers>
</Message>
<Message name="XREF_ENV" id="5089" dataTypeName="ENV_XREF">
<Annotation>
<Comment>Used to cross reference Task with environment variable read. (For use by replay, this may be incorporated into mman in the near future).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="XREF_EXE" id="5088" dataTypeName="EXE_XREF">
<Annotation>
<Comment>Used to cross reference Task with invocation arguments. (For use by replay, this may be incorporated into mman in the near future).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Any"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="XREF_Q" id="5084" dataTypeName="Q_XREF">
<Annotation>
<Comment>Used to cross reference Queue Name and a unique short QID. (For VL use).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="XREF_QSET" id="5085" dataTypeName="">
<Annotation>
<Comment>Used to cross reference Qset Name and a unique short QSID. (For VL use).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="XREF_STOCK" id="5087" dataTypeName="STOCK_XREF">
<Annotation>
<Comment>Used to cross reference a Stock's name (when added) and a the stock id (which is a unique short. (For VL use).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
<Message name="XREF_TASK" id="5086" dataTypeName="TASK_XREF">
<Annotation>
<Comment>Used to cross reference Tasks and a unique short. (For VL use).</Comment>
</Annotation>
<Senders>
<ProcessRef name="Q_UP"/>
</Senders>
<Receivers>
<ProcessRef name="log"/>
</Receivers>
</Message>
</Messages>
<Processes xmlns:loc="http://www.siac.com/makeFlatRepository.xsl" xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance">
<Process name="AppReceive" executable="app_receive" vob="hiab" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description/>
</Annotation>
<FullName>Application Receive Host Interface Process</FullName>
</Process>
<Process name="AppRouter" executable="approute" vob="hiab" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description>
			The software process that routes order and report traffic from/to an
			HIA to/from a STK process. The AR is also the agent that configures
			the STK processes (assigns a stock to a STK process).  The A/R
			process is central to the initialization, configuration, and
			on-going operation of the virtual Intel.  For the on-going operation
			of the virtual Intel, the A/R process interfaces the HIA toward the
			STK processes and provides a replica of each of the internal queues
			of the HIA to which the STK processes enqueue.   In effect, the A/R
			acts as a router of order and report messages from/to an HIA,
			to/from STK processes. 

			Because the A/R is the creator of the queues and queue sets for all
			STK processes configured for the virtual Intel, the AR maintains all
			information (in the form of the queue id's) necessary for routing
			upstream and downstream messages. 

			Each HIA in the virtual Intel forwards to the A/R downstream
			messages that consist of orders/ admins from FI, commitments from
			iFI, and commands from Qup. The A/R uses the message type,
			workstation id, and stock id contained in the message to determine
			the identity of the destination STK process, and enqueues the
			message to the queue id for that process. 

			Each STK process in the virtual Intel enqueues upstream messages to
			queues that are all attached to one queue set. The A/R process
			dequeues from this queue set. The A/R uses the message type, stock
			id, and queue id fields in the message header to determine the
			destination queue for this message. The A/R then enqueues the
			message to the derived queue id. Upstream messages are destined to
			either the FM or Qup processes of the HIA that is implicitly
			specified by the stock id field. 
			</Description>
</Annotation>
<FullName>Application Router Process</FullName>
</Process>
<Process name="AppSend" executable="app_send" vob="hiab" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description/>
</Annotation>
<FullName>Application Send Host Interface Process</FullName>
</Process>
<Process name="DBTime" executable="dbtime1" vob="mwd" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description>
			The dbtime process provides a timeout notification service to
			requesting processes.   One dbtime process is configured for each
			virtual Intel. The service is used primarily by the STK and MWEP
			processes, but can be used by any process in the virtual Intel who
			requests it. The granularity of timeout requests is one second. 

			Interaction between dbtime and requesting processes is queue based.
			dbtime maintains a CMDQ for receiving timeout requests. The request
			message to dbtime contains the qid to which dbtime will enqueue the
			response, as well as the response message itself. 

			A request to dbtime is basically a request to "send me a message in
			# seconds".   The request contains a time increment (in seconds) and
			dbtime computes the time at which the timeout will expire and adds
			the request to its list of requests.   Note that the request
			contains the qid of the requestor as well as the message to be
			returned to the requestor. 

			dbtime operates on a one second cucle. With each activation, dbtime
			scans its request list, searching for any entry whose expiration
			time is equal to the current time. With each find, dbtime enqueues
			the requestor's message to the designated qid and removes the entry
			from the list. 

			Upon completion of its scan, dbtime checks for the arrival of new
			timer requests. Because dbtime operates on a time cycle, it uses the
			mman_dequeue_nw dequeue call, which does an immediate return if no
			messages are present. 

			dbtime also participates in the GOV death notification protocol
			(refer to the Death Notification Protocol on page 42. It registers
			with the GOV so that notifications of its death will be forwarded,
			and receives death notifications for processes that use its service.
			When dbtime receives a death notification, it removes from its list
			any timeout notification request for that process. 
			</Description>
</Annotation>
<FullName>Display Book Timer Processor</FullName>
</Process>
<Process name="Display" executable="display" vob="dspb" maxPerVintel="24" maxPerWorkstation="4">
<Annotation>
<Description/>
</Annotation>
<FullName>Display Book User Interface Process</FullName>
</Process>
<Process name="DLL" executable="dll" vob="hiab" maxPerVintel="5" maxPerWorkstation="1">
<Annotation>
<Description>
			The DLL process manages the protocol for the down load of open
			orders to the book.   A down load occurs at the start of system
			preparation of each trading day, whenever a stock is added to a
			workstation (ADD STOCK), and whenever a recovery of a failed stock
			occurs. The DLL process handles the down load for all stocks in the
			workstation. 
			</Description>
</Annotation>
<FullName>Down Line Loader Process</FullName>
</Process>
<Process name="DllReceive" executable="dll_receive" vob="hiab" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description>
			The DLL Send and DLL Receive processes provide the communications
			interfaces with the host system for down line loads of open orders
			to the book through the facilities of the CSSD. The host connection
			is a full duplex X.25 virtual circuit (termed the DLL circuit) that
			is dedicated to the DLL function, with the input and output managed
			separately by the DLL Receive and DLL Send processes respectively.
			All open order traffic is received by the DR process and forwarded
			to the DLL process.   Acknowledgments and negative acknowledgments
			generated by the DLL process are sent to the DS process for
			forwarding to the host. 
			</Description>
</Annotation>
<FullName>Down Line Receive Host Interface Process</FullName>
</Process>
<Process name="DllSend" executable="dll_send" vob="hiab" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description>
			The DLL Send and DLL Receive processes provide the communications
			interfaces with the host system for down line loads of open orders
			to the book through the facilities of the CSSD. The host connection
			is a full duplex X.25 virtual circuit (termed the DLL circuit) that
			is dedicated to the DLL function, with the input and output managed
			separately by the DLL Receive and DLL Send processes respectively.
			All open order traffic is received by the DR process and forwarded
			to the DLL process.   Acknowledgments and negative acknowledgments
			generated by the DLL process are sent to the DS process for
			forwarding to the host. 
			</Description>
</Annotation>
<FullName>Down Line Send Host Interface Process</FullName>
</Process>
<Process name="Filter" executable="filter" vob="hiab" maxPerVintel="5" maxPerWorkstation="1">
<Annotation>
<Description>
			The FiIter process does not handle DLL messages. The FiIter process
			receives order and admin messages in print image format, translates
			the message into internal Display	Book format, performs syntax and
			semantic checks, and forwards the "filtered" message to the
			AppRouter process. Any messages that fail the checks are returned to
			the host (via the AppSend process) so they may be printed at the
			post.   Since the book may reject (results in the printing of the
			reject at the post) CXL, CXL with replacement, SSHRT, and PI orders,
			the FiIter sends the translated message as well as its original
			print image to the book. 
			</Description>
</Annotation>
<FullName>Filter Process</FullName>
</Process>
<Process name="FirmProxy" executable="firmproxy" vob="srv" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description>
			To handle all traffic between a Vintel and the Firm server, resides in the 
			Display Book Vintel. Sends stock summary to SFPs. Other considerations are: 
			the ability to handle other type of data in the future. 

			Characteristics: 
			- One per Vintel (five /HP server * 35 Servers = 175 Firm Proxies) 
			- Will connect to the proper firm server using Distributed MMAN 
			- Will handle all errors and recovery between Display Book and the Firm. 
			- Generates heart beats towards firm servers. 
			- Detect if firm server failed and will initiate recovery - 
			  in the sense that if a new firm server is detected it will be used. 
			- Publish States and Statistics to the OpLite 
			- To ease recovery the firm Proxy will support operator commands. 
			  Commands to disconnect, reconnect to a firm server, stop operations, 
			  will be supported. 
			- Handle refresh requests (resyncs) for the firm server 
			- Can be constructed as generic as possible so that it will be fairly easy 
			  add other types of data 
			- The data definition between Dbk and Spf should be constructed in
			  such matter that release deployment should not be a problem. Self
			  describing structures could be used, or if that is too much, we
			  can have defining headers, which describe 
			  the data type and structure.
			</Description>
</Annotation>
<FullName>Specialist Portfolio Firm Proxy Process</FullName>
</Process>
<Process name="Formatter" executable="fmt" vob="hiab" maxPerVintel="5" maxPerWorkstation="1">
<Annotation>
<Description>
			The FM process is responsible for the translation of messages from
			the internal Display Book format into the format required by the
			host systems (SDOT and MDS).   The FM also maintains the message
			sequence discipline with the host. It keeps track of messages to the
			hosts on a transaction basis (a single transaction/trade can result
			in the generation of multiple messages for transmission to the
			host), and handles the retransmission of these messages as required. 
			</Description>
</Annotation>
<FullName>Formatter Process</FullName>
</Process>
<Process name="Governor" executable="gov" vob="hiab" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description>
			Governor Management process - provides the mechanism by which a STK
			process knows which X-Client process is providing the display
			management for its stock.   One GOV process is configured for a
			virtual Intel and provides three basic support functions for the
			application processes in the virtual Intel. These are: 
			- manage the death notification protocol for the processes in the
			  virtual Intel 
			- maintain the association between the workstations in the virtual
			  Intel and the stocks in the workstations 
			- provide the workstation/stock association to the X-client
			  processes The death notification protocol is based on a
			  registration discipline. The processes in the virtual Intel
			  register with the GOV in order to participate in the death
			  notification protocol.   The AR processes supply the workstation
			  configuration information to the GOV by a series of configuration
			  messages. The GOV maintains these workstation/stock associations
			  and supply it to the X-client processes upon request. 

			The GOV monitors all processes that have registered with it. When
			the GOV detects the death of a process it sends notifications of the
			death to other processes. The processes who are to receive a death
			notifications when a particular process dies are defined in a death
			notification cross reference table. When a process dies, the GOV
			unregisters it (removes its registration information). 

			Processes register and communicate with the GOV through the
			GOVERNOR_CMDQ. This is a well known name that can be specified in a
			process's GOV_CC_NAME environment variable. 
			</Description>
</Annotation>
<FullName>Governor Process</FullName>
</Process>
<Process name="HiaMmanCreate" executable="hia_mman_create" vob="hiab" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description/>
</Annotation>
<FullName>HIA MMAN Create Process</FullName>
</Process>
<Process name="HiaMmanDelete" executable="hia_mman_delete" vob="hiab" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description/>
</Annotation>
<FullName>HIA MMAN Delete Process</FullName>
</Process>
<Process name="IState" executable="istate" vob="hiab" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description/>
</Annotation>
<FullName>HIA IState Process</FullName>
</Process>
<Process name="ItsFilter" executable="itsfilter" vob="hiab" maxPerVintel="5" maxPerWorkstation="1">
<Annotation>
<Description>
			The ItsFiIter process is the analog of the FI process for ITS messages. 
			</Description>
</Annotation>
<FullName>Iter-Market Trading System (ITS) Filter Process</FullName>
</Process>
<Process name="MessageWindowDB" executable="mwdb" vob="mwd" maxPerVintel="5" maxPerWorkstation="1">
<Annotation>
<Description>
			The Message Window Data Base is one of software processes (the other
			is MessageWindowEP) that provide the message window service for
			Display Book applications processes. An application process may
			supply text messages to be displayed in the message window portion
			of the X-terminal screen, and can receive responses to these
			messages. 
			</Description>
</Annotation>
<FullName>Message Window Database Process</FullName>
</Process>
<Process name="MessageWindowEP" executable="mwep" vob="mwd" maxPerVintel="5" maxPerWorkstation="1">
<Annotation>
<Description>
			The Message Window Event Processor is one of software processes (the
			other is MessageWindowDB) that provide the message window service
			for Display Book applications processes.   An application process
			may supply text messages to be displayed in the message window
			portion of the X-terminal screen, and can receive responses to these
			messages. 
			</Description>
</Annotation>
<FullName>Message Window Event Processor</FullName>
</Process>
<Process name="MMP" executable="mmp" vob="srv" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description>
			A new process called Market Minder Process (MMP) will be created.
			This process will act as a bridge between the non-mman based LA and
			the mman based Display Book. There will be a one instance  of MMP
			per Virtual Intel or VINTEL.   In addition to its role as a bridge,
			MMP will:
			- Establish a reliable connection to MDD via the LA.
			- Monitor the status of the LA and MDD connection.
			- Manage subscription requests for all Display Book workstations in
			  a VIntel. 
			- Forward news and away market quote info to a Stk processes so that
			  they can update the active displays.
			- Accumulate and publish per stock and aggregate statistics relating
			  to the number and rate of receipt of away market quote and news
			  alerts messages
			- Publish state change information relating to the availability of
			  the MDD/LA system.
			- Allow extensions to be made easily that would allow other away
			  market data (such as trades) to be captured and delivered to DBK
			  processes.  
			</Description>
</Annotation>
<FullName>Market Minder Process</FullName>
</Process>
<Process name="Pix" executable="pix" vob="srv" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description>
		A proxy process to the PuMP. Receives OPEN BOOK data from Stk in binary
		and sends to PuMP as SIAC Canonical Format.
			</Description>
</Annotation>
<FullName>Specialist Portfolio Firm Proxy Process</FullName>
</Process>
<Process name="PMP" executable="pmp" vob="srv" maxPerVintel="6" maxPerWorkstation="1">
<Annotation>
<Description>
			The Position Minder Process (PMP) is responsible for maintaining the
			principal activity data for all stocks on a workstation. It will
			interact with the XC to provide the dynamic and static displays of
			principle position at various levels of detail. PMP will receive
			position data from: 
			- the Stk whenever there is a trade and change to last sale.
			- the host (via filter) for Odd Lot Alarms (OLA)
			- the Dll when there is a recovery or stock move. 
			- the host (Phase 2) when there is a Sax trade or correction.  There
			  will be a one instance of PMP per Workstation.   </Description>
</Annotation>
<FullName>Position Minder Process</FullName>
</Process>
<Process name="PosPrint" executable="posPrint" vob="srv" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description>
			Provides an interface for printing to laser jet printers.
			</Description>
</Annotation>
<FullName>Pos Laser Printer Proxy Process</FullName>
</Process>
<Process name="PrefServer" executable="prefsrv" vob="hiab" maxPerVintel="5" maxPerWorkstation="1">
<Annotation>
<Description/>
</Annotation>
<FullName>Preference Server Process</FullName>
</Process>
<Process name="Q_UP" executable="q_up" vob="hiab" maxPerVintel="5" maxPerWorkstation="1">
<Annotation>
<Description>
			Qup is the command and control process for the HIA. It is started by
			an LCP process with command line parameters that specify the id of
			the virtual Intel and its workstation number. Qup has the following
			responsibilities: 
			- Create the Qsets and Queues for the other processes of the
			  complex. 
			- Start (launch) and stop the other processes of the complex. 
			- Monitor its children processes 
			- Service all control messages (commands) from the host. 
			- Configure the Filter, ItsFilter, and DLL processes. 
			- Interact with the AppRouter process to configure the STK
			  processes. 

			After Qup creates the qsets and queues and launches the other
			processes of the HIA complex, it does nothing until it receives a
			CONFIG_MSG from the PSS host, which initiates the process of
			configuring the HIA processes and the STK processes. 

			At this point, Qup does not know whether it is in an initial state
			or in a recovery state.   This knowledge is maintained by A/R. Qup
			first passes the entire CONFIG_MSG to the A/R process.   A/R
			processes according to whether this is an initial condition or an
			HIA recovery, and returns this indication to Qup. If it is a
			recovery of the failed workstation (HIA), does not reset its
			configuration time. 

			Qup then composes the WKS_CONFIG and ADD_STOCK messages for each
			stock in the CONFIG_MSG.   It sends each to the FI, iFI, and DLL
			processes in order to configure them, and to the A/R process. In an
			HIA recovery, A/R discards the ADD_STOCK commands.   Otherwise, it
			configures the previously allocated STK processes by sending the
			ADD_STOCK commands to each of the previously allocated STK
			processes. 
			</Description>
</Annotation>
<FullName>Queue Up Process</FullName>
</Process>
<Process name="StkManager" executable="stkmgr" vob="hiab" maxPerVintel="1" maxPerWorkstation="N/A">
<Annotation>
<Description>
			Controls the constructs for managing the dynamic allocation of
			stocks to a node wide pool of STK processes.   
			</Description>
</Annotation>
<FullName>Stock Manager Process</FullName>
</Process>
<Process name="Stk" executable="stk" vob="srv" maxPerVintel="250" maxPerWorkstation="28">
<Annotation>
<Description>
			The software process that performs the Display Book business
			functions and manages the stock data base. One STK process
			performs these functions for a single stock.  This includes ITS
			functionality for the stock.
			</Description>
</Annotation>
<FullName>Stock Process</FullName>
</Process>
</Processes>
<Protocols xmlns:loc="http://www.siac.com/makeFlatRepository.xsl" xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"/>
</elt:TEMPLATE>
